{"version":3,"file":"cart-summary-drawer-6ad065cb.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/CartSummaryDrawer.tsx","webpack://checkout/./packages/ui/src/modal/ConfirmationModal.tsx","webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/shipping/getShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/order/getLineItemsCount.ts","webpack://checkout/./packages/ui/src/icon/IconCloseWithBorder.tsx","webpack://checkout/./packages/core/src/app/order/OrderModalSummarySubheader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryModal.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummaryDrawer.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalTrigger.tsx"],"sourcesContent":["import React, { FunctionComponent, memo } from 'react';\n\nimport { withCheckout } from '../checkout';\nimport OrderSummaryDrawer from '../order/OrderSummaryDrawer';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport EditLink from './EditLink';\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\nimport withRedeemable from './withRedeemable';\n\nconst CartSummaryDrawer: FunctionComponent<\n    WithCheckoutCartSummaryProps & {\n        isMultiShippingMode: boolean;\n    }\n    > = ({ cartUrl, isMultiShippingMode, ...props }) =>\n    withRedeemable(OrderSummaryDrawer)({\n        ...props,\n        cartUrl,\n        headerLink: (\n            <EditLink\n                className=\"modal-header-link cart-modal-link\"\n                isMultiShippingMode={isMultiShippingMode}\n                url={\"http://ssdinternationalinc.com/cart\"}\n            />\n        ),\n    });\n\nexport default withCheckout(mapToCartSummaryProps)(memo(CartSummaryDrawer));\n","import { noop } from 'lodash';\nimport React, { ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../button';\n\nimport Modal from './Modal';\nimport ModalHeader from './ModalHeader';\n\ninterface ConfirmationModalProps {\n    headerId: string;\n    messageId: string;\n    isModalOpen: boolean;\n    onRequestClose?: () => void;\n    action: () => void;\n    actionButtonLabel?: ReactNode;\n    shouldShowCloseButton?: boolean;\n}\n\nconst ConfirmationModal = ({\n    headerId,\n    messageId,\n    isModalOpen,\n    action,\n    actionButtonLabel,\n    onRequestClose = noop,\n    shouldShowCloseButton = true,\n}: ConfirmationModalProps) => {\n    return (\n        <Modal\n            additionalModalClassName=\"modal--confirm\"\n            footer={\n                <Button onClick={action} size={ButtonSize.Small} variant={ButtonVariant.Primary}>\n                    {actionButtonLabel ?? <TranslatedString id=\"common.confirm_action\" />}\n                </Button>\n            }\n            header={\n                <ModalHeader>\n                    <span aria-live=\"assertive\" role=\"alert\">\n                        <TranslatedString id={headerId} />\n                    </span>\n                </ModalHeader>\n            }\n            isOpen={isModalOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={shouldShowCloseButton}\n        >\n            <p aria-live=\"assertive\" role=\"alert\">\n                <TranslatedString id={messageId} />\n            </p>\n        </Modal>\n    );\n};\n\nexport default ConfirmationModal;\n","import React, { FunctionComponent, memo, useState } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { ConfirmationModal } from '@bigcommerce/checkout/ui';\n\nexport interface EditLinkProps {\n    className?: string;\n    isMultiShippingMode: boolean;\n    url: string;\n}\n\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url, isMultiShippingMode }) => {\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const gotoCartPage = () => {\n        window.location.assign(url);\n    };\n\n    if (isMultiShippingMode) {\n        return (\n            <>\n                <ConfirmationModal\n                    action={gotoCartPage}\n                    headerId=\"cart.edit_cart_action\"\n                    isModalOpen={isModalOpen}\n                    messageId=\"cart.edit_multi_shipping_cart_message\"\n                    onRequestClose={() => setIsModalOpen(false)}\n                />\n                <a\n                    className={className || 'cart-header-link'}\n                    data-test=\"cart-edit-link\"\n                    href=\"#\"\n                    id=\"cart-edit-link\"\n                    onClick={preventDefault(() => setIsModalOpen(true))}\n                >\n                    <TranslatedString id=\"cart.edit_cart_action\" />\n                </a>\n            </>\n        );\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            data-test=\"cart-edit-link\"\n            href={url}\n            id=\"cart-edit-link\"\n            target=\"_top\"\n        >\n            <TranslatedString id=\"cart.edit_cart_action\" />\n        </a>\n    );\n};\n\nexport default memo(EditLink);\n","import { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToRedeemableProps from './mapToRedeemableProps';\n\nexport default function mapToCartSummaryProps(\n    context: CheckoutContextProps,\n): WithCheckoutCartSummaryProps | null {\n    const {\n        checkoutState: {\n            data: { getConfig, getCustomer, getCheckout },\n        },\n    } = context;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n    const customer = getCustomer();\n    const redeemableProps = mapToRedeemableProps(context);\n\n    if (!checkout || !config || !redeemableProps || !customer) {\n        return null;\n    }\n\n    const { isStoreCreditApplied, grandTotal } = checkout;\n    const { storeCredit } = customer;\n\n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        config.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        isShippingDiscountDisplayEnabled,\n        checkout,\n        shopperCurrency: config.shopperCurrency,\n        cartUrl: config.links.cartLink,\n        storeCurrency: config.currency,\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\n        ...redeemableProps,\n    };\n}\n","import React, { ComponentType, FunctionComponent } from 'react';\n\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\n\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport Redeemable from './Redeemable';\n\nexport default function withRedeemable(\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>,\n): FunctionComponent<WithCheckoutCartSummaryProps & { headerLink?: any }> {\n    return (props) => {\n        const {\n            checkout,\n            storeCurrency,\n            shopperCurrency,\n            headerLink,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            storeCreditAmount,\n            isShippingDiscountDisplayEnabled,\n            ...redeemableProps\n        } = props;\n\n        return (\n            <OriginalComponent\n                {...mapToOrderSummarySubtotalsProps(checkout, isShippingDiscountDisplayEnabled)}\n                additionalLineItems={\n                    <Redeemable\n                        {...{\n                            ...redeemableProps,\n                            onRemovedCoupon,\n                            onRemovedGiftCertificate,\n                        }}\n                    />\n                }\n                headerLink={headerLink}\n                lineItems={checkout.cart.lineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                total={checkout.outstandingBalance}\n            />\n        );\n    };\n}\n","import { Checkout } from '@bigcommerce/checkout-sdk';\n\nimport { OrderSummarySubtotalsProps } from '../order';\nimport { getShippingCostAfterAutomaticDiscount, hasSelectedShippingOptions } from '../shipping';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    subtotal,\n    cart: { discountAmount, isTaxIncluded },\n    giftCertificates,\n    consignments,\n    handlingCostTotal,\n    shippingCostBeforeDiscount,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n}: Checkout,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n    const allConsignmentsHaveSelectedShippingOption = hasSelectedShippingOptions(consignments);\n\n    const shippingAmount = allConsignmentsHaveSelectedShippingOption\n        ? isShippingDiscountDisplayEnabled\n            ? getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments)\n            : shippingCostBeforeDiscount\n        : undefined;\n\n    return {\n        subtotalAmount: subtotal,\n        discountAmount,\n        giftCertificates,\n        giftWrappingAmount: giftWrappingCostTotal,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled && allConsignmentsHaveSelectedShippingOption\n            ? shippingCostBeforeDiscount\n            : undefined,\n        handlingAmount: handlingCostTotal,\n        coupons,\n        taxes,\n        fees,\n        isTaxIncluded,\n    };\n}\n","import { Consignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: Consignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: Consignment) {\n    return consignment.discounts.reduce((discountTotal, discount) => {\n        return discount.type === 'AUTOMATIC' ? discountTotal + discount.amount : discountTotal;\n    }, 0);\n}\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\n\nexport default function getLineItemsCount({\n    physicalItems,\n    digitalItems,\n    giftCertificates,\n    customItems,\n}: LineItemMap): number {\n    return (\n        physicalItems.length +\n        digitalItems.length +\n        giftCertificates.length +\n        (customItems || []).length\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCloseWithBorder: FunctionComponent = () => (\n    <svg fill=\"none\" height=\"37\" viewBox=\"0 0 38 37\" width=\"38\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M38 18.5C38 28.7173 29.7173 37 19.5 37C9.28273 37 1 28.7173 1 18.5C1 8.28273 9.28273 0 19.5 0C29.7173 0 38 8.28273 38 18.5Z\"\n            fill=\"#F3F3F3\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M24.6671 24.6674L12.9998 13.0002L14.4141 11.5859L26.0813 23.2532L24.6671 24.6674Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n        <path\n            clipRule=\"evenodd\"\n            d=\"M25.6674 13.0004L14.0002 24.6676L12.5859 23.2534L24.2532 11.5862L25.6674 13.0004Z\"\n            fill=\"black\"\n            fillRule=\"evenodd\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconCloseWithBorder);\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport getItemsCount from './getItemsCount';\n\nexport interface OrderModalSummarySubheaderProps {\n    items: LineItemMap\n    amountWithCurrency: ReactNode;\n    shopperCurrencyCode: string;\n    storeCurrencyCode: string;\n}\n\nconst OrderModalSummarySubheader: FunctionComponent<OrderModalSummarySubheaderProps> = ({\n    items,\n    shopperCurrencyCode,\n    storeCurrencyCode,\n    amountWithCurrency,\n}) => {\n    const itemsCount = getItemsCount(items);\n    const hasDifferentCurrency = shopperCurrencyCode !== storeCurrencyCode;\n    const itemsText = itemsCount === 1 ? 'cart.item' : 'cart.items';\n\n    return <>\n        {itemsCount} <TranslatedString id={itemsText} /> | {amountWithCurrency} {\n            hasDifferentCurrency && <span>({shopperCurrencyCode})</span>\n        }\n    </>;\n};\n\nexport default memo(OrderModalSummarySubheader);\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport React, { cloneElement, FunctionComponent, isValidElement, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { Button, IconCloseWithBorder } from '@bigcommerce/checkout/ui';\n\nimport { ShopperCurrency } from '../currency';\nimport { Modal, ModalHeader } from '../ui/modal';\nimport { isSmallScreen } from '../ui/responsive';\n\nimport OrderModalSummarySubheader from './OrderModalSummarySubheader';\nimport OrderSummaryItems from './OrderSummaryItems';\nimport OrderSummaryPrice from './OrderSummaryPrice';\nimport OrderSummarySection from './OrderSummarySection';\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport OrderSummaryTotal from './OrderSummaryTotal';\n\nexport interface OrderSummaryDrawerProps {\n    additionalLineItems?: ReactNode;\n    items: LineItemMap;\n    total: number;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    isOpen: boolean;\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    onRequestClose?(): void;\n    onAfterOpen?(): void;\n}\n\nconst OrderSummaryModal: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    children,\n    isTaxIncluded,\n    taxes,\n    onRequestClose,\n    onAfterOpen,\n    storeCurrency,\n    shopperCurrency,\n    isOpen,\n    headerLink,\n    items,\n    total,\n    ...orderSummarySubtotalsProps\n}) => {\n        const displayInclusiveTax = isTaxIncluded && taxes && taxes.length > 0;\n\n        const subHeaderText = <OrderModalSummarySubheader\n            amountWithCurrency={<ShopperCurrency amount={total} />}\n            items={items}\n            shopperCurrencyCode={shopperCurrency.code}\n            storeCurrencyCode={storeCurrency.code}\n        />;\n\n        const continueButton = isSmallScreen() && <Button\n            className='cart-modal-continue'\n            data-test=\"manage-instrument-cancel-button\"\n            onClick={preventDefault(onRequestClose)}>\n            <TranslatedString id=\"cart.return_to_checkout\" />\n        </Button>;\n\n        return <Modal\n            additionalBodyClassName=\"cart-modal-body optimizedCheckout-orderSummary\"\n            additionalHeaderClassName=\"cart-modal-header optimizedCheckout-orderSummary with-continue-button\"\n            additionalModalClassName=\"optimizedCheckout-cart-modal\"\n            footer={continueButton}\n            header={renderHeader({\n                headerLink,\n                subHeaderText,\n                onRequestClose,\n            })}\n            isOpen={isOpen}\n            onAfterOpen={onAfterOpen}\n            onRequestClose={onRequestClose}\n        >\n            <OrderSummarySection>\n                <OrderSummaryItems displayLineItemsCount={false} items={items} />\n            </OrderSummarySection>\n            <OrderSummarySection>\n                <OrderSummarySubtotals isTaxIncluded={isTaxIncluded} taxes={taxes} {...orderSummarySubtotalsProps} />\n                {additionalLineItems}\n            </OrderSummarySection>\n            <OrderSummarySection>\n                <div\n                    style={{\n                        backgroundColor: '#fffbe6',\n                        border: '1px solid #ffe58f',\n                        borderRadius: '4px',\n                        padding: '16px 20px',\n                        margin: '20px auto',\n                        maxWidth: '600px',\n                        fontFamily: '\"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif',\n                        color: '#614700',\n                        boxShadow: '0 4px 12px rgba(0,0,0,0.05)',\n                        fontSize: '14px',\n                        lineHeight: '1.6',\n                    }}\n                >\n                    <strong style={{ display: 'block', fontSize: '16px', marginBottom: '8px' }}>\n                        Important Notice\n                    </strong>\n                    To complete your order, you will need to submit the required credentials via email. Detailed instructions will be provided to you after checkout. If you do not send your credentials, your order will not be processed.\n                    <div style={{ marginTop: '12px' }}>\n                        <strong>Note:</strong> If your order includes <strong>ammunition</strong>, you must also include a scan or photo of a valid government-issued photo ID.\n                    </div>\n                </div>\n\n\n                <OrderSummaryTotal\n                    orderAmount={total}\n                    shopperCurrencyCode={shopperCurrency.code}\n                    storeCurrencyCode={storeCurrency.code}\n                />\n            </OrderSummarySection>\n            {displayInclusiveTax && <OrderSummarySection>\n                <h5\n                    className=\"cart-taxItem cart-taxItem--subtotal optimizedCheckout-contentPrimary\"\n                    data-test=\"tax-text\"\n                >\n                    <TranslatedString\n                        id=\"tax.inclusive_label\"\n                    />\n                </h5>\n                {(taxes || []).map((tax, index) => (\n                    <OrderSummaryPrice\n                        amount={tax.amount}\n                        key={index}\n                        label={tax.name}\n                        testId=\"cart-taxes\"\n                    />\n                ))}\n            </OrderSummarySection>}\n        </Modal>\n    };\n\nconst renderHeader: FunctionComponent<{\n    headerLink?: ReactNode & React.HTMLProps<HTMLDivElement>;\n    subHeaderText: ReactNode;\n    onRequestClose?(): void;\n}> = ({ onRequestClose, headerLink, subHeaderText }) => {\n    let newHeaderLink;\n\n    if (isValidElement(headerLink)) {\n        newHeaderLink = cloneElement(headerLink, { className: 'modal-header-link cart-modal-link test' });\n    }\n\n    return <>\n        {newHeaderLink ?? headerLink}\n        <ModalHeader additionalClassName=\"cart-modal-title\">\n            <div>\n                <TranslatedString id=\"cart.cart_heading\" />\n                <div className='cart-heading-subheader'>{subHeaderText}</div>\n            </div>\n        </ModalHeader>\n        <a className=\"cart-modal-close\" href=\"#\" onClick={preventDefault(onRequestClose)}>\n            <span className=\"is-srOnly\">\n                <TranslatedString id=\"common.close_action\" />\n            </span>\n            <IconCloseWithBorder />\n        </a>\n    </>\n};\n\nexport default OrderSummaryModal;\n","import {\n    LineItemMap,\n    ShopperCurrency as ShopperCurrencyType,\n    StoreCurrency,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { ShopperCurrency } from '../currency';\nimport { IconGiftCertificate } from '../ui/icon';\nimport { ModalTrigger } from '../ui/modal';\n\nimport getItemsCount from './getItemsCount';\nimport getLineItemsCount from './getLineItemsCount';\nimport OrderSummaryModal from './OrderSummaryModal';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\nimport removeBundledItems from './removeBundledItems';\n\nexport interface OrderSummaryDrawerProps {\n    lineItems: LineItemMap;\n    total: number;\n    headerLink: ReactNode;\n    storeCurrency: StoreCurrency;\n    shopperCurrency: ShopperCurrencyType;\n    additionalLineItems?: ReactNode;\n}\n\nconst OrderSummaryDrawer: FunctionComponent<\n    OrderSummaryDrawerProps & OrderSummarySubtotalsProps\n> = ({\n    additionalLineItems,\n    coupons,\n    discountAmount,\n    giftCertificates,\n    handlingAmount,\n    headerLink,\n    isTaxIncluded,\n    lineItems,\n    onRemovedCoupon,\n    onRemovedGiftCertificate,\n    shippingAmount,\n    shippingAmountBeforeDiscount,\n    shopperCurrency,\n    storeCreditAmount,\n    giftWrappingAmount,\n    storeCurrency,\n    subtotalAmount,\n    taxes,\n    total,\n    fees,\n}) => {\n    const nonBundledLineItems = useMemo(() => removeBundledItems(lineItems), [lineItems]);\n\n    const renderModal = useCallback(\n        (props) => (\n            <OrderSummaryModal\n                {...props}\n                additionalLineItems={additionalLineItems}\n                coupons={coupons}\n                discountAmount={discountAmount}\n                fees={fees}\n                giftCertificates={giftCertificates}\n                giftWrappingAmount={giftWrappingAmount}\n                handlingAmount={handlingAmount}\n                headerLink={headerLink}\n                isTaxIncluded={isTaxIncluded}\n                items={nonBundledLineItems}\n                onRemovedCoupon={onRemovedCoupon}\n                onRemovedGiftCertificate={onRemovedGiftCertificate}\n                shippingAmount={shippingAmount}\n                shippingAmountBeforeDiscount={shippingAmountBeforeDiscount}\n                shopperCurrency={shopperCurrency}\n                storeCreditAmount={storeCreditAmount}\n                storeCurrency={storeCurrency}\n                subtotalAmount={subtotalAmount}\n                taxes={taxes}\n                total={total}\n            />\n        ),\n        [\n            additionalLineItems,\n            coupons,\n            discountAmount,\n            giftCertificates,\n            handlingAmount,\n            headerLink,\n            isTaxIncluded,\n            nonBundledLineItems,\n            onRemovedCoupon,\n            onRemovedGiftCertificate,\n            giftWrappingAmount,\n            shippingAmount,\n            shippingAmountBeforeDiscount,\n            shopperCurrency,\n            storeCreditAmount,\n            storeCurrency,\n            subtotalAmount,\n            taxes,\n            total,\n            fees,\n        ],\n    );\n\n    return (\n        <ModalTrigger modal={renderModal}>\n            {({ onClick, onKeyPress }) => (\n                <div\n                    className=\"cartDrawer optimizedCheckout-orderSummary\"\n                    onClick={onClick}\n                    onKeyPress={onKeyPress}\n                    tabIndex={0}\n                >\n                    <figure\n                        className={classNames('cartDrawer-figure', {\n                            'cartDrawer-figure--stack': getLineItemsCount(nonBundledLineItems) > 1,\n                        })}\n                    >\n                        <div className=\"cartDrawer-imageWrapper\">{getImage(nonBundledLineItems)}</div>\n                    </figure>\n                    <div className=\"cartDrawer-body\">\n                        <h3 className=\"cartDrawer-items optimizedCheckout-headingPrimary\">\n                            <TranslatedString\n                                data={{ count: getItemsCount(nonBundledLineItems) }}\n                                id=\"cart.item_count_text\"\n                            />\n                        </h3>\n                        <a>\n                            <TranslatedString id=\"cart.show_details_action\" />\n                        </a>\n                    </div>\n                    <div className=\"cartDrawer-actions\">\n                        <h3 className=\"cartDrawer-total optimizedCheckout-headingPrimary\">\n                            <ShopperCurrency amount={total} />\n                        </h3>\n                    </div>\n                </div>\n            )}\n        </ModalTrigger>\n    );\n};\n\nfunction getImage(lineItems: LineItemMap): ReactNode {\n    const productWithImage = lineItems.physicalItems[0] || lineItems.digitalItems[0];\n\n    if (productWithImage && productWithImage.imageUrl) {\n        return (\n            <img\n                alt={productWithImage.name}\n                data-test=\"cart-item-image\"\n                src={productWithImage.imageUrl}\n            />\n        );\n    }\n\n    if (lineItems.giftCertificates.length) {\n        return <IconGiftCertificate />;\n    }\n}\n\nexport default memo(OrderSummaryDrawer);\n","import React, {\n    Component,\n    KeyboardEvent,\n    KeyboardEventHandler,\n    MouseEventHandler,\n    ReactNode,\n} from 'react';\n\nexport interface ModalTriggerProps {\n    children(props: { onClick: MouseEventHandler; onKeyPress: KeyboardEventHandler<HTMLDivElement> }): ReactNode;\n    modal(props: ModalTriggerModalProps): ReactNode;\n}\n\nexport interface ModalTriggerModalProps {\n    isOpen: boolean;\n    onRequestClose(): void;\n}\n\nexport interface ModalTriggerState {\n    isOpen: boolean;\n}\n\nexport default class ModalTrigger extends Component<ModalTriggerProps, ModalTriggerState> {\n    state = {\n        isOpen: false,\n    };\n\n    private canHandleEvent = false;\n\n    componentDidMount(): void {\n        this.canHandleEvent = true;\n    }\n\n    componentWillUnmount(): void {\n        this.canHandleEvent = false;\n    }\n\n    render() {\n        const { children, modal } = this.props;\n        const { isOpen } = this.state;\n\n        return (\n            <>\n                {children({\n                    onClick: this.handleOpen,\n                    onKeyPress: this.handleKeyOpen,\n                })}\n\n                {modal({\n                    isOpen,\n                    onRequestClose: this.handleClose,\n                })}\n            </>\n        );\n    }\n\n    private handleOpen: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: true,\n        });\n    };\n\n    private handleClose: () => void = () => {\n        if (!this.canHandleEvent) {\n            return;\n        }\n\n        this.setState({\n            isOpen: false,\n        });\n    };\n\n    private handleKeyOpen: (keyboardEvent: KeyboardEvent<HTMLElement>) => void = (\n        keyboardEvent,\n    ) => {\n        if (keyboardEvent.key === 'Enter') {\n            this.handleOpen();\n        }\n    };\n}\n"],"names":["memo","cartUrl","isMultiShippingMode","props","headerLink","className","url","headerId","messageId","isModalOpen","action","actionButtonLabel","onRequestClose","noop","shouldShowCloseButton","Modal","additionalModalClassName","footer","Button","onClick","size","Small","variant","Primary","TranslatedString","id","header","ModalHeader","role","isOpen","useState","setIsModalOpen","window","location","assign","href","preventDefault","target","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","isShippingDiscountDisplayEnabled","checkoutSettings","shopperCurrency","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","withRedeemable","OriginalComponent","onRemovedCoupon","onRemovedGiftCertificate","subtotal","cart","discountAmount","isTaxIncluded","giftCertificates","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","coupons","taxes","fees","allConsignmentsHaveSelectedShippingOption","hasSelectedShippingOptions","shippingAmount","reduce","total","consignment","discounts","discountTotal","discount","type","amount","getTotalAutomaticDiscount","getShippingCostAfterAutomaticDiscount","subtotalAmount","giftWrappingAmount","shippingAmountBeforeDiscount","handlingAmount","mapToOrderSummarySubtotalsProps","additionalLineItems","Redeemable","lineItems","outstandingBalance","getLineItemsCount","physicalItems","digitalItems","customItems","length","fill","height","viewBox","width","xmlns","d","clipRule","fillRule","items","shopperCurrencyCode","storeCurrencyCode","amountWithCurrency","itemsCount","getItemsCount","hasDifferentCurrency","itemsText","renderHeader","newHeaderLink","subHeaderText","isValidElement","cloneElement","additionalClassName","onAfterOpen","orderSummarySubtotalsProps","displayInclusiveTax","ShopperCurrency","code","continueButton","isSmallScreen","additionalBodyClassName","additionalHeaderClassName","OrderSummarySection","OrderSummaryItems","displayLineItemsCount","OrderSummarySubtotals","style","backgroundColor","border","borderRadius","padding","margin","maxWidth","fontFamily","color","boxShadow","fontSize","lineHeight","display","marginBottom","marginTop","OrderSummaryTotal","orderAmount","map","tax","index","OrderSummaryPrice","key","label","name","testId","nonBundledLineItems","useMemo","removeBundledItems","renderModal","useCallback","ModalTrigger","modal","onKeyPress","tabIndex","productWithImage","imageUrl","alt","src","IconGiftCertificate","getImage","data","count","state","canHandleEvent","handleOpen","setState","handleClose","handleKeyOpen","keyboardEvent","componentDidMount","this","componentWillUnmount","render","children","Component"],"sourceRoot":""}