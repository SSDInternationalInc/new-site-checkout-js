{"version":3,"file":"checkout-025c6652.js","mappings":"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","sources":["webpack://checkout/./packages/analytics/src/AnalyticsContext.ts","webpack://checkout/./packages/analytics/src/createAnalyticsService.ts","webpack://checkout/./packages/analytics/src/AnalyticsProvider.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionRegionContainer.ts","webpack://checkout/./packages/checkout-extension/src/Extension.tsx","webpack://checkout/./packages/checkout-extension/src/useExtensions.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionContext.tsx","webpack://checkout/./packages/checkout-extension/src/ExtensionReducer.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReloadCheckoutHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createSetIframeStyleHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createShowLoadingIndicatorHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/commandHandlers/createReRenderShippingFormHandler.ts","webpack://checkout/./packages/checkout-extension/src/handler/queryHandlers/createGetConsignmentHandler.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionService.ts","webpack://checkout/./packages/checkout-extension/src/ExtensionProvider.tsx","webpack://checkout/./packages/core/src/app/address/AddressType.ts","webpack://checkout/./packages/locale/src/localizeAddress.ts","webpack://checkout/./packages/core/src/app/address/StaticAddress.tsx","webpack://checkout/./packages/core/src/app/formFields/getFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/getAddressFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/address/isValidAddress.ts","webpack://checkout/./packages/core/src/app/address/mapAddressToFormValues.ts","webpack://checkout/./packages/core/src/app/analytics/withAnalytics.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-address.ts","webpack://checkout/./packages/core/src/app/billing/StaticBillingAddress.tsx","webpack://checkout/./packages/core/src/app/checkout/NoopCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutSupport.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutSupport.ts","webpack://checkout/./packages/checkout-extension/src/withExtension.ts","webpack://checkout/./packages/ui/src/loading/LoadingNotification.tsx","webpack://checkout/./packages/core/src/app/cart/EmptyCartMessage.tsx","webpack://checkout/./packages/core/src/app/customer/CustomerViewType.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/WalletButtonContainerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/getSupportedMethods.ts","webpack://checkout/./packages/core/src/app/common/utility/should-filter-apple-pay.ts","webpack://checkout/./packages/core/src/app/common/utility/is-apple-pay-window.ts","webpack://checkout/./packages/core/src/app/customer/CheckoutButton.tsx","webpack://checkout/./packages/core/src/app/checkout/navigateToOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/ApplePayButton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/PayPalCommerceButton.tsx","webpack://checkout/./packages/core/src/app/customer/WalletButtonV1Resolver.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonContainer.tsx","webpack://checkout/./packages/core/src/app/customer/resolveCheckoutButton.ts","webpack://checkout/./packages/analytics/src/useAnalytics.tsx","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/BoltCheckoutSuggestion.tsx","webpack://checkout/./packages/dom-utils/src/stopPropagation.ts","webpack://checkout/./packages/core/src/app/customer/checkoutSuggestion/CheckoutSuggestion.tsx","webpack://checkout/./packages/core/src/app/customer/canSignOut.ts","webpack://checkout/./packages/core/src/app/customer/CustomerInfo.tsx","webpack://checkout/./packages/instrument-utils/src/guards/shouldUseStripeLinkByMinimumAmount.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/CustomerSkeleton.tsx","webpack://checkout/./packages/core/src/app/customer/customWalletButton/AmazonPayV2Button.tsx","webpack://checkout/./packages/core/src/app/customer/CheckoutButtonList.tsx","webpack://checkout/./packages/core/src/app/customer/validationPatterns.ts","webpack://checkout/./packages/core/src/app/customer/getEmailValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/getCreateCustomerValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/CreateAccountForm.tsx","webpack://checkout/./packages/locale/src/TranslatedLink.tsx","webpack://checkout/./packages/core/src/app/customer/EmailField.tsx","webpack://checkout/./packages/core/src/app/customer/EmailLoginForm.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-fastlane-window.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/PayPalFastlaneWatermark.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/PrivacyPolicyField.tsx","webpack://checkout/./packages/core/src/app/privacyPolicy/getPrivacyPolicyValidationSchema.ts","webpack://checkout/./packages/core/src/app/customer/SubscribeField.tsx","webpack://checkout/./packages/core/src/app/customer/SubscribeSessionStorage.ts","webpack://checkout/./packages/core/src/app/customer/GuestForm.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEye.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconEyeSlash.tsx","webpack://checkout/./packages/core/src/app/customer/PasswordField.tsx","webpack://checkout/./packages/core/src/app/customer/LoginForm.tsx","webpack://checkout/./packages/core/src/app/customer/mapErrorMessage.ts","webpack://checkout/./packages/core/src/app/customer/mapCreateAccountFromFormValues.ts","webpack://checkout/./packages/core/src/app/customer/StripeGuestForm.tsx","webpack://checkout/./packages/core/src/app/customer/Customer.tsx","webpack://checkout/./packages/core/src/app/payment/getProviderWithCustomCheckout.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconTag.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBanner.tsx","webpack://checkout/./packages/core/src/app/promotion/PromotionBannerList.tsx","webpack://checkout/./packages/core/src/app/shipping/hasUnassignedLineItems.ts","webpack://checkout/./packages/core/src/app/shipping/isUsingMultiShipping.ts","webpack://checkout/./packages/core/src/app/shipping/shippingOption/ShippingOptionExpiredError.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconCheck.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepHeader.tsx","webpack://checkout/./packages/core/src/app/checkout/CheckoutStep.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/isMobileView.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutStepType.ts","webpack://checkout/./packages/core/src/app/checkout/getCheckoutStepStatuses.ts","webpack://checkout/./packages/core/src/app/fflShipping/PickupLocationSelector.tsx","webpack://checkout/./packages/core/src/app/fflShipping/PickupLocationSection.tsx","webpack://checkout/./packages/core/src/app/fflShipping/CustomFFLForm.tsx","webpack://checkout/./packages/core/src/app/fflShipping/CustomFFLSection.tsx","webpack://checkout/./packages/core/src/app/fflShipping/FFLSelectOption.tsx","webpack://checkout/./packages/core/src/app/fflShipping/FFLSelector.tsx","webpack://checkout/./packages/core/src/app/fflShipping/FFLSelectorSection.tsx","webpack://checkout/./packages/core/src/app/fflShipping/CustomAddressForm.tsx","webpack://checkout/./packages/core/src/app/fflShipping/ManualAddressSection.tsx","webpack://checkout/./packages/core/src/app/fflShipping/ValidationError.tsx","webpack://checkout/./packages/core/src/app/fflShipping/ContinueButtonSection.tsx","webpack://checkout/./packages/core/src/app/fflShipping/CustomShippingStep.tsx","webpack://checkout/./packages/core/src/app/fflShipping/customShippingSummary.tsx","webpack://checkout/./packages/core/src/app/checkout/Checkout.tsx","webpack://checkout/./packages/core/src/app/checkout/mapToCheckoutProps.ts","webpack://checkout/./packages/core/src/app/checkout/CheckoutApp.tsx","webpack://checkout/./packages/legacy-hoc/src/createMappableInjectHoc.tsx","webpack://checkout/./packages/core/src/app/checkout/withCheckout.tsx","webpack://checkout/./packages/core/src/app/common/error/CustomError.ts","webpack://checkout/./packages/core/src/app/common/error/ErrorCode.tsx","webpack://checkout/./packages/core/src/app/common/error/ErrorModal.tsx","webpack://checkout/./packages/core/src/app/common/error/isHtmlError.tsx","webpack://checkout/./packages/core/src/app/common/error/computeErrorCode.ts","webpack://checkout/./packages/core/src/app/common/error/createCustomErrorType.ts","webpack://checkout/./packages/core/src/app/common/error/ConsoleErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/NoopErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/SentryErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/createErrorLogger.ts","webpack://checkout/./packages/core/src/app/common/error/isCustomError.ts","webpack://checkout/./packages/core/src/app/common/error/isErrorWithType.ts","webpack://checkout/./packages/core/src/app/common/error/isRequestError.ts","webpack://checkout/./packages/payment-integration-api/src/isResolvableComponent.ts","webpack://checkout/./packages/core/src/app/common/resolver/resolveComponent.ts","webpack://checkout/./packages/core/src/app/common/utility/emptyData.ts","webpack://checkout/./packages/core/src/app/common/utility/isBuyNowCart.ts","webpack://checkout/./packages/core/src/app/common/utility/isExperimentEnabled.ts","webpack://checkout/./packages/core/src/app/common/utility/isFloatingLabelEnabled.ts","webpack://checkout/./packages/core/src/app/common/utility/retry.ts","webpack://checkout/./packages/core/src/app/customer/getPasswordRequirements.ts","webpack://checkout/./packages/core/src/app/common/dom/toCssRule.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStyleParser.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/EmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/common/dom/appendStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/createEmbeddedCheckoutStylesheet.ts","webpack://checkout/./packages/core/src/app/embeddedCheckout/isEmbedded.ts","webpack://checkout/./packages/core/src/app/formFields/getCustomFormFieldsValidationSchema.ts","webpack://checkout/./packages/core/src/app/formFields/mapCustomFormFieldsFromFormValues.ts","webpack://checkout/./packages/checkout-button-integration/src/CheckoutButton.tsx","webpack://checkout/./packages/amazon-pay-v2-integration/src/AmazonPayV2Button.tsx","webpack://checkout/./packages/instrument-utils/src/guards/isHTMLElement/isHTMLElement.ts","webpack://checkout/./packages/payment-integration-api/src/errors/EmbeddedCheckoutUnsupportedError.ts","webpack://checkout/./packages/payment-integration-api/src/setPrototypeOf.ts","webpack://checkout/./packages/google-pay-integration/src/GooglePayButton.tsx","webpack://checkout/./packages/payment-integration-api/src/isEmbedded.ts","webpack://checkout/./packages/core/src/app/giftCertificate/isGiftCertificatePayment.ts","webpack://checkout/./packages/core/src/app/common/bundler/getCurrentScriptPath.ts","webpack://checkout/./packages/core/src/app/common/bundler/configurePublicPath.ts","webpack://checkout/./packages/core/src/app/checkout/renderCheckout.tsx","webpack://checkout/./packages/core/src/app/order/renderOrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/guestSignup/AccountService.ts","webpack://checkout/./packages/core/src/app/guestSignup/SignUpPasswordField.tsx","webpack://checkout/./packages/core/src/app/guestSignup/GuestSignUpForm.tsx","webpack://checkout/./packages/core/src/app/guestSignup/PasswordSavedSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/SignedUpSuccessAlert.tsx","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationRequirementsError.ts","webpack://checkout/./packages/core/src/app/guestSignup/errors/AccountCreationFailedError.ts","webpack://checkout/./packages/core/src/app/order/getPaymentInstructions.ts","webpack://checkout/./packages/core/src/app/giftCertificate/mapFromPayments.ts","webpack://checkout/./packages/core/src/app/order/getStoreCreditAmount.ts","webpack://checkout/./packages/core/src/app/order/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/getOrderShippingCostAfterAutomaticDiscount.ts","webpack://checkout/./packages/core/src/app/order/OrderConfirmationSection.tsx","webpack://checkout/./packages/core/src/app/order/MandateTextComponent.tsx","webpack://checkout/./packages/core/src/app/order/PaymentsWithMandates.tsx","webpack://checkout/./packages/core/src/app/order/OrderStatus.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconPrint.tsx","webpack://checkout/./packages/core/src/app/order/PrintLink.tsx","webpack://checkout/./packages/core/src/app/ui/header/PrimaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/ThankYouHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmation.tsx","webpack://checkout/./packages/core/src/app/order/OrderConfirmationApp.tsx","webpack://checkout/./packages/core/src/app/payment/paymentMethod/PaymentMethodId.ts","webpack://checkout/./packages/core/src/app/payment/storeCredit/isStoreCreditPayment.ts","webpack://checkout/./packages/core/src/app/shipping/hasSelectedShippingOptions.ts","webpack://checkout/./packages/core/src/app/ui/icon/IconSuccess.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconInfo.tsx","webpack://checkout/./packages/core/src/app/ui/alert/Alert.tsx","webpack://checkout/./packages/core/src/app/ui/button/Button.tsx","webpack://checkout/./packages/core/src/app/ui/form/BasicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/RadioInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicInput.tsx","webpack://checkout/./packages/core/src/app/ui/form/MultiCheckboxControl.tsx","webpack://checkout/./packages/core/src/app/ui/form/CheckboxGroupFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/DynamicFormFieldType.ts","webpack://checkout/./packages/core/src/app/ui/form/Fieldset.tsx","webpack://checkout/./packages/core/src/app/ui/form/Form.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormField.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldContainer.tsx","webpack://checkout/./packages/core/src/app/ui/form/FormFieldError.tsx","webpack://checkout/./packages/core/src/app/ui/form/Input.tsx","webpack://checkout/./packages/core/src/app/ui/form/Label.tsx","webpack://checkout/./packages/core/src/app/ui/form/Legend.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextArea.tsx","webpack://checkout/./packages/core/src/app/ui/form/TextInput.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconBolt.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconChevronDown.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconError.tsx","webpack://checkout/./packages/core/src/app/ui/icon/withIconContainer.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconClose.tsx","webpack://checkout/./packages/core/src/app/ui/modal/Modal.tsx","webpack://checkout/./packages/core/src/app/ui/modal/ModalHeader.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/ViewPicker.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/MobileView.tsx","webpack://checkout/./packages/core/src/app/ui/responsive/breakpoints.ts","webpack://checkout/./packages/core/src/app/ui/toggle/Toggle.tsx","webpack://checkout/./packages/dom-utils/src/getAppliedStyles.ts","webpack://checkout/./packages/dom-utils/src/parseAnchor.ts","webpack://checkout/./packages/dom-utils/src/preventDefault.ts","webpack://checkout/./packages/error-handling-utils/src/ErrorBoundary.tsx","webpack://checkout/./packages/error-handling-utils/src/ErrorLogger.ts","webpack://checkout/./packages/legacy-hoc/src/createInjectHoc.tsx","webpack://checkout/./packages/locale/src/LocaleContext.ts","webpack://checkout/./packages/locale/src/LocaleProvider.tsx","webpack://checkout/./packages/locale/src/TranslatedHtml.tsx","webpack://checkout/./packages/locale/src/TranslatedString.tsx","webpack://checkout/./packages/locale/src/translations/index.ts","webpack://checkout/./packages/locale/src/getLanguageService.ts","webpack://checkout/./packages/locale/src/withDate.tsx","webpack://checkout/./packages/locale/src/withLanguage.tsx","webpack://checkout/./packages/payment-integration-api/src/PaymentMethodId.ts","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutContext.tsx","webpack://checkout/./packages/payment-integration-api/src/contexts/checkout-context/CheckoutProvider.tsx","webpack://checkout/./packages/payment-integration-api/src/errors/CustomError.ts","webpack://checkout/./packages/payment-integration-api/src/toResolvableComponent.tsx","webpack://checkout/./packages/ui/src/icon/IconPayPalFastlane.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/PoweredByPayPalFastlaneLabel.tsx","webpack://checkout/./packages/paypal-fastlane-integration/src/is-braintree-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-customer.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-commerce-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/is-paypal-fastlane-method.ts","webpack://checkout/./packages/paypal-fastlane-integration/src/usePayPalFastlaneAddress.ts","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/AddressFormSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/ChecklistSkeleton.tsx","webpack://checkout/./packages/ui/src/form/LoadingSkeleton/LoadingSkeleton.tsx","webpack://checkout/./packages/ui/src/form/contexts/FormContext.tsx","webpack://checkout/./packages/ui/src/icon/withIconContainer.tsx","webpack://checkout/./packages/ui/src/loading/LazyContainer.tsx","webpack://checkout/./packages/ui/src/loading/LoadingOverlay.tsx","webpack://checkout/./packages/ui/src/loading/LoadingSpinner.tsx"],"sourcesContent":["import { CheckoutPaymentMethodExecutedOptions } from '@bigcommerce/checkout-sdk';\nimport { createContext } from 'react';\n\nexport interface AnalyticsEvents {\n    checkoutBegin(): void;\n    trackStepCompleted(step: string): void;\n    trackStepViewed(step: string): void;\n    orderPurchased(): void;\n    customerEmailEntry(email: string): void;\n    customerSuggestionInit(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    customerSuggestionExecute(): void;\n    customerPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions): void;\n    showShippingMethods(): void;\n    selectedPaymentMethod(methodName: string, methodId: string): void;\n    clickPayButton(payload?: { [key: string]: unknown }): void;\n    paymentRejected(): void;\n    paymentComplete(): void;\n    exitCheckout(): void;\n    walletButtonClick(methodId: string): void;\n}\n\nexport interface AnalyticsContextProps {\n    analyticsTracker: AnalyticsEvents;\n}\n\nconst AnalyticsContext = createContext<AnalyticsContextProps | undefined>(undefined);\n\nexport default AnalyticsContext;\n","export default function createAnalyticsService<T>(\n    createFn: (args?: any) => T,\n    createArguments: unknown[] = [],\n) {\n    let analyticsTracker: T;\n\n    return () => {\n        if (analyticsTracker) {\n            return analyticsTracker;\n        }\n\n        analyticsTracker = createFn(...createArguments);\n\n        return analyticsTracker;\n    };\n}\n","import {\n    BodlEventsPayload,\n    BodlService,\n    BraintreeAnalyticTrackerService,\n    CheckoutService,\n    createBodlService,\n    createBraintreeAnalyticTracker,\n    createPayPalCommerceAnalyticTracker,\n    createStepTracker,\n    PayPalCommerceAnalyticTrackerService,\n    StepTracker,\n} from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useMemo } from 'react';\n\nimport AnalyticsContext, { AnalyticsEvents } from './AnalyticsContext';\nimport createAnalyticsService from './createAnalyticsService';\n\ninterface AnalyticsProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n}\n\nconst AnalyticsProvider = ({ checkoutService, children }: AnalyticsProviderProps) => {\n    const getStepTracker = useMemo(\n        () => createAnalyticsService<StepTracker>(createStepTracker, [checkoutService]),\n        [checkoutService],\n    );\n    const getBodlService = useMemo(\n        () => createAnalyticsService<BodlService>(createBodlService, [checkoutService.subscribe]),\n        [checkoutService],\n    );\n    const getBraintreeAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<BraintreeAnalyticTrackerService>(\n                createBraintreeAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n    const getPayPalCommerceAnalyticTracker = useMemo(\n        () =>\n            createAnalyticsService<PayPalCommerceAnalyticTrackerService>(\n                createPayPalCommerceAnalyticTracker,\n                [checkoutService],\n            ),\n        [checkoutService],\n    );\n\n    const checkoutBegin = () => {\n        getStepTracker().trackCheckoutStarted();\n        getBodlService().checkoutBegin();\n    };\n\n    const trackStepCompleted = (currentStep: string) => {\n        getStepTracker().trackStepCompleted(currentStep);\n        getBodlService().stepCompleted(currentStep);\n    };\n\n    const trackStepViewed = (step: string) => {\n        getStepTracker().trackStepViewed(step);\n    };\n\n    const orderPurchased = () => {\n        getStepTracker().trackOrderComplete();\n        getBodlService().orderPurchased();\n    };\n\n    const customerEmailEntry = (email: string) => {\n        getBodlService().customerEmailEntry(email);\n    };\n\n    const customerSuggestionInit = (payload: BodlEventsPayload) => {\n        getBodlService().customerSuggestionInit(payload);\n    };\n\n    const customerSuggestionExecute = () => {\n        getBodlService().customerSuggestionExecute();\n    };\n\n    const customerPaymentMethodExecuted = (payload: BodlEventsPayload) => {\n        getBodlService().customerPaymentMethodExecuted(payload);\n        getBraintreeAnalyticTracker().customerPaymentMethodExecuted();\n        getPayPalCommerceAnalyticTracker().customerPaymentMethodExecuted();\n    };\n\n    const showShippingMethods = () => {\n        getBodlService().showShippingMethods();\n    };\n\n    const selectedPaymentMethod = (methodName: string, methodId: string) => {\n        getBodlService().selectedPaymentMethod(methodName);\n        getBraintreeAnalyticTracker().selectedPaymentMethod(methodId);\n        getPayPalCommerceAnalyticTracker().selectedPaymentMethod(methodId);\n    };\n\n    const clickPayButton = (payload: BodlEventsPayload) => {\n        getBodlService().clickPayButton(payload);\n    };\n\n    const paymentRejected = () => {\n        getBodlService().paymentRejected();\n    };\n\n    const paymentComplete = () => {\n        getBodlService().paymentComplete();\n        getBraintreeAnalyticTracker().paymentComplete();\n        getPayPalCommerceAnalyticTracker().paymentComplete();\n    };\n\n    const exitCheckout = () => {\n        getBodlService().exitCheckout();\n    };\n\n    const walletButtonClick = (methodId: string) => {\n        getBraintreeAnalyticTracker().walletButtonClick(methodId);\n        getPayPalCommerceAnalyticTracker().walletButtonClick(methodId);\n    };\n\n    const analyticsTracker: AnalyticsEvents = {\n        checkoutBegin,\n        trackStepCompleted,\n        trackStepViewed,\n        orderPurchased,\n        customerEmailEntry,\n        customerSuggestionInit,\n        customerSuggestionExecute,\n        customerPaymentMethodExecuted,\n        showShippingMethods,\n        selectedPaymentMethod,\n        clickPayButton,\n        paymentRejected,\n        paymentComplete,\n        exitCheckout,\n        walletButtonClick,\n    };\n\n    return (\n        <AnalyticsContext.Provider value={{ analyticsTracker }}>\n            {children}\n        </AnalyticsContext.Provider>\n    );\n};\n\nexport default AnalyticsProvider;\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\n\nexport enum ExtensionRegionContainer {\n    ShippingShippingAddressFormBefore = 'extension-region-shipping-shippingaddressform-before',\n    ShippingShippingAddressFormAfter = 'extension-region-shipping-shippingaddressform-after',\n    ShippingSelectedShippingMethod = 'extension-region-shipping-selectedshippingmethod',\n    SummaryAfter = 'extension-region-summary-after',\n    SummaryLastItemAfter = 'extension-region-summary-lastitem-after',\n}\n\nexport const extensionRegionToContainerMap: Record<ExtensionRegion, ExtensionRegionContainer> = {\n    [ExtensionRegion.ShippingShippingAddressFormBefore]:\n        ExtensionRegionContainer.ShippingShippingAddressFormBefore,\n    [ExtensionRegion.ShippingShippingAddressFormAfter]:\n        ExtensionRegionContainer.ShippingShippingAddressFormAfter,\n    [ExtensionRegion.ShippingSelectedShippingMethod]:\n        ExtensionRegionContainer.ShippingSelectedShippingMethod,\n    [ExtensionRegion.SummaryAfter]: ExtensionRegionContainer.SummaryAfter,\n    [ExtensionRegion.SummaryLastItemAfter]: ExtensionRegionContainer.SummaryLastItemAfter,\n};\n","import { ExtensionRegion } from '@bigcommerce/checkout-sdk';\nimport React, { useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { extensionRegionToContainerMap } from './ExtensionRegionContainer';\nimport { useExtensions } from './useExtensions';\n\ninterface ExtensionProps {\n    region: ExtensionRegion;\n}\n\nexport const Extension = ({ region }: ExtensionProps): React.JSX.Element | null => {\n    const {\n        checkoutState: {\n            data: { getExtensions, getConfig, getCheckout },\n        },\n    } = useCheckout();\n    const extensions = getExtensions();\n    const config = getConfig();\n    const checkout = getCheckout();\n    const { extensionService } = useExtensions();\n    const isRegionEnabled =\n        extensions && config && checkout && extensionService.isRegionEnabled(region);\n    const containerId = extensionRegionToContainerMap[region];\n\n    useEffect(() => {\n        if (isRegionEnabled) {\n            void extensionService.renderExtension(containerId, region);\n\n            return () => {\n                extensionService.removeListeners(region);\n            };\n        }\n    }, [containerId, extensionService, isRegionEnabled, region]);\n\n    if (isRegionEnabled) {\n        return <div id={containerId} />;\n    }\n\n    return null;\n};\n","import { useContext } from 'react';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const useExtensions = () => {\n    const extensionContext = useContext(ExtensionContext);\n\n    if (!extensionContext) {\n        throw new Error('useExtensions must be used within an <ExtensionProvider>');\n    }\n\n    return extensionContext;\n};\n","import { createContext } from 'react';\n\nimport { ExtensionState } from './ExtensionProvider';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionContextProps {\n    extensionService: ExtensionService;\n    extensionState: ExtensionState;\n}\n\nexport const ExtensionContext = createContext<ExtensionContextProps | undefined>(undefined);\n","import { ExtensionAction, ExtensionActionType, ExtensionState } from './ExtensionProvider';\n\nexport const extensionReducer = (\n    state: ExtensionState,\n    action: ExtensionAction,\n): ExtensionState => {\n    switch (action.type) {\n        case ExtensionActionType.SHOW_LOADING_INDICATOR:\n            if (typeof action.payload === 'boolean') {\n                return { ...state, isShowingLoadingIndicator: action.payload };\n            }\n\n            break;\n\n        case ExtensionActionType.RE_RENDER_SHIPPING_FORM:\n            if (typeof action.payload === 'number') {\n                return { ...state, shippingFormRenderTimestamp: action.payload };\n            }\n\n            break;\n\n        default:\n            return state;\n    }\n\n    return state;\n};\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReloadCheckoutHandler({\n    checkoutService,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReloadCheckout> {\n    return {\n        commandType: ExtensionCommandType.ReloadCheckout,\n        handler: () => {\n            void checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createSetIframeStyleHandler({\n    extension,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.SetIframeStyle> {\n    return {\n        commandType: ExtensionCommandType.SetIframeStyle,\n        handler: (data) => {\n            const { style } = data.payload;\n            const extensionContainer = document.querySelector(\n                `div[data-extension-id=\"${extension.id}\"]`,\n            );\n            const iframe = extensionContainer?.querySelector('iframe');\n\n            if (iframe) {\n                Object.assign(iframe.style, style);\n            }\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createShowLoadingIndicatorHandler({\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ShowLoadingIndicator> {\n    return {\n        commandType: ExtensionCommandType.ShowLoadingIndicator,\n        handler: (data) => {\n            const { show } = data.payload;\n\n            dispatch({\n                type: ExtensionActionType.SHOW_LOADING_INDICATOR,\n                payload: show,\n            });\n        },\n    };\n}\n","import { ExtensionCommandType } from '@bigcommerce/checkout-sdk';\n\nimport { ExtensionActionType } from '../../ExtensionProvider';\n\nimport { CommandHandler, CommandHandlerProps } from './CommandHandler';\n\nexport function createReRenderShippingFormHandler({\n    checkoutService,\n    dispatch,\n}: CommandHandlerProps): CommandHandler<ExtensionCommandType.ReRenderShippingForm> {\n    return {\n        commandType: ExtensionCommandType.ReRenderShippingForm,\n        handler: async () => {\n            await checkoutService.loadCheckout(checkoutService.getState().data.getCheckout()?.id, {\n                params: {\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment,@typescript-eslint/consistent-type-assertions\n                    include: ['consignments.availableShippingOptions'] as any,\n                },\n            });\n\n            dispatch({\n                type: ExtensionActionType.RE_RENDER_SHIPPING_FORM,\n                payload: Date.now(),\n            });\n        },\n    };\n}\n","import { ExtensionMessageType, ExtensionQueryType } from '@bigcommerce/checkout-sdk';\n\nimport { QueryHandler, QueryHandlerProps } from './QueryHandler';\n\nexport function createGetConsignmentHandler({\n    checkoutService,\n    extension,\n}: QueryHandlerProps): QueryHandler<ExtensionQueryType.GetConsignments> {\n    return {\n        queryType: ExtensionQueryType.GetConsignments,\n        handler: async (data) => {\n            if (!data.payload?.useCache) {\n                await checkoutService.loadCheckout();\n            }\n\n            const consignments = checkoutService.getState().data.getCheckout()?.consignments || [];\n\n            checkoutService.postMessageToExtension(extension.id, {\n                type: ExtensionMessageType.GetConsignments,\n                payload: {\n                    consignments,\n                },\n            });\n        },\n    };\n}\n","import {\n    CheckoutService,\n    Extension,\n    ExtensionCommandMap,\n    ExtensionQueryMap,\n    ExtensionRegion,\n} from '@bigcommerce/checkout-sdk';\nimport React from 'react';\n\nimport { ErrorLevelType, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionAction } from './ExtensionProvider';\nimport { CommandHandler, QueryHandler } from './handler';\nimport * as commandHandlerFactories from './handler/commandHandlers';\nimport * as queryHandlerFactories from './handler/queryHandlers';\n\nexport class ExtensionService {\n    private handlers: { [extensionId: string]: Array<() => void> } = {};\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private dispatch: React.Dispatch<ExtensionAction>,\n        private errorLogger: ErrorLogger,\n    ) {}\n\n    async loadExtensions(): Promise<void> {\n        await this.checkoutService.loadExtensions();\n    }\n\n    preloadExtensions(): void {\n        const state = this.checkoutService.getState();\n        const extensions = state.data.getExtensions();\n        const cartId = state.data.getCart()?.id;\n        const parentOrigin = state.data.getConfig()?.links.siteLink;\n\n        if (!cartId || !parentOrigin) {\n            return;\n        }\n\n        extensions?.forEach((extension) => {\n            const url = new URL(extension.url);\n\n            url.searchParams.set('extensionId', extension.id);\n            url.searchParams.set('cartId', cartId);\n            url.searchParams.set('parentOrigin', parentOrigin);\n\n            const link = document.createElement('link');\n\n            link.rel = 'preload';\n            link.as = 'document';\n            link.href = url.toString();\n\n            const head = document.head;\n\n            head.appendChild(link);\n        });\n    }\n\n    async renderExtension(container: string, region: ExtensionRegion): Promise<void> {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        try {\n            await this.checkoutService.renderExtension(container, region);\n\n            this.registerHandlers(extension);\n        } catch (error: unknown) {\n            if (error instanceof Error) {\n                this.errorLogger.log(\n                    error,\n                    { errorCode: 'checkoutExtension' },\n                    ErrorLevelType.Error,\n                    { extensionId: extension.id, region },\n                );\n            }\n        }\n    }\n\n    removeListeners(region: ExtensionRegion): void {\n        this.checkoutService.clearExtensionCache(region);\n\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        if (!extension) {\n            return;\n        }\n\n        const removers = this.handlers[extension.id];\n\n        if (!removers) {\n            return;\n        }\n\n        for (const remover of removers) {\n            remover();\n        }\n\n        delete this.handlers[extension.id];\n    }\n\n    isRegionEnabled(region: ExtensionRegion): boolean {\n        const extension = this.checkoutService.getState().data.getExtensionByRegion(region);\n\n        return Boolean(extension);\n    }\n\n    private registerHandlers(extension: Extension): void {\n        const handlerProps = {\n            checkoutService: this.checkoutService,\n            dispatch: this.dispatch,\n            extension,\n        };\n\n        if (!this.handlers[extension.id]) {\n            this.handlers[extension.id] = [];\n        }\n\n        Object.values(commandHandlerFactories).forEach((createCommandHandlerFactory) => {\n            const handlerFactory = createCommandHandlerFactory(handlerProps);\n\n            if (this.isCommandHandler(handlerFactory.commandType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionCommand(\n                        extension.id,\n                        handlerFactory.commandType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n\n        Object.values(queryHandlerFactories).forEach((createQueryHandlerFactory) => {\n            const handlerFactory = createQueryHandlerFactory(handlerProps);\n\n            if (this.isQueryHandler(handlerFactory.queryType, handlerFactory)) {\n                this.handlers[extension.id].push(\n                    this.checkoutService.handleExtensionQuery(\n                        extension.id,\n                        handlerFactory.queryType,\n                        handlerFactory.handler,\n                    ),\n                );\n            }\n        });\n    }\n\n    private isCommandHandler<T extends keyof ExtensionCommandMap>(\n        type: T,\n        handler: CommandHandler<any>,\n    ): handler is CommandHandler<T> {\n        return handler.commandType === type;\n    }\n\n    private isQueryHandler<T extends keyof ExtensionQueryMap>(\n        type: T,\n        handler: QueryHandler<any>,\n    ): handler is QueryHandler<T> {\n        return handler.queryType === type;\n    }\n}\n","import { CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { ReactNode, useReducer } from 'react';\n\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nimport { ExtensionContext } from './ExtensionContext';\nimport { extensionReducer } from './ExtensionReducer';\nimport { ExtensionService } from './ExtensionService';\n\nexport interface ExtensionState {\n    isShowingLoadingIndicator: boolean;\n    shippingFormRenderTimestamp: undefined | number;\n}\n\nexport interface ExtensionAction {\n    type: ExtensionActionType;\n    payload: boolean | number;\n}\n\nexport enum ExtensionActionType {\n    SHOW_LOADING_INDICATOR,\n    RE_RENDER_SHIPPING_FORM,\n}\n\nexport interface ExtensionProviderProps {\n    checkoutService: CheckoutService;\n    children: ReactNode;\n    errorLogger: ErrorLogger;\n}\n\nexport const ExtensionProvider = ({\n    checkoutService,\n    children,\n    errorLogger,\n}: ExtensionProviderProps) => {\n    const [extensionState, dispatch] = useReducer(extensionReducer, {\n        isShowingLoadingIndicator: false,\n        shippingFormRenderTimestamp: undefined,\n    });\n    const extensionService = new ExtensionService(checkoutService, dispatch, errorLogger);\n\n    const extensionValues = {\n        extensionService,\n        extensionState,\n    };\n\n    return (\n        <ExtensionContext.Provider value={extensionValues}>{children}</ExtensionContext.Provider>\n    );\n};\n","enum AddressType {\n    Billing = 'billing',\n    Shipping = 'shipping',\n}\n\nexport default AddressType;\n","import { Address, Country } from '@bigcommerce/checkout-sdk';\nimport { find, isEmpty } from 'lodash';\n\ninterface LocalizedGeography {\n    localizedCountry: string;\n    localizedProvince: string;\n}\n\nconst localizeAddress = <T1 extends Address>(\n    address: T1,\n    countries?: Country[],\n): T1 & LocalizedGeography => {\n    const country = find(countries, { code: address.countryCode });\n    const states = !country || isEmpty(country.subdivisions) ? [] : country.subdivisions;\n    const state = find(states, { code: address.stateOrProvinceCode });\n\n    return {\n        ...address,\n        localizedCountry: country ? country.name : address.country,\n        localizedProvince: state ? state.name : address.stateOrProvince,\n    };\n};\n\nexport default localizeAddress;\n","import {\n    Address,\n    CheckoutSelectors,\n    Country,\n    ShippingInitializeOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { isEmpty } from 'lodash';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { localizeAddress } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\n\nimport AddressType from './AddressType';\n\nimport './StaticAddress.scss';\n\nexport interface StaticAddressProps {\n    address: Address;\n    type?: AddressType;\n}\n\nexport interface StaticAddressEditableProps extends StaticAddressProps {\n    initialize?(options: ShippingInitializeOptions): Promise<CheckoutSelectors>;\n}\n\ninterface WithCheckoutStaticAddressProps {\n    countries?: Country[];\n}\n\nconst StaticAddress: FunctionComponent<\n    StaticAddressEditableProps & WithCheckoutStaticAddressProps\n    > = ({\n        countries,\n        address: addressWithoutLocalization,\n    }) => {\n    const address = localizeAddress(addressWithoutLocalization, countries);\n    const isValid = !isEmpty(address);\n\n    return !isValid ? null : (\n        <div className=\"vcard checkout-address--static\" data-test=\"static-address\">\n            {(address.firstName || address.lastName) && (\n                <p className=\"fn address-entry\">\n                    <span className=\"first-name\">{`${address.firstName} `}</span>\n                    <span className=\"family-name\">{address.lastName}</span>\n                </p>\n            )}\n\n            {(address.phone || address.company) && (\n                <p className=\"address-entry\">\n                    <span className=\"company-name\">{`${address.company} `}</span>\n                    <span className=\"tel\">{address.phone}</span>\n                </p>\n            )}\n\n            <div className=\"adr\">\n                <p className=\"street-address address-entry\">\n                    <span className=\"address-line-1\">{`${address.address1} `}</span>\n                    {address.address2 && (\n                        <span className=\"address-line-2\">{` / ${address.address2}`}</span>\n                    )}\n                </p>\n\n                <p className=\"address-entry\">\n                    {address.city && <span className=\"locality\">{`${address.city}, `}</span>}\n                    {address.localizedProvince && (\n                        <span className=\"region\">{`${address.localizedProvince}, `}</span>\n                    )}\n                    {address.postalCode && (\n                        <span className=\"postal-code\">{`${address.postalCode} / `}</span>\n                    )}\n                    {address.localizedCountry && (\n                        <span className=\"country-name\">{`${address.localizedCountry} `}</span>\n                    )}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport function mapToStaticAddressProps(\n    context: CheckoutContextProps,\n    { type }: StaticAddressProps,\n): WithCheckoutStaticAddressProps | null {\n    const {\n        checkoutState: {\n            data: { getBillingCountries, getShippingCountries },\n        },\n    } = context;\n\n    return {\n        countries: type === AddressType.Billing\n            ? getBillingCountries()\n            : getShippingCountries(),\n    };\n}\n\nexport default withCheckout(mapToStaticAddressProps)(memo(StaticAddress));\n","import { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string, StringSchema } from 'yup';\n\nimport getCustomFormFieldsValidationSchema, {\n    FormFieldsValidationSchemaOptions,\n} from './getCustomFormFieldsValidationSchema';\n\nexport const WHITELIST_REGEXP = /^[^<>]*$/;\n\nexport interface FormFieldValues {\n    [key: string]: string | { [id: string]: any };\n}\n\nexport default memoize(function getFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return object({\n        ...formFields\n            .filter(({ custom }) => !custom)\n            .reduce((schema, { name, required, label, maxLength }) => {\n                schema[name] = string();\n\n                if (required) {\n                    schema[name] = schema[name]\n                        .trim()\n                        .required(translate('required', { label, name}));\n                }\n\n                if ((name === 'address1' || name === 'address2') && maxLength) {\n                    schema[name] = schema[name]\n                        .max(maxLength, translate('max', { label, name, max: maxLength }));\n                }\n\n                schema[name] = schema[name].matches(\n                    WHITELIST_REGEXP,\n                    translate('invalid', { name, label }),\n                );\n\n                return schema;\n            }, {} as { [key: string]: StringSchema }),\n    }).concat(\n        getCustomFormFieldsValidationSchema({ formFields, translate }),\n    ) as ObjectSchema<FormFieldValues>;\n});\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from 'lodash';\nimport { ObjectSchema } from 'yup';\n\nimport {\n    FormFieldValues,\n    getFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nexport interface AddressFormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    language?: LanguageService;\n}\n\nexport function getTranslateAddressError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    const requiredFieldErrorTranslationIds: { [fieldName: string]: string } = {\n        countryCode: 'address.country',\n        firstName: 'address.first_name',\n        lastName: 'address.last_name',\n        company: 'address.company_name',\n        address1: 'address.address_line_1',\n        address2: 'address.address_line_2',\n        city: 'address.city',\n        stateOrProvince: 'address.state',\n        stateOrProvinceCode: 'address.state',\n        postalCode: 'address.postal_code',\n        phone: 'address.phone_number',\n    };\n\n    return (type, { label, name, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            if (requiredFieldErrorTranslationIds[name]) {\n                return language.translate(\n                    `${requiredFieldErrorTranslationIds[name]}_required_error`,\n                );\n            }\n\n            return language.translate(`address.custom_required_error`, { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate(`address.custom_max_error`, { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate(`address.custom_min_error`, { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate(`address.invalid_characters_error`, { label });\n        }\n    };\n}\n\nexport default memoize(function getAddressFormFieldsValidationSchema({\n    formFields,\n    language,\n}: AddressFormFieldsValidationSchemaOptions): ObjectSchema<FormFieldValues> {\n    return getFormFieldsValidationSchema({\n        formFields,\n        translate: getTranslateAddressError(language),\n    });\n});\n","import { Address, FormField } from '@bigcommerce/checkout-sdk';\n\nimport getAddressFormFieldsValidationSchema from './getAddressFormFieldsValidationSchema';\nimport mapAddressToFormValues from './mapAddressToFormValues';\n\nexport default function isValidAddress(\n    address: Address,\n    formFields: FormField[],\n): boolean {\n    const addressSchema = getAddressFormFieldsValidationSchema({ formFields });\n\n    return addressSchema.isValidSync(mapAddressToFormValues(formFields, address));\n}\n","import { Address, AddressKey, FormField } from '@bigcommerce/checkout-sdk';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type AddressFormValues = Pick<Address, Exclude<AddressKey, 'customFields'>> & {\n    customFields: { [id: string]: any };\n};\n\nexport default function mapAddressToFormValues(\n    fields: FormField[],\n    address?: Address,\n): AddressFormValues {\n    const values = {\n        ...fields.reduce(\n            (addressFormValues, { name, custom, fieldType, default: defaultValue }) => {\n                if (custom) {\n                    if (!addressFormValues.customFields) {\n                        addressFormValues.customFields = {};\n                    }\n\n                    const field =\n                        address &&\n                        address.customFields &&\n                        address.customFields.find(({ fieldId }) => fieldId === name);\n\n                    const fieldValue = field && field.fieldValue;\n\n                    addressFormValues.customFields[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    );\n\n                    return addressFormValues;\n                }\n\n                if (isSystemAddressFieldName(name)) {\n                    const fieldValue = address && address[name];\n\n                    addressFormValues[name] = getValue(\n                        fieldType,\n                        fieldValue,\n                        defaultValue,\n                    )?.toString() || '';\n                }\n\n                return addressFormValues;\n            },\n            {} as AddressFormValues,\n        ),\n    };\n\n    values.shouldSaveAddress =\n        address && address.shouldSaveAddress !== undefined ? address.shouldSaveAddress : true;\n\n    // Manually backfill stateOrProvince to avoid Formik warning (uncontrolled to controlled input)\n    if (values.stateOrProvince === undefined) {\n        values.stateOrProvince = '';\n    }\n\n    if (values.stateOrProvinceCode === undefined) {\n        values.stateOrProvinceCode = '';\n    }\n\n    return values;\n}\n\nfunction getValue(\n    fieldType?: string,\n    fieldValue?: string | string[] | number,\n    defaultValue?: string,\n): string | string[] | number | Date | undefined {\n    if (fieldValue === undefined || fieldValue === null) {\n        return getDefaultValue(fieldType, defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.date && typeof fieldValue === 'string') {\n        if (fieldValue) {\n            const [year, month, day] = fieldValue.split('-');\n\n            return new Date(Number(year), Number(month)-1, Number(day));\n        }\n\n        return undefined;\n    }\n\n    return fieldValue;\n}\n\nfunction getDefaultValue(fieldType?: string, defaultValue?: string): string | string[] | Date {\n    if (defaultValue && fieldType === DynamicFormFieldType.date) {\n        return new Date(defaultValue);\n    }\n\n    if (fieldType === DynamicFormFieldType.checkbox) {\n        return [];\n    }\n\n    return defaultValue || '';\n}\n\nfunction isSystemAddressFieldName(\n    fieldName: string,\n): fieldName is Exclude<keyof Address, 'customFields' | 'shouldSaveAddress'> {\n    return fieldName !== 'customFields' && fieldName !== 'shouldSaveAddress';\n}\n","import { AnalyticsContext } from '@bigcommerce/checkout/analytics';\nimport { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nconst withAnalytics = createInjectHoc(AnalyticsContext, { displayNamePrefix: 'WithAnalytics' });\n\nexport default withAnalytics;\n","import {\n    Address,\n    AddressRequestBody,\n    BillingAddress,\n    CustomerAddress,\n} from '@bigcommerce/checkout-sdk';\nimport { isEqual, omit } from 'lodash';\n\ntype ComparableAddress = CustomerAddress | Address | BillingAddress | AddressRequestBody;\ntype ComparableAddressFields = keyof CustomerAddress | keyof Address | keyof BillingAddress;\n\nconst normalizeAddress = (address: Partial<ComparableAddress>) => {\n    const ignoredFields: ComparableAddressFields[] = [\n        'id',\n        'shouldSaveAddress',\n        'stateOrProvince',\n        'type',\n        'email',\n        'country',\n        'customFields',\n    ];\n\n    return omit(address, ignoredFields);\n};\n\nconst isEqualToPayPalFastlaneAddress = (\n    bcAddress: Partial<ComparableAddress>,\n    paypalFastlaneAddress: Partial<ComparableAddress>,\n): boolean => isEqual(normalizeAddress(bcAddress), normalizeAddress(paypalFastlaneAddress));\n\nconst isPayPalFastlaneAddress = (address: Address, addresses?: Address[]): boolean => {\n    if (!addresses || addresses.length === 0) {\n        return false;\n    }\n\n    return addresses.some((paypalFastlaneAddress) =>\n        isEqualToPayPalFastlaneAddress(address, paypalFastlaneAddress),\n    );\n};\n\nexport default isPayPalFastlaneAddress;\n","import { Address, CheckoutPayment, FormField } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneAddress, PoweredByPayPalFastlaneLabel, usePayPalFastlaneAddress } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { AddressType, StaticAddress } from '../address';\nimport { withCheckout } from '../checkout';\nimport { EMPTY_ARRAY } from '../common/utility';\n\nexport interface StaticBillingAddressProps {\n    address: Address;\n}\n\ninterface WithCheckoutStaticBillingAddressProps {\n    fields: FormField[];\n    payments?: CheckoutPayment[];\n}\n\nconst StaticBillingAddress: FunctionComponent<\n    StaticBillingAddressProps & WithCheckoutStaticBillingAddressProps\n> = ({ address, payments = EMPTY_ARRAY }) => {\n    const { paypalFastlaneAddresses } = usePayPalFastlaneAddress();\n    const showPayPalFastlaneLabel = isPayPalFastlaneAddress(address, paypalFastlaneAddresses);\n\n    if (payments.find((payment) => payment.providerId === 'amazonpay')) {\n        return (\n            <p>\n                <TranslatedString id=\"billing.billing_address_amazonpay\" />\n            </p>\n        );\n    }\n\n    return (\n        <>\n            <StaticAddress address={address} type={AddressType.Billing} />\n\n            {showPayPalFastlaneLabel && <PoweredByPayPalFastlaneLabel />}\n        </>\n    );\n};\n\nexport function mapToStaticBillingAddressProps(\n    { checkoutState }: CheckoutContextProps,\n    { address }: StaticBillingAddressProps,\n): WithCheckoutStaticBillingAddressProps | null {\n    const {\n        data: { getBillingAddressFields, getCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n\n    return {\n        fields: getBillingAddressFields(address.countryCode),\n        payments: checkout && checkout.payments,\n    };\n}\n\nexport default withCheckout(mapToStaticBillingAddressProps)(memo(StaticBillingAddress));\n","import CheckoutSupport from './CheckoutSupport';\n\nexport default class NoopCheckoutSupport implements CheckoutSupport {\n    isSupported(): boolean {\n        return true;\n    }\n}\n","import { CustomError, setPrototypeOf } from '../../common/error';\n\nexport class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport } from '../checkout';\n\nimport { EmbeddedCheckoutUnsupportedError } from './errors';\n\nexport default class EmbeddedCheckoutSupport implements CheckoutSupport {\n    constructor(private unsupportedMethods: string[], private langService: LanguageService) {}\n\n    isSupported(...ids: string[]): boolean {\n        const unsupportedMethods = ids.filter((id) => this.unsupportedMethods.indexOf(id) >= 0);\n\n        if (unsupportedMethods.length === 0) {\n            return true;\n        }\n\n        throw new EmbeddedCheckoutUnsupportedError(\n            this.langService.translate('embedded_checkout.unsupported_error', {\n                methods: unsupportedMethods.join(', '),\n            }),\n        );\n    }\n}\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { CheckoutSupport, NoopCheckoutSupport } from '../checkout';\n\nimport EmbeddedCheckoutSupport from './EmbeddedCheckoutSupport';\nimport isEmbedded from './isEmbedded';\n\nconst UNSUPPORTED_METHODS = ['afterpay', 'applepay', 'amazonpay', 'googlepay', 'klarna', 'masterpass'];\n\nexport default function createEmbeddedCheckoutSupport(language: LanguageService): CheckoutSupport {\n    return isEmbedded()\n        ? new EmbeddedCheckoutSupport(UNSUPPORTED_METHODS, language)\n        : new NoopCheckoutSupport();\n}\n","import { createInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport { ExtensionContext } from './ExtensionContext';\n\nexport const withExtension = createInjectHoc(ExtensionContext, {\n    displayNamePrefix: 'WithExtension',\n});\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface LoadingNotificationProps {\n    isLoading: boolean;\n}\n\nconst LoadingNotification: FunctionComponent<LoadingNotificationProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div className=\"loadingNotification\">\n            <div className=\"loadingNotification-label optimizedCheckout-loadingToaster\">\n                <div className=\"spinner\" />\n\n                <span aria-live=\"assertive\" className=\"label\" role=\"alert\">\n                    <TranslatedString id=\"common.loading_text\" />\n                </span>\n            </div>\n        </div>\n    );\n};\n\nexport default memo(LoadingNotification);\n","import React, { PureComponent, ReactNode } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\nimport { LoadingOverlay } from '@bigcommerce/checkout/ui';\n\n\nexport interface EmptyCartMessageProps {\n    waitInterval?: number;\n    loginUrl: string;\n}\n\ninterface EmptyCartMessageState {\n    isWaiting: boolean;\n}\n\nexport default class EmptyCartMessage extends PureComponent<\n    EmptyCartMessageProps,\n    EmptyCartMessageState\n> {\n    state: EmptyCartMessageState = {\n        isWaiting: true,\n    };\n\n    private waitToken?: number;\n\n    componentDidMount(): void {\n        const { waitInterval } = this.props;\n\n        this.waitToken = setTimeout(() => {\n            this.setState({ isWaiting: false });\n        }, waitInterval);\n    }\n\n    componentWillUnmount(): void {\n        clearInterval(this.waitToken);\n    }\n\n    render(): ReactNode {\n        const { loginUrl } = this.props;\n        const { isWaiting } = this.state;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isWaiting}>\n                <TranslatedHtml data={{ url: loginUrl }} id=\"cart.empty_cart_message\" />\n            </LoadingOverlay>\n        );\n    }\n}\n","enum CustomerViewType {\n    Guest = 'guest',\n    Login = 'login',\n    SuggestedLogin = 'suggested_login',\n    EnforcedLogin = 'enforced_login',\n    CancellableEnforcedLogin = 'cancellable_enforced_login',\n    CreateAccount = 'create_account',\n}\n\nexport default CustomerViewType;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface WalletButtonsProps {\n    buttonsCount: number;\n}\n\nconst WalletButtonContainerSkeleton: FunctionComponent<\n    LoadingSkeletonProps & WalletButtonsProps\n> = ({ buttonsCount, children, isLoading }) => {\n    const renderWhileLoading = true;\n    const skeleton = (\n        <div className=\"checkoutRemote customer-skeleton\">\n            {Array(buttonsCount)\n                .fill(0)\n                .map((_v, i) => (\n                    <div className=\"skeleton-container\" key={`skeleton-container-${i}`}>\n                        <div className=\"input-skeleton\" />\n                    </div>\n                ))}\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default WalletButtonContainerSkeleton;\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nimport { isExperimentEnabled, shouldFilterApplePay } from '../common/utility';\n\nconst APPLE_PAY = 'applepay';\n\n// TODO: The API should tell UI which payment method offers its own checkout button\nexport const SUPPORTED_METHODS: string[] = [\n    'amazonpay',\n    APPLE_PAY,\n    'chasepay',\n    'braintreevisacheckout',\n    'braintreepaypal',\n    'braintreepaypalcredit',\n    'masterpass',\n    'paypalcommerce',\n    'paypalcommercevenmo',\n    'paypalcommercecredit',\n    'googlepayadyenv2',\n    'googlepayadyenv3',\n    'googlepayauthorizenet',\n    'googlepaybnz',\n    'googlepaybraintree',\n    'googlepaycheckoutcom',\n    'googlepaycybersourcev2',\n    'googlepayorbital',\n    'googlepaystripe',\n    'googlepaystripeupe',\n    'googlepayworldpayaccess',\n    'googlepaypaypalcommerce',\n    'googlepaytdonlinemart',\n];\n\nexport const getSupportedMethodIds = (methodIds: string[], checkoutSettings?: CheckoutSettings): string[] => {\n    return methodIds.filter((methodId) => {\n        // TODO: this check have to be deleted after implementation of Apple Pay for third party browsers will be tested and released\n        if (shouldFilterApplePay(methodId, isExperimentEnabled(checkoutSettings, 'PAYPAL-4324.applepay_web_browser_support'))) {\n            return false;\n        }\n\n        return SUPPORTED_METHODS.indexOf(methodId) !== -1;\n    });\n}\n","import { isApplePayWindow } from './';\n\nexport default function shouldFilterApplePay(methodId: string, isBrowserSupported: boolean): boolean {\n    if (methodId !== 'applepay') {\n        return false;\n    }\n\n    return !isApplePayWindow(window) && !isBrowserSupported;\n}\n","interface ApplePayWindow extends Window {\n    ApplePaySession: void;\n}\n\nexport default function isApplePayWindow(window: Window): window is ApplePayWindow {\n    return 'ApplePaySession' in window;\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent } from 'react';\n\nconst WALLET_BUTTON_HEIGHT = 36;\n\nexport interface CheckoutButtonProps {\n    containerId: string;\n    methodId: string;\n    isShowingWalletButtonsOnTop?: boolean;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nexport default class CheckoutButton extends PureComponent<CheckoutButtonProps> {\n    componentDidMount() {\n        const {\n            containerId,\n            initialize,\n            isShowingWalletButtonsOnTop,\n            methodId,\n            onError,\n            onClick = noop,\n        } = this.props;\n\n        const heightOption = isShowingWalletButtonsOnTop && (methodId === 'braintreepaypal' || methodId === 'braintreepaypalcredit' )\n            ? { buttonHeight: WALLET_BUTTON_HEIGHT }\n            : {};\n\n        initialize({\n            methodId,\n            [methodId]: {\n                ...heightOption,\n                container: containerId,\n                onError,\n                onClick: () => onClick(methodId),\n            },\n        });\n    }\n\n    componentWillUnmount() {\n        const { deinitialize, methodId } = this.props;\n\n        deinitialize({ methodId });\n    }\n\n    render() {\n        const { containerId } = this.props;\n\n        return <div id={containerId} />;\n    }\n}\n","import { noop } from 'lodash';\n\nimport { isBuyNowCart } from '../common/utility';\n\nexport default function navigateToOrderConfirmation(\n    orderId?: number,\n): Promise<never> {\n    let url: string;\n\n    if (orderId && isBuyNowCart()) {\n        url = `/checkout/order-confirmation/${orderId.toString()}`;\n    } else {\n        url = `${window.location.pathname.replace(/\\/$/, '')}/order-confirmation`;\n    }\n\n    window.location.replace(url);\n\n    return new Promise(noop);\n}\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst ApplePayButton: FunctionComponent<CheckoutButtonProps> = ({\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                applepay: {\n                    container: rest.containerId,\n                    shippingLabel: localeContext?.language.translate('cart.shipping_text'),\n                    subtotalLabel: localeContext?.language.translate('cart.subtotal_text'),\n                    onError,\n                    onClick: () => onClick(rest.methodId),\n                    onPaymentAuthorize: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} {...rest} />;\n};\n\nexport default ApplePayButton;\n","import { CustomerInitializeOptions } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useCallback, useContext } from 'react';\n\nimport { LocaleContext } from '@bigcommerce/checkout/locale';\n\nimport { navigateToOrderConfirmation } from '../../checkout';\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst PayPalCommerceButton: FunctionComponent<CheckoutButtonProps> = ({\n    methodId,\n    initialize,\n    onError,\n    onClick = noop,\n    ...rest\n}) => {\n    const localeContext = useContext(LocaleContext);\n    const initializeOptions = useCallback(\n        (options: CustomerInitializeOptions) =>\n            initialize({\n                ...options,\n                [methodId]: {\n                    container: rest.containerId,\n                    onError,\n                    onClick: () => onClick(methodId),\n                    onComplete: navigateToOrderConfirmation,\n                },\n            }),\n        [initialize, localeContext, onError, rest.containerId],\n    );\n\n    return <CheckoutButton initialize={initializeOptions} methodId={methodId} {...rest} />;\n};\n\nexport default PayPalCommerceButton;\n","import { CustomerInitializeOptions, CustomerRequestOptions } from \"@bigcommerce/checkout-sdk\";\nimport React, { FunctionComponent } from \"react\";\n\nimport CheckoutButton from \"./CheckoutButton\";\nimport { ApplePayButton, PayPalCommerceButton } from \"./customWalletButton\";\n\ninterface CheckoutButtonV1ResolverProps {\n    methodId: string;\n    deinitialize(options: CustomerRequestOptions): void;\n    isShowingWalletButtonsOnTop?: boolean;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodName: string): void;\n}\n\nconst CheckoutButtonV1Resolver: FunctionComponent<CheckoutButtonV1ResolverProps> = ({\n    isShowingWalletButtonsOnTop= false,\n    onError,\n    methodId,\n    ...rest\n}) => {\n    switch (methodId) {\n        case 'applepay':\n            return (\n                <ApplePayButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n\n        case 'paypalcommerce':\n        case 'paypalcommercecredit':\n            return (\n                <PayPalCommerceButton\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    methodId={methodId}\n                    onError={onError}\n                    {...rest}\n                />\n            );\n    }\n\n    return <CheckoutButton\n            containerId={`${methodId}CheckoutButton`}\n            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n            key={methodId}\n            methodId={methodId}\n            onError={onError}\n            {...rest}\n        />;\n};\n\nexport default CheckoutButtonV1Resolver;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString, useLocale } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { WalletButtonsContainerSkeleton } from '@bigcommerce/checkout/ui';\n\n\nimport { withCheckout } from '../checkout';\n\nimport { getSupportedMethodIds } from './getSupportedMethods';\nimport resolveCheckoutButton from './resolveCheckoutButton';\nimport CheckoutButtonV1Resolver from './WalletButtonV1Resolver';\n\ninterface CheckoutButtonContainerProps {\n    isPaymentStepActive: boolean;\n    checkEmbeddedSupport(methodIds: string[]): void;\n    onUnhandledError(error: Error): void;\n    onWalletButtonClick(methodId: string): void;\n}\n\ninterface WithCheckoutCheckoutButtonContainerProps {\n    availableMethodIds: string[];\n    checkoutState: CheckoutSelectors;\n    checkoutService: CheckoutService;\n    isLoading: boolean;\n}\n\nconst paypalCommerceIds = [\n    'paypalcommerce',\n    'paypalcommercecredit',\n    'paypalcommercevenmo',\n];\n\nconst isPayPalCommerce = (methodId: string): boolean => paypalCommerceIds.includes(methodId);\n\nconst CheckoutButtonContainer: FunctionComponent<CheckoutButtonContainerProps & WithCheckoutCheckoutButtonContainerProps> = (\n    {\n        availableMethodIds,\n        checkoutService,\n        checkoutState,\n        checkEmbeddedSupport,\n        isLoading,\n        isPaymentStepActive,\n        onUnhandledError,\n        onWalletButtonClick,\n    }) => {\n    const { language } = useLocale();\n\n    try {\n        checkEmbeddedSupport(availableMethodIds);\n    } catch (error) {\n        return null;\n    }\n\n    const renderButtons = () => availableMethodIds.map((methodId) => {\n        if (isPaymentStepActive && isPayPalCommerce(methodId)) {\n            return null;\n        }\n\n        const ResolvedCheckoutButton = resolveCheckoutButton({ id: methodId });\n\n        if (!ResolvedCheckoutButton) {\n            return <CheckoutButtonV1Resolver\n                deinitialize={checkoutService.deinitializeCustomer}\n                initialize={checkoutService.initializeCustomer}\n                isShowingWalletButtonsOnTop={true}\n                key={methodId}\n                methodId={methodId}\n                onClick={onWalletButtonClick}\n                onError={onUnhandledError}\n            />\n        }\n\n        return <ResolvedCheckoutButton\n                    checkoutService={checkoutService}\n                    checkoutState={checkoutState}\n                    containerId={`${methodId}CheckoutButton`}\n                    key={methodId}\n                    language={language}\n                    methodId={methodId}\n                    onUnhandledError={onUnhandledError}\n                    onWalletButtonClick={onWalletButtonClick}\n                />;\n    });\n\n    return (\n        <div className='checkout-button-container'\n             style={ isPaymentStepActive ? { position: 'absolute', left: '0', top: '-100%' } : undefined }\n        >\n            <p>\n                <TranslatedString id=\"remote.start_with_text\" />\n            </p>\n            <div className='checkout-buttons-auto-layout'>\n                <WalletButtonsContainerSkeleton buttonsCount={availableMethodIds.length} isLoading={isLoading}>\n                    <div className=\"checkoutRemote\">\n                        {renderButtons()}\n                    </div>\n                </WalletButtonsContainerSkeleton>\n            </div>\n            <div className='checkout-separator'><span><TranslatedString id='remote.or_text' /></span></div>\n        </div>\n    );\n};\n\nfunction mapToCheckoutButtonContainerProps({\n    checkoutState,\n    checkoutService,\n}: CheckoutContextProps): WithCheckoutCheckoutButtonContainerProps | null {\n    const {\n        data: {\n            getConfig,\n            getCustomer,\n            isPaymentDataRequired,\n        },\n        statuses: {\n            isInitializedCustomer,\n        },\n        errors: {\n            getInitializeCustomerError,\n        }\n     } = checkoutState;\n    const config = getConfig();\n    const checkoutSettings = config?.checkoutSettings;\n    const providers = config?.checkoutSettings.remoteCheckoutProviders ?? [];\n\n    const availableMethodIds = getSupportedMethodIds(providers, checkoutSettings);\n    const customer = getCustomer();\n\n    if (!isPaymentDataRequired()) {\n        return null;\n    }\n\n    if (!config || availableMethodIds.length === 0 || !customer?.isGuest) {\n        return null;\n    }\n\n    const isLoading = availableMethodIds.filter(\n        (methodId) => Boolean(getInitializeCustomerError(methodId)) || isInitializedCustomer(methodId)\n    ).length !== availableMethodIds.length;\n\n    return {\n        checkoutService,\n        checkoutState,\n        availableMethodIds,\n        isLoading,\n    }\n}\n\nexport default memo(withCheckout(mapToCheckoutButtonContainerProps)(CheckoutButtonContainer));\n","import { ComponentType } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport { resolveComponent } from '../common/resolver';\n\nexport default function resolveCheckoutButton(\n    resolveId: CheckoutButtonResolveId,\n): ComponentType<CheckoutButtonProps> | undefined {\n    return resolveComponent<CheckoutButtonResolveId, CheckoutButtonProps>(\n        resolveId,\n        require('../generated/checkoutButtons'),\n    );\n}\n","import { useContext, useMemo } from 'react';\n\nimport AnalyticsContext from './AnalyticsContext';\n\nconst useAnalytics = () => {\n    const analyticsContext = useContext(AnalyticsContext);\n\n    if (!analyticsContext) {\n        throw new Error('useAnalytics must be used within an <AnalyticsProvider>');\n    }\n\n    return useMemo(\n        () => ({\n            analyticsTracker: analyticsContext.analyticsTracker,\n        }),\n        [analyticsContext],\n    );\n};\n\nexport default useAnalytics;\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useEffect, useState } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { stopPropagation } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button } from '../../ui/button';\nimport { IconBolt } from '../../ui/icon';\n\nexport interface BoltCheckoutSuggestionProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    methodId: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    onUnhandledError?(error: Error): void;\n}\n\nconst BoltCheckoutSuggestion: FunctionComponent<BoltCheckoutSuggestionProps> = ({\n    isExecutingPaymentMethodCheckout,\n    methodId,\n    deinitializeCustomer,\n    executePaymentMethodCheckout,\n    initializeCustomer,\n    onUnhandledError = noop,\n}) => {\n    const [showSuggestion, setShowSuggestion] = useState<boolean>(false);\n    const { analyticsTracker } = useAnalytics();\n\n    useEffect(() => {\n        deinitializeCustomer({ methodId });\n\n        try {\n            initializeCustomer({\n                methodId,\n                bolt: {\n                    onInit: (hasBoltAccount, email) => {\n                        setShowSuggestion(hasBoltAccount);\n\n                        if (email) {\n                            analyticsTracker.customerSuggestionInit({hasBoltAccount});\n                        }\n                    },\n                },\n            });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        return () => {\n            deinitializeCustomer({ methodId });\n        };\n    }, [initializeCustomer, deinitializeCustomer, methodId, onUnhandledError]);\n\n    if (!showSuggestion) {\n        return null;\n    }\n\n    const handleActionClick = async () => {\n        await executePaymentMethodCheckout({ methodId });\n    };\n\n    return (\n        <div className=\"checkoutSuggestion\" onClick={stopPropagation()}>\n            <p className=\"checkoutSuggestion-message\">\n                <TranslatedString\n                    data={{\n                        provider: 'Bolt',\n                        providerFlow: 'Bolt Checkout',\n                    }}\n                    id=\"customer.suggestion_text\"\n                />\n            </p>\n            <Button\n                className=\"checkoutSuggestion-button checkoutSuggestion-button--bolt\"\n                data-test=\"suggestion-action-button\"\n                isLoading={isExecutingPaymentMethodCheckout}\n                onClick={handleActionClick}\n            >\n                <IconBolt additionalClassName=\"checkoutSuggestion-button-icon--bolt\" />\n                <TranslatedString\n                    data={{ providerFlow: 'Bolt Checkout' }}\n                    id=\"customer.suggestion_action\"\n                />\n            </Button>\n        </div>\n    );\n};\n\nexport default memo(BoltCheckoutSuggestion);\n","import { SyntheticEvent } from 'react';\n\nexport default function stopPropagation<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.stopPropagation();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import {\n    CheckoutSelectors,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n} from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { useAnalytics } from '@bigcommerce/checkout/analytics';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../../checkout';\nimport { PaymentMethodId } from '../../payment/paymentMethod';\n\n\nimport BoltCheckoutSuggestion from './BoltCheckoutSuggestion';\n\nexport interface CheckoutSuggestionProps {\n    onUnhandledError?(error: Error): void;\n}\n\nexport interface WithCheckoutSuggestionsProps {\n    isExecutingPaymentMethodCheckout: boolean;\n    providerWithCustomCheckout?: string;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n}\n\nconst CheckoutSuggestion: FunctionComponent<\n    WithCheckoutSuggestionsProps & CheckoutSuggestionProps\n> = ({\n    providerWithCustomCheckout,\n    executePaymentMethodCheckout,\n    ...rest\n}) => {\n    const { analyticsTracker } = useAnalytics();\n\n    const handleExecutePaymentMethodCheckout = (options: ExecutePaymentMethodCheckoutOptions) => {\n        analyticsTracker.customerSuggestionExecute();\n\n        return executePaymentMethodCheckout(options);\n    }\n\n    if (providerWithCustomCheckout === PaymentMethodId.Bolt) {\n        return <BoltCheckoutSuggestion\n                    executePaymentMethodCheckout={handleExecutePaymentMethodCheckout}\n                    methodId={providerWithCustomCheckout}\n                    {...rest}\n                />;\n    }\n\n    return null;\n};\n\nconst mapToCheckoutSuggestionProps = ({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutSuggestionsProps | null => {\n    const {\n        data: { getCheckout, getConfig },\n        statuses: { isExecutingPaymentMethodCheckout },\n    } = checkoutState;\n\n    const checkout = getCheckout();\n    const config = getConfig();\n\n    if (!checkout || !config) {\n        return null;\n    }\n\n    return {\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        providerWithCustomCheckout: config.checkoutSettings.providerWithCustomCheckout || undefined,\n    };\n};\n\nexport default withCheckout(mapToCheckoutSuggestionProps)(memo(CheckoutSuggestion));\n","import { Checkout, Customer } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nimport { SUPPORTED_METHODS } from './getSupportedMethods';\n\nconst SUPPORTED_SIGNOUT_METHODS = ['amazonpay'];\n\nexport const isSupportedSignoutMethod = (methodId: string): boolean => {\n    return SUPPORTED_SIGNOUT_METHODS.indexOf(methodId) > -1;\n};\n\nexport default function canSignOut(\n    customer: Customer,\n    checkout: Checkout,\n    methodId: string,\n): boolean {\n    if (isSupportedSignoutMethod(methodId)) {\n        return true;\n    }\n\n    if (customer.isGuest) {\n        return false;\n    }\n\n    // Return false if payment method offers its own checkout button\n    return every(\n        checkout.payments,\n        (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) === -1,\n    );\n}\n","import { CheckoutSelectors, CustomerRequestOptions, CustomError } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { withCheckout } from '../checkout';\nimport { isExperimentEnabled } from '../common/utility';\n\nimport canSignOut from './canSignOut';\n\nexport interface CustomerInfoProps {\n    onSignOut?(event: CustomerSignOutEvent): void;\n    onSignOutError?(error: CustomError): void;\n}\n\nexport interface CustomerSignOutEvent {\n    isCartEmpty: boolean;\n}\n\ninterface WithCheckoutCustomerInfoProps {\n    email: string;\n    methodId: string;\n    isRedirectExperimentEnabled: boolean;\n    isSignedIn: boolean;\n    isSigningOut: boolean;\n    logoutLink: string;\n    shouldRedirectToStorefrontForAuth: boolean;\n    signOut(options?: CustomerRequestOptions): Promise<CheckoutSelectors>;\n}\n\nconst CustomerInfo: FunctionComponent<CustomerInfoProps & WithCheckoutCustomerInfoProps> = ({\n    email\n    ,\n}) => {\n\n    return (\n        <div className=\"customerView\" data-test=\"checkout-customer-info\">\n            <div\n                className=\"customerView-body optimizedCheckout-contentPrimary\"\n                data-test=\"customer-info\"\n            >\n                {email}\n            </div>\n\n            <div className=\"customerView-actions\">\n                \n            </div>\n        </div>\n    );\n};\n\nfunction mapToWithCheckoutCustomerInfoProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerInfoProps | null {\n    const {\n        data: { getBillingAddress, getCheckout, getCustomer, getConfig },\n        statuses: { isSigningOut },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const config = getConfig();\n\n    if (!billingAddress || !checkout || !customer || !config) {\n        return null;\n    }\n\n    const { checkoutSettings, links: { logoutLink } } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const methodId =\n        checkout.payments && checkout.payments.length === 1 ? checkout.payments[0].providerId : '';\n\n    return {\n        email: billingAddress.email || customer.email,\n        methodId,\n        isRedirectExperimentEnabled,\n        isSignedIn: canSignOut(customer, checkout, methodId),\n        isSigningOut: isSigningOut(),\n        logoutLink,\n        shouldRedirectToStorefrontForAuth: checkoutSettings.shouldRedirectToStorefrontForAuth,\n        signOut: checkoutService.signOutCustomer,\n    };\n}\n\nexport default withCheckout(mapToWithCheckoutCustomerInfoProps)(CustomerInfo);\n","import { Cart } from '@bigcommerce/checkout-sdk';\n\n/**\n * Minimum charge amounts due to the Stripe documentation\n * https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts\n */\nenum stripeLinkMinAmount {\n    'USD' = 0.5,\n    'AED' = 2,\n    'AUD' = 0.5,\n    'BGN' = 1,\n    'BRL' = 0.5,\n    'CAD' = 0.5,\n    'CHF' = 0.5,\n    'CZK' = 15,\n    'DKK' = 2.5,\n    'EUR' = 0.5,\n    'GBP' = 0.3,\n    'HKD' = 4,\n    'HUF' = 175,\n    'INR' = 0.5,\n    'JPY' = 50,\n    'MXN' = 10,\n    'MYR' = 2,\n    'NOK' = 3,\n    'NZD' = 0.5,\n    'PLN' = 2,\n    'RON' = 2,\n    'SEK' = 3,\n    'SGD' = 0.5,\n    'THB' = 10,\n}\n\nconst isStripeLinkMinAmount = (code: string): code is keyof typeof stripeLinkMinAmount => {\n    return code in stripeLinkMinAmount;\n};\n\nconst shouldUseStripeLinkByMinimumAmount = (cart: Cart) => {\n    const {\n        currency: { code },\n        cartAmount,\n    } = cart;\n\n    if (isStripeLinkMinAmount(code) && cartAmount >= stripeLinkMinAmount[code]) {\n        return true;\n    }\n\n    return false;\n};\n\nexport default shouldUseStripeLinkByMinimumAmount;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst CustomerSkeleton: FunctionComponent<LoadingSkeletonProps> = ({ children, isLoading }) => {\n    const skeleton = (\n        <div className=\"checkout-form customer-skeleton\">\n            <div className=\"customerEmail-container\">\n                <div className=\"customerEmail-body\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"button-skeleton skeleton-container subscription-skeleton\" />\n                </div>\n                <div className=\"customerEmail-action customerEmail-floating--enabled\">\n                    <div className=\"button-skeleton skeleton-container\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default CustomerSkeleton;\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport CheckoutButton, { CheckoutButtonProps } from '../CheckoutButton';\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n}\n\nexport default AmazonPayV2Button;\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div') as unknown as HTMLElement;\n    const amazonButton = container?.shadowRoot?.querySelector('.amazonpay-button-view1') as unknown as HTMLElement;\n\n    if (container && amazonButton) {\n        amazonButton.style.height = '36px';\n\n        return;\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n}\n","import { CheckoutSettings, CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckoutButton from './CheckoutButton';\nimport { AmazonPayV2Button, ApplePayButton, PayPalCommerceButton } from './customWalletButton';\nimport { getSupportedMethodIds } from './getSupportedMethods';\n\nexport interface CheckoutButtonListProps {\n    methodIds?: string[];\n    isInitializing?: boolean;\n    isShowingWalletButtonsOnTop?: boolean;\n    hideText?: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    checkoutSettings: CheckoutSettings;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onError?(error: Error): void;\n    onClick?(methodId: string): void;\n}\n\nconst CheckoutButtonList: FunctionComponent<CheckoutButtonListProps> = ({\n    checkEmbeddedSupport,\n    onError,\n    isInitializing = false,\n    isShowingWalletButtonsOnTop= false,\n    checkoutSettings,\n    methodIds = [],\n    hideText = false,\n    ...rest\n}) => {\n    const supportedMethodIds = getSupportedMethodIds(methodIds, checkoutSettings);\n\n    if (supportedMethodIds.length === 0) {\n        return null;\n    }\n\n    if (checkEmbeddedSupport) {\n        try {\n            checkEmbeddedSupport(supportedMethodIds);\n        } catch (error) {\n            if (error instanceof Error && onError) {\n                onError(error);\n            } else {\n                throw error;\n            }\n\n            return null;\n        }\n    }\n\n    return (\n        <>\n            {!isInitializing && !hideText && (\n                <p>\n                    <TranslatedString id=\"remote.continue_with_text\" />\n                </p>\n            )}\n\n            <div className=\"checkoutRemote\">\n                {methodIds.map((methodId) => {\n                    if (methodId === 'applepay') {\n                        return (\n                            <ApplePayButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'amazonpay') {\n                        return (\n                            <AmazonPayV2Button\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    if (methodId === 'paypalcommerce' || methodId === 'paypalcommercecredit') {\n                        return (\n                            <PayPalCommerceButton\n                                containerId={`${methodId}CheckoutButton`}\n                                key={methodId}\n                                methodId={methodId}\n                                onError={onError}\n                                {...rest}\n                            />\n                        );\n                    }\n\n                    return (\n                        <CheckoutButton\n                            containerId={`${methodId}CheckoutButton`}\n                            isShowingWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                            key={methodId}\n                            methodId={methodId}\n                            onError={onError}\n                            {...rest}\n                        />\n                    );\n                })}\n            </div>\n        </>\n    );\n};\n\nexport default memo(CheckoutButtonList);\n","// NOTE: This is a legacy regex used to create accounts, more flexible than the current used one\n// we need to keep this regex for login validation as accounts might have been created using this regex\nexport const EMAIL_REGEXP =\n    /^[a-z0-9!#$%&'*+/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport { EMAIL_REGEXP } from './validationPatterns';\n\nexport interface EmailValidationSchemaOptions {\n    language: LanguageService;\n}\n\nexport default function getEmailValidationSchema({\n    language,\n}: EmailValidationSchemaOptions): ObjectSchema<{ email: string }> {\n    return object({\n        email: string()\n            .max(256)\n            .matches(EMAIL_REGEXP, language.translate('customer.email_invalid_error'))\n            .required(language.translate('customer.email_required_error')),\n    });\n}\n","import { FormField, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport { object, ObjectSchema, string } from 'yup';\n\nimport {\n    CustomFormFieldValues,\n    getCustomFormFieldsValidationSchema,\n    TranslateValidationErrorFunction,\n} from '../formFields';\n\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport { PasswordRequirements } from './getPasswordRequirements';\n\nexport type CreateAccountFormValues = {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    acceptsMarketingEmails?: string[];\n    token?: string;\n} & CustomFormFieldValues;\n\nexport interface CreateCustomerValidationSchema {\n    formFields: FormField[];\n    language: LanguageService;\n    passwordRequirements: PasswordRequirements;\n}\n\n/* istanbul ignore next */ // Currently no limitation on new customer's name\nfunction getTranslateCreateCustomerError(\n    language?: LanguageService,\n): TranslateValidationErrorFunction {\n    return (type, { label, min, max }) => {\n        if (!language) {\n            return;\n        }\n\n        if (type === 'required') {\n            return language.translate('customer.required_error', { label });\n        }\n\n        if (type === 'max' && max) {\n            return language.translate('customer.max_error', { label, max });\n        }\n\n        if (type === 'min' && min) {\n            return language.translate('customer.min_error', { label, min });\n        }\n\n        if (type === 'invalid') {\n            return language.translate('customer.invalid_characters_error', { label });\n        }\n    };\n}\n\nexport default memoize(function getCreateCustomerValidationSchema({\n    formFields,\n    language,\n    passwordRequirements: { description, numeric, alpha, minLength },\n}: CreateCustomerValidationSchema): ObjectSchema<CreateAccountFormValues> {\n    return object({\n        firstName: string().required(language.translate('address.first_name_required_error')),\n        lastName: string().required(language.translate('address.last_name_required_error')),\n        password: string()\n            .required(language.translate('customer.password_required_error') || description)\n            .matches(\n                numeric,\n                language.translate('customer.password_number_required_error') || description,\n            )\n            .matches(\n                alpha,\n                language.translate('customer.password_letter_required_error') || description,\n            )\n            .min(\n                minLength,\n                language.translate('customer.password_under_minimum_length_error') || description,\n            )\n            .max(100, language.translate('customer.password_over_maximum_length_error')),\n    })\n        .concat(getEmailValidationSchema({ language }))\n        .concat(\n            getCustomFormFieldsValidationSchema({\n                formFields,\n                translate: getTranslateCreateCustomerError(language),\n            }),\n        );\n});\n","/* istanbul ignore file */\n\n// TODO: CHECKOUT-9010 Cover 'Customer registration failure due to using an existing email' in functional tests repo\nimport { FormField } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, useMemo } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { isRequestError } from '../common/error';\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { DynamicFormField, Fieldset, Form } from '../ui/form';\n\nimport getCreateCustomerValidationSchema, {\n    CreateAccountFormValues,\n} from './getCreateCustomerValidationSchema';\nimport getPasswordRequirements from './getPasswordRequirements';\nimport './CreateAccountForm.scss';\n\nexport interface CreateAccountFormProps {\n    formFields: FormField[];\n    createAccountError?: Error;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    isCreatingAccount?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onSubmit(values: CreateAccountFormValues): void;\n}\n\nfunction getAcceptsMarketingEmailsDefault(defaultShouldSubscribe: boolean, requiresMarketingConsent: boolean): string[] {\n    if (defaultShouldSubscribe) {\n        return ['1'];\n    }\n\n    return requiresMarketingConsent ? [] : ['0'];\n}\n\nfunction transformFormFieldsData(formFields: FormField[], defaultShouldSubscribe: boolean): FormField[] {\n    return formFields.map(field => {\n        if (field.name === 'acceptsMarketingEmails') {\n            const { options } = field;\n            const items = options?.items || [];\n\n            const updatedItems = items.map(item => {\n                return {\n                    value: defaultShouldSubscribe ? '1' : item.value,\n                    label: item.label,\n                }\n            });\n\n            return {\n                ...field,\n                options: {\n                    items: updatedItems,\n                }\n            }\n        }\n\n        return field;\n    });\n}\n\nconst CreateAccountForm: FunctionComponent<\n    CreateAccountFormProps & WithLanguageProps & FormikProps<CreateAccountFormValues>\n> = ({ fixNewsletterCheckboxExperimentEnabled, formFields, createAccountError, isCreatingAccount, isExecutingPaymentMethodCheckout, onCancel, isFloatingLabelEnabled, defaultShouldSubscribe }) => {\n    const createAccountErrorMessage = useMemo(() => {\n        if (!createAccountError) {\n            return;\n        }\n\n        if (isRequestError(createAccountError) && createAccountError.status === 409) {\n            const splitMessage = createAccountError.message.split(':');\n\n            if (splitMessage.length > 1) {\n                return (\n                    <TranslatedString\n                        data={{ email: splitMessage[1].trim() }}\n                        id=\"customer.email_in_use_text\"\n                    />\n                );\n            }\n\n            return <TranslatedString id=\"customer.unknown_email_in_use_text\" />;\n        }\n\n        return createAccountError.message;\n    }, [createAccountError]);\n\n    const fields = fixNewsletterCheckboxExperimentEnabled ?\n        transformFormFieldsData(formFields, defaultShouldSubscribe): formFields;\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset>\n                {createAccountErrorMessage && (\n                    <Alert type={AlertType.Error}>{createAccountErrorMessage}</Alert>\n                )}\n                <div className=\"create-account-form\">\n                    {fields.map((field) => (\n                        <DynamicFormField\n                            autocomplete={field.name}\n                            extraClass={`dynamic-form-field--${field.name}`}\n                            field={field}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            key={field.id}\n                            parentFieldName={field.custom ? 'customFields' : undefined}\n                        />\n                    ))}\n                </div>\n            </Fieldset>\n\n            <div className=\"form-actions\">\n                <Button\n                    disabled={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    id=\"checkout-customer-create\"\n                    isLoading={isCreatingAccount || isExecutingPaymentMethodCheckout}\n                    testId=\"customer-continue-create\"\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString id=\"customer.create_account_action\" />\n                </Button>\n\n                <a\n                    className=\"button optimizedCheckout-buttonSecondary\"\n                    data-test=\"customer-cancel-button\"\n                    href=\"#\"\n                    id=\"checkout-customer-cancel\"\n                    onClick={preventDefault(onCancel)}\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </a>\n            </div>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<CreateAccountFormProps & WithLanguageProps, CreateAccountFormValues>({\n        handleSubmit: (values, { props: { onSubmit = noop } }) => {\n            onSubmit(values);\n        },\n        mapPropsToValues: ({ defaultShouldSubscribe, requiresMarketingConsent }) => ({\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            customFields: {},\n            acceptsMarketingEmails: getAcceptsMarketingEmailsDefault(defaultShouldSubscribe, requiresMarketingConsent),\n        }),\n        validationSchema: ({\n            language,\n            formFields,\n        }: CreateAccountFormProps & WithLanguageProps) => {\n            const passwordRequirements = formFields.find(\n                ({ requirements }) => requirements,\n            )?.requirements;\n\n            if (!passwordRequirements) {\n                throw new Error('Password requirements missing');\n            }\n\n            const schema = getCreateCustomerValidationSchema({\n                language,\n                formFields,\n                passwordRequirements: getPasswordRequirements(passwordRequirements),\n            });\n\n            return schema;\n        },\n    })(CreateAccountForm),\n);\n","import React, { FunctionComponent, MouseEventHandler } from 'react';\n\nimport { parseAnchor, preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { useLocale } from './LocaleContext';\nimport { TranslatedStringProps } from './TranslatedString';\n\nexport type TranslatedLinkProps = TranslatedStringProps & {\n    testId?: string;\n    onClick: MouseEventHandler;\n};\n\nconst TranslatedLink: FunctionComponent<TranslatedLinkProps> = ({ data, id, onClick, testId }) => {\n    const { language } = useLocale();\n    const translatedString = language.translate(id, data);\n    const parsedString = parseAnchor(translatedString);\n\n    return parsedString.length ? (\n        <>\n            {parsedString[0]}\n            <a data-test={testId} href=\"#\" onClick={preventDefault(onClick)}>\n                {parsedString[1]}\n            </a>\n            {parsedString[2]}\n        </>\n    ) : (\n        <>{translatedString}</>\n    );\n};\n\nexport default TranslatedLink;\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface EmailFieldProps {\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string): void;\n}\n\nconst EmailField: FunctionComponent<EmailFieldProps> = ({ onChange, isFloatingLabelEnabled }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <TextInput\n                {...props.field}\n                autoComplete={props.field.name}\n                id={props.field.name}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                type=\"email\"\n            />\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.email_label\" />, []);\n\n    return (\n        <FormField\n            input={renderInput}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            labelContent={labelContent}\n            name=\"email\"\n            onChange={onChange}\n        />\n    );\n};\n\nexport default memo(EmailField);\n","import { SignInEmail } from '@bigcommerce/checkout-sdk';\nimport { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useMemo } from 'react';\n\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\nimport { LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Form } from '../ui/form';\nimport { Modal, ModalHeader } from '../ui/modal';\n\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\n\nexport interface EmailLoginFormProps {\n    email?: string;\n    isOpen: boolean;\n    isSendingEmail?: boolean;\n    emailHasBeenRequested?: boolean;\n    sentEmail?: SignInEmail;\n    sentEmailError?: any;\n    isFloatingLabelEnabled?: boolean;\n    onRequestClose?(): void;\n    onSendLoginEmail?(values: EmailLoginFormValues): void;\n}\n\nexport interface EmailLoginFormValues {\n    email: string;\n}\n\nconst EmailLoginForm: FunctionComponent<\n    EmailLoginFormProps & WithLanguageProps & FormikProps<EmailLoginFormValues>\n> = ({\n    email,\n    isOpen,\n    isSendingEmail = false,\n    emailHasBeenRequested,\n    onRequestClose = noop,\n    sentEmailError,\n    sentEmail,\n    submitForm,\n    isFloatingLabelEnabled,\n    values: { email: formEmail },\n}) => {\n    const modalHeaderStringId = useMemo(() => {\n        if (emailHasBeenRequested) {\n            if (sentEmailError) {\n                return 'common.error_heading';\n            }\n\n            return 'login_email.sent_header';\n        }\n\n        if (email) {\n            return 'login_email.header_with_email';\n        }\n\n        return 'login_email.header';\n    }, [emailHasBeenRequested, sentEmailError, email]);\n\n    const okButton = useMemo(\n        () => (\n            <div className=\"modal-footer\">\n                <Button onClick={onRequestClose}>\n                    <TranslatedString id=\"common.ok_action\" />\n                </Button>\n            </div>\n        ),\n        [onRequestClose],\n    );\n\n    const footer = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return okButton;\n        }\n\n        if (emailHasBeenRequested && !sentEmailError) {\n            if (isSendingEmail) {\n                return <LoadingSpinner isLoading />;\n            }\n\n            if (sentEmail && sentEmail.sent_email === 'reset_password') {\n                return okButton;\n            }\n\n            return (\n                <p>\n                    <TranslatedLink id=\"login_email.resend_link\" onClick={submitForm} />\n                    <TranslatedLink id=\"login_email.use_password_link\" onClick={onRequestClose} />\n                </p>\n            );\n        }\n\n        return (\n            <div className=\"modal-footer\">\n                <Button\n                    className=\"optimizedCheckout-buttonSecondary\"\n                    onClick={onRequestClose}\n                    type=\"button\"\n                >\n                    <TranslatedString id=\"common.cancel_action\" />\n                </Button>\n                <Button isLoading={isSendingEmail} type=\"submit\" variant={ButtonVariant.Primary}>\n                    <TranslatedString id=\"login_email.send\" />\n                </Button>\n            </div>\n        );\n    }, [\n        sentEmailError,\n        emailHasBeenRequested,\n        okButton,\n        submitForm,\n        isSendingEmail,\n        onRequestClose,\n        sentEmail,\n    ]);\n\n    const error = useMemo(() => {\n        if (!sentEmailError) {\n            return null;\n        }\n\n        const { status } = sentEmailError;\n\n        return (\n            <Alert type={AlertType.Error}>\n                {status === 429 ? (\n                    <TranslatedString id=\"login_email.error_temporary_disabled\" />\n                ) : (\n                    <TranslatedString\n                        id={\n                            status === 404\n                                ? 'login_email.error_not_found'\n                                : 'login_email.error_server'\n                        }\n                    />\n                )}\n            </Alert>\n        );\n    }, [sentEmailError]);\n\n    const form = useMemo(() => {\n        if (sentEmailError && sentEmailError.status === 429) {\n            return null;\n        }\n\n        if (emailHasBeenRequested && sentEmail && !sentEmailError) {\n            const { expiry, sent_email } = sentEmail;\n\n            return (\n                <p>\n                    <TranslatedHtml\n                        data={{\n                            minutes: Math.round(expiry / 60),\n                        }}\n                        id={\n                            sent_email === 'sign_in'\n                                ? 'login_email.sent_text'\n                                : 'customer.reset_password_before_login_error'\n                        }\n                    />\n                </p>\n            );\n        }\n\n        if (emailHasBeenRequested && !sentEmail) {\n            return <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />;\n        }\n\n        return (\n            <>\n                <p>\n                    <TranslatedString id=\"login_email.text\" />\n                </p>\n                <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n            </>\n        );\n    }, [sentEmailError, emailHasBeenRequested, sentEmail, formEmail]);\n\n    return (\n        <Modal\n            additionalBodyClassName=\"modal--withText\"\n            additionalModalClassName=\"modal--medium\"\n            header={\n                <ModalHeader>\n                    <TranslatedString id={modalHeaderStringId} />\n                </ModalHeader>\n            }\n            isOpen={isOpen}\n            onRequestClose={onRequestClose}\n            shouldShowCloseButton={true}\n        >\n            <Form>\n                <LoadingSpinner isLoading={isSendingEmail && !email} />\n                {error}\n                {form}\n                {footer}\n            </Form>\n        </Modal>\n    );\n};\n\nexport default withLanguage(\n    withFormik<EmailLoginFormProps & WithLanguageProps, EmailLoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n        }),\n        handleSubmit: (values, { props: { onSendLoginEmail = noop } }) => {\n            onSendLoginEmail(values);\n        },\n        validationSchema: ({ language }: WithLanguageProps) =>\n            getEmailValidationSchema({ language }),\n    })(memo(EmailLoginForm)),\n);\n","import { FastlaneHostWindow } from './types';\n\nexport default function isFastlaneHostWindow(window: Window): window is FastlaneHostWindow {\n    /* eslint-disable no-prototype-builtins */\n    return window.hasOwnProperty('paypalFastlane') || window.hasOwnProperty('braintreeFastlane');\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isFastlaneHostWindow from './is-fastlane-window';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\nimport { FastlanePrivacySettings } from './types';\n\nimport './PayPalFastlaneWatermark.scss';\n\nconst PayPalFastlaneWatermark: FunctionComponent = () => {\n    const { checkoutState } = useCheckout();\n    const { getPaymentMethod, getConfig } = checkoutState.data;\n    const providerWithCustomCheckout = getConfig()?.checkoutSettings?.providerWithCustomCheckout;\n\n    const paymentMethod =\n        providerWithCustomCheckout &&\n        isPayPalFastlaneMethod(providerWithCustomCheckout) &&\n        getPaymentMethod(providerWithCustomCheckout);\n\n    const shouldRenderFastlaneWatermark =\n        !!paymentMethod &&\n        isFastlaneHostWindow(window) &&\n        paymentMethod?.initializationData?.isFastlanePrivacySettingEnabled;\n\n    useEffect(() => {\n        if(shouldRenderFastlaneWatermark && isFastlaneHostWindow(window)) {\n            const fastlane = isBraintreeFastlaneMethod(providerWithCustomCheckout)\n                ? window.braintreeFastlane\n                : window.paypalFastlane;\n\n            fastlane.FastlaneWatermarkComponent({\n                includeAdditionalInfo: true,\n            })\n                .then((result: FastlanePrivacySettings) => {\n                    result.render('#paypalFastlaneWatermark');\n                });\n        }\n    }, []);\n\n    if (shouldRenderFastlaneWatermark) {\n        return (\n            <div className='paypalFastlaneWatermark-container'>\n                <div id='paypalFastlaneWatermark' data-test='paypalFastlaneWatermark' />\n            </div>\n        );\n    }\n\n    return <></>;\n}\n\nexport default PayPalFastlaneWatermark;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { CheckboxFormField, Fieldset } from '../ui/form';\n\nconst PrivacyPolicyCheckboxFieldLink: FunctionComponent<{ url: string }> = ({ url }) => (\n    <CheckboxFormField\n        labelContent={<TranslatedHtml data={{ url }} id=\"privacy_policy.label\" />}\n        name=\"privacyPolicy\"\n        testId=\"privacy-policy-checkbox\"\n    />\n);\n\nconst PrivacyPolicyFieldset: FunctionComponent<{ url: string }> = ({ url }) => (\n    <Fieldset additionalClassName=\"checkout-privacy-policy\">\n        <PrivacyPolicyCheckboxFieldLink url={url} />\n    </Fieldset>\n);\n\nconst PrivacyPolicyAutoConsent: FunctionComponent<{ url: string }> = ({ url }) => (\n    <p>\n        <TranslatedHtml data={{ url }} id=\"privacy_policy_auto_consent.label\" />\n    </p>\n);\n\nconst PrivacyPolicyField: FunctionComponent<{ url: string; isExpressPrivacyPolicy: boolean }> = ({\n    url,\n    isExpressPrivacyPolicy,\n}) => {\n    if (isExpressPrivacyPolicy) {\n        return <PrivacyPolicyAutoConsent url={url} />;\n    }\n\n    return <PrivacyPolicyFieldset url={url} />;\n};\n\nexport default memo(PrivacyPolicyField);\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\nimport { boolean, BooleanSchema, object, ObjectSchema } from 'yup';\n\nexport interface PrivacyPolicyValidatonSchemaProps {\n    isRequired: boolean;\n    language: LanguageService;\n}\n\nexport default function getPrivacyPolicyValidationSchema({\n    isRequired,\n    language,\n}: PrivacyPolicyValidatonSchemaProps): ObjectSchema<{ privacyPolicy?: boolean }> {\n    const schemaFields: {\n        privacyPolicy?: BooleanSchema;\n    } = {};\n\n    if (isRequired) {\n        schemaFields.privacyPolicy = boolean().oneOf(\n            [true],\n            language.translate('privacy_policy.required_error'),\n        );\n    }\n\n    return object(schemaFields);\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport { Input, Label } from '../ui/form';\n\nexport type SubscribeFieldProps = FieldProps<boolean> & {\n    requiresMarketingConsent: boolean;\n};\n\nconst SubscribeField: FunctionComponent<SubscribeFieldProps> = ({\n    field,\n    requiresMarketingConsent,\n}) => (\n    <>\n        <Input\n            {...field}\n            checked={field.value}\n            className=\"form-checkbox\"\n            id={field.name}\n            testId=\"should-subscribe-checkbox\"\n            type=\"checkbox\"\n        />\n\n        <Label htmlFor={field.name}>\n            <TranslatedHtml\n                id={\n                    requiresMarketingConsent\n                        ? 'customer.guest_marketing_consent'\n                        : 'customer.guest_subscribe_to_newsletter_text'\n                }\n            />\n        </Label>\n    </>\n);\n\nexport default memo(SubscribeField);\n","export class SubscribeSessionStorage {\n    static key = 'shouldSubscribe';\n\n    static setSubscribeStatus(shouldSubscribe: boolean) {\n        sessionStorage.setItem(this.key, `${shouldSubscribe}`)\n    }\n\n    static getSubscribeStatus(): boolean {\n        const value = sessionStorage.getItem(this.key);\n\n        return value === 'true';\n    }\n\n    static removeSubscribeStatus() {\n        sessionStorage.removeItem(this.key);\n    }\n}\n","import classNames from 'classnames';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\nimport { PayPalFastlaneWatermark } from '@bigcommerce/checkout/paypal-fastlane-integration';\n\nimport { isExperimentEnabled } from '../common/utility';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport EmailField from './EmailField';\nimport SubscribeField from './SubscribeField';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nfunction getShouldSubscribeValue(requiresMarketingConsent: boolean, defaultShouldSubscribe: boolean) {\n    if (SubscribeSessionStorage.getSubscribeStatus()) {\n        return true;\n    }\n\n    return requiresMarketingConsent ? false : defaultShouldSubscribe\n}\n\nexport interface GuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    continueAsGuestButtonLabelId: string;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    isLoading: boolean;\n    privacyPolicyUrl?: string;\n    isExpressPrivacyPolicy: boolean;\n    isFloatingLabelEnabled?: boolean;\n    shouldShowEmailWatermark: boolean;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    onShowLogin(): void;\n}\n\nexport interface GuestFormValues {\n    email: string;\n    shouldSubscribe: boolean;\n}\n\nconst GuestForm: FunctionComponent<\n    GuestFormProps & WithLanguageProps & FormikProps<GuestFormValues>\n> = ({\n    canSubscribe,\n    checkoutButtons,\n    continueAsGuestButtonLabelId,\n    isLoading,\n    onChangeEmail,\n    onShowLogin,\n    privacyPolicyUrl,\n    requiresMarketingConsent,\n    isExpressPrivacyPolicy,\n    isFloatingLabelEnabled,\n    shouldShowEmailWatermark,\n}) => {\n    const {\n        checkoutState: { \n            data: { getConfig } \n        }    \n    } = useCheckout();\n\n    const config = getConfig();\n\n    const renderField = useCallback(\n        (fieldProps: FieldProps<boolean>) => (\n            <SubscribeField {...fieldProps} requiresMarketingConsent={requiresMarketingConsent} />\n        ),\n        [requiresMarketingConsent],\n    );\n\n    if (!config) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            shouldRedirectToStorefrontForAuth,\n        },\n        links: {\n            checkoutLink,\n            loginLink,\n        }\n    } = config;\n\n    const isRedirectExperimentEnabled = isExperimentEnabled(config.checkoutSettings, 'CHECKOUT-9138.redirect_to_storefront_for_auth');\n\n    const handleLogin: () => void = () => {\n        if (shouldRedirectToStorefrontForAuth && isRedirectExperimentEnabled) {\n            window.location.assign(`${loginLink}?redirectTo=${checkoutLink}`);\n\n            return;\n        }\n\n        return onShowLogin();\n    }\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-guest\"\n            testId=\"checkout-customer-guest\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.guest_customer_text\" />\n                    </Legend>\n                }\n            >\n                <div className=\"customerEmail-container\">\n                    <div className=\"customerEmail-body\">\n                        <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail}/>\n\n                        {shouldShowEmailWatermark && <PayPalFastlaneWatermark />}\n\n                        {(canSubscribe || requiresMarketingConsent) && (\n                            <BasicFormField name=\"shouldSubscribe\" render={renderField} />\n                        )}\n                    </div>\n\n                    <div\n                        className={classNames('form-actions customerEmail-action', {\n                            'customerEmail-floating--enabled': isFloatingLabelEnabled,\n                        })}\n                    >\n                        <Button\n                            className=\"customerEmail-button\"\n                            id=\"checkout-customer-continue\"\n                            isLoading={isLoading}\n                            testId=\"customer-continue-as-guest-button\"\n                            type=\"submit\"\n                            variant={ButtonVariant.Primary}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </Button>\n                    </div>\n                </div>\n\n                {privacyPolicyUrl && (\n                    <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                )}\n\n                {!isLoading && (\n                    <p>\n                        <TranslatedString id=\"customer.login_text\" />{' '}\n                        <a\n                            data-test=\"customer-continue-button\"\n                            id=\"checkout-customer-login\"\n                            onClick={handleLogin}\n                            role=\"button\"\n                            tabIndex={0}\n                        >\n                            <TranslatedString id=\"customer.login_action\" />\n                        </a>\n                    </p>\n                )}\n\n                {checkoutButtons}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<GuestFormProps & WithLanguageProps, GuestFormValues>({\n        mapPropsToValues: ({\n            email = '',\n            defaultShouldSubscribe = false,\n            requiresMarketingConsent,\n        }) => ({\n            email,\n            shouldSubscribe: getShouldSubscribeValue(requiresMarketingConsent, defaultShouldSubscribe),\n            privacyPolicy: false,\n        }),\n        handleSubmit: (values, { props: { onContinueAsGuest } }) => {\n            onContinueAsGuest(values);\n        },\n        validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: GuestFormProps & WithLanguageProps) => {\n            const email = string()\n                .email(language.translate('customer.email_invalid_error'))\n                .max(256)\n                .required(language.translate('customer.email_required_error'));\n\n            const baseSchema = object({ email });\n\n            if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                return baseSchema.concat(\n                    getPrivacyPolicyValidationSchema({\n                        isRequired: !!privacyPolicyUrl,\n                        language,\n                    }),\n                );\n            }\n\n            return baseSchema;\n        },\n    })(memo(GuestForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEye: FunctionComponent = () => (\n    <svg viewBox=\"0 0 576 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M288 144a110.94 110.94 0 0 0-31.24 5 55.4 55.4 0 0 1 7.24 27 56 56 0 0 1-56 56 55.4 55.4 0 0 1-27-7.24A111.71 111.71 0 1 0 288 144zm284.52 97.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400c-98.65 0-189.09-55-237.93-144C98.91 167 189.34 112 288 112s189.09 55 237.93 144C477.1 345 386.66 400 288 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEye);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconEyeSlash: FunctionComponent = () => (\n    <svg viewBox=\"0 0 640 512\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M634 471L36 3.51A16 16 0 0 0 13.51 6l-10 12.49A16 16 0 0 0 6 41l598 467.49a16 16 0 0 0 22.49-2.49l10-12.49A16 16 0 0 0 634 471zM296.79 146.47l134.79 105.38C429.36 191.91 380.48 144 320 144a112.26 112.26 0 0 0-23.21 2.47zm46.42 219.07L208.42 260.16C210.65 320.09 259.53 368 320 368a113 113 0 0 0 23.21-2.46zM320 112c98.65 0 189.09 55 237.93 144a285.53 285.53 0 0 1-44 60.2l37.74 29.5a333.7 333.7 0 0 0 52.9-75.11 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64c-36.7 0-71.71 7-104.63 18.81l46.41 36.29c18.94-4.3 38.34-7.1 58.22-7.1zm0 288c-98.65 0-189.08-55-237.93-144a285.47 285.47 0 0 1 44.05-60.19l-37.74-29.5a333.6 333.6 0 0 0-52.89 75.1 32.35 32.35 0 0 0 0 29.19C89.72 376.41 197.08 448 320 448c36.7 0 71.71-7.05 104.63-18.81l-46.41-36.28C359.28 397.2 339.89 400 320 400z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconEyeSlash);\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\nimport Label from '../ui/form/Label';\nimport { IconEye, IconEyeSlash } from '../ui/icon';\nimport { Toggle } from '../ui/toggle';\n\ninterface WithFloatingLabel {\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst PasswordField: FunctionComponent<WithFloatingLabel> = ({ isFloatingLabelEnabled = false }) => {\n    const renderInput = useCallback(\n        (props: FieldProps) => (\n            <Toggle openByDefault={false}>\n                {({ isOpen, toggle }) => (\n                    <div className=\"form-field-password\">\n                        <TextInput\n                            {...props.field}\n                            additionalClassName=\"form-input--withIcon\"\n                            id={props.field.name}\n                            isFloatingLabelEnabled={isFloatingLabelEnabled}\n                            type={isOpen ? 'text' : 'password'}\n                        />\n                        {isFloatingLabelEnabled && (\n                            <Label\n                                htmlFor={props.field.name}\n                                id={`${props.field.name}-label`}\n                                isFloatingLabelEnabled={true}\n                            >\n                                <TranslatedString id=\"customer.password_label\" />\n                            </Label>\n                        )}\n                        <a\n                            className=\"form-toggle-password form-input-icon\"\n                            href=\"#\"\n                            onClick={toggle}\n                        >\n                            {isOpen ? <IconEye /> : <IconEyeSlash />}\n                        </a>\n                    </div>\n                )}\n            </Toggle>\n        ),\n        [isFloatingLabelEnabled],\n    );\n\n    const labelContent = useMemo(() => <TranslatedString id=\"customer.password_label\" />, []);\n\n    return <FormField input={renderInput} isFloatingLabelEnabled={isFloatingLabelEnabled} labelContent={isFloatingLabelEnabled ? null : labelContent} name=\"password\" />;\n};\n\nexport default memo(PasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport { object, string } from 'yup';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport {\n    TranslatedHtml,\n    TranslatedLink,\n    TranslatedString,\n    withLanguage,\n    WithLanguageProps,\n} from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport CustomerViewType from './CustomerViewType';\nimport EmailField from './EmailField';\nimport getEmailValidationSchema from './getEmailValidationSchema';\nimport mapErrorMessage from './mapErrorMessage';\nimport PasswordField from './PasswordField';\n\nexport interface LoginFormProps {\n    canCancel?: boolean;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    forgotPasswordUrl: string;\n    isSignInEmailEnabled?: boolean;\n    isSendingSignInEmail?: boolean;\n    isSigningIn?: boolean;\n    isExecutingPaymentMethodCheckout?: boolean;\n    signInError?: Error;\n    signInEmailError?: Error;\n    viewType?: Omit<CustomerViewType, 'guest'>;\n    passwordlessLogin?: boolean;\n    shouldShowCreateAccountLink?: boolean;\n    isFloatingLabelEnabled?: boolean;\n    onCancel?(): void;\n    onCreateAccount?(): void;\n    onChangeEmail?(email: string): void;\n    onSignIn(data: LoginFormValues): void;\n    onSendLoginEmail?(): void;\n    onContinueAsGuest?(): void;\n}\n\nexport interface LoginFormValues {\n    email: string;\n    password: string;\n}\n\nconst LoginForm: FunctionComponent<\n    LoginFormProps & WithLanguageProps & FormikProps<LoginFormValues>\n> = ({\n    canCancel,\n    continueAsGuestButtonLabelId,\n    forgotPasswordUrl,\n    email,\n    isSignInEmailEnabled,\n    isSigningIn,\n    isExecutingPaymentMethodCheckout,\n    language,\n    onCancel = noop,\n    onChangeEmail,\n    onContinueAsGuest,\n    onCreateAccount = noop,\n    onSendLoginEmail = noop,\n    signInError,\n    shouldShowCreateAccountLink,\n    isFloatingLabelEnabled,\n    viewType = CustomerViewType.Login,\n}) => {\n    const changeEmailLink = useCallback(() => {\n        if (!email) {\n            return null;\n        }\n\n        return (\n            <p className=\"optimizedCheckout-contentSecondary\">\n                <TranslatedLink\n                    data={{ email }}\n                    id=\"customer.guest_could_login_change_email\"\n                    onClick={onCancel}\n                    testId=\"change-email\"\n                />\n            </p>\n        );\n    }, [email, onCancel]);\n\n    return (\n        <Form\n            className=\"checkout-form\"\n            id=\"checkout-customer-returning\"\n            testId=\"checkout-customer-returning\"\n        >\n            <Fieldset\n                legend={\n                    <Legend hidden>\n                        <TranslatedString id=\"customer.returning_customer_text\" />\n                    </Legend>\n                }\n            >\n                {signInError && (\n                    <Alert testId=\"customer-login-error-message\" type={AlertType.Error}>\n                        {mapErrorMessage(signInError, (key) => language.translate(key))}\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.SuggestedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_could_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.CancellableEnforcedLogin && (\n                    <Alert type={AlertType.Info}>\n                        <TranslatedHtml data={{ email }} id=\"customer.guest_must_login\" />\n                    </Alert>\n                )}\n\n                {viewType === CustomerViewType.EnforcedLogin && (\n                    <Alert type={AlertType.Error}>\n                        <TranslatedLink\n                            id=\"customer.guest_temporary_disabled\"\n                            onClick={onCreateAccount}\n                        />\n                    </Alert>\n                )}\n\n                {(viewType === CustomerViewType.Login ||\n                    viewType === CustomerViewType.EnforcedLogin) && (\n                    <EmailField isFloatingLabelEnabled={isFloatingLabelEnabled} onChange={onChangeEmail} />\n                )}\n\n                <PasswordField isFloatingLabelEnabled={isFloatingLabelEnabled} />\n\n                <p className=\"form-legend-container\">\n                    <span>\n                        { isSignInEmailEnabled &&\n                            <TranslatedLink\n                                id=\"login_email.link\"\n                                onClick={ onSendLoginEmail }\n                                testId=\"customer-signin-link\"\n                            />\n                        }\n                        { !isSignInEmailEnabled &&\n                            <a\n                                data-test=\"forgot-password-link\"\n                                href={ forgotPasswordUrl }\n                                rel=\"noopener noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <TranslatedString id=\"customer.forgot_password_action\" />\n                            </a>\n                        }\n                    </span>\n                    { viewType === CustomerViewType.Login && shouldShowCreateAccountLink &&\n                        <span>\n                            <TranslatedLink\n                                id=\"customer.create_account_to_continue_text\"\n                                onClick={onCreateAccount}\n                            />\n                        </span>\n                    }\n                </p>\n\n                <div className=\"form-actions\">\n                    <Button\n                        disabled={isSigningIn || isExecutingPaymentMethodCheckout}\n                        id=\"checkout-customer-continue\"\n                        isLoading={isSigningIn || isExecutingPaymentMethodCheckout}\n                        testId=\"customer-continue-button\"\n                        type=\"submit\"\n                        variant={ButtonVariant.Primary}\n                    >\n                        <TranslatedString id=\"customer.sign_in_action\" />\n                    </Button>\n\n                    {viewType === CustomerViewType.SuggestedLogin && (\n                        <a\n                            className=\"button optimizedCheckout-buttonSecondary\"\n                            data-test=\"customer-guest-continue\"\n                            href=\"#\"\n                            id=\"checkout-guest-continue\"\n                            onClick={preventDefault(onContinueAsGuest)}\n                        >\n                            <TranslatedString id={continueAsGuestButtonLabelId} />\n                        </a>\n                    )}\n\n                    {canCancel &&\n                        viewType !== CustomerViewType.EnforcedLogin &&\n                        viewType !== CustomerViewType.SuggestedLogin && (\n                            <a\n                                className=\"button optimizedCheckout-buttonSecondary\"\n                                data-test=\"customer-cancel-button\"\n                                href=\"#\"\n                                id=\"checkout-customer-cancel\"\n                                onClick={preventDefault(onCancel)}\n                            >\n                                <TranslatedString\n                                    id={\n                                        viewType === CustomerViewType.CancellableEnforcedLogin\n                                            ? 'login_email.use_another_email'\n                                            : 'common.cancel_action'\n                                    }\n                                />\n                            </a>\n                        )}\n                </div>\n\n                {viewType === CustomerViewType.SuggestedLogin && changeEmailLink()}\n            </Fieldset>\n        </Form>\n    );\n};\n\nexport default withLanguage(\n    withFormik<LoginFormProps & WithLanguageProps, LoginFormValues>({\n        mapPropsToValues: ({ email = '' }) => ({\n            email,\n            password: '',\n        }),\n        handleSubmit: (values, { props: { onSignIn } }) => {\n            onSignIn(values);\n        },\n        validationSchema: ({ language }: LoginFormProps & WithLanguageProps) =>\n            getEmailValidationSchema({ language }).concat(\n                object({\n                    password: string().required(\n                        language.translate('customer.password_required_error'),\n                    ),\n                }),\n            ),\n    })(memo(LoginForm)),\n);\n","export default function mapErrorMessage(\n    error: any, // TODO: Export `RequestError`\n    translate: (key: string) => string,\n): string {\n    const type = error.body && error.body.type;\n\n    switch (type) {\n        case 'throttled_login':\n            return translate('customer.sign_in_throttled_error');\n\n        case 'reset_password_before_login':\n            return translate('customer.reset_password_before_login_error');\n\n        default:\n            return translate('customer.sign_in_error');\n    }\n}\n","import { CustomerAccountRequestBody } from '@bigcommerce/checkout-sdk';\n\nimport { mapCustomFormFieldsFromFormValues } from '../formFields';\n\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\n\nexport default function mapCreateAccountFromFormValues({\n    acceptsMarketingEmails,\n    customFields,\n    ...values\n}: CreateAccountFormValues): CustomerAccountRequestBody {\n    return {\n        ...values,\n        acceptsMarketingEmails: acceptsMarketingEmails && acceptsMarketingEmails.length > 0,\n        customFields: mapCustomFormFieldsFromFormValues(customFields),\n    };\n}\n","import { CustomerInitializeOptions, CustomerRequestOptions } from '@bigcommerce/checkout-sdk';\nimport { FieldProps, FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useEffect, useState } from 'react';\n\nimport { getAppliedStyles } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { getPrivacyPolicyValidationSchema, PrivacyPolicyField } from '../privacyPolicy';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { BasicFormField, Fieldset, Form, Legend } from '../ui/form';\n\nimport { GuestFormValues } from './GuestForm';\nimport SubscribeField from './SubscribeField';\n\nexport interface StripeGuestFormProps {\n    canSubscribe: boolean;\n    checkoutButtons?: ReactNode;\n    step: CheckoutStepStatus;\n    continueAsGuestButtonLabelId: string;\n    email?: string;\n    isLoading: boolean;\n    isExpressPrivacyPolicy: boolean;\n    requiresMarketingConsent: boolean;\n    defaultShouldSubscribe: boolean;\n    privacyPolicyUrl?: string;\n    onChangeEmail(email: string): void;\n    onContinueAsGuest(data: GuestFormValues): void;\n    deinitialize(options: CustomerRequestOptions): void;\n    initialize(options: CustomerInitializeOptions): void;\n    onShowLogin(): void;\n}\n\nconst StripeGuestForm: FunctionComponent<StripeGuestFormProps & FormikProps<GuestFormValues>> = ({\n    continueAsGuestButtonLabelId,\n    isLoading,\n    initialize,\n    isExpressPrivacyPolicy,\n    deinitialize,\n    onChangeEmail,\n    onShowLogin,\n    onContinueAsGuest,\n    canSubscribe,\n    checkoutButtons,\n    requiresMarketingConsent,\n    privacyPolicyUrl,\n    step,\n    status\n}) => {\n\n    const [continueAsAGuestButton, setContinueAsAGuestButton] = useState(true);\n    const [emailValue, setEmailValue] = useState('');\n    const [authentication, setAuthentication] = useState(false);\n    const [isStripeLoading, setIsStripeLoading] = useState(true);\n    const [isNewAuth, setIsNewAuth] = useState(false);\n    const handleOnClickSubmitButton = () => {\n        onContinueAsGuest({\n            email: emailValue,\n            shouldSubscribe: !!status?.shouldSubscribe,\n        });\n    };\n    const setEmailCallback = useCallback((authenticated: boolean, email: string) => {\n        onChangeEmail(email);\n        setEmailValue(email);\n        setContinueAsAGuestButton(!email);\n        setAuthentication(authenticated);\n\n        if(!authenticated){\n            setIsNewAuth(true);\n        }\n    }, [setContinueAsAGuestButton, onChangeEmail]);\n\n    useEffect(() => {\n        if ((!step.isComplete || isNewAuth) && emailValue && authentication) {\n            handleOnClickSubmitButton();\n        }\n    }, [emailValue, authentication, isNewAuth]);\n\n    useEffect(() => {\n        if (status?.valSuccess) {\n            handleOnClickSubmitButton();\n        }\n    }, [status?.valSuccess]);\n\n    const handleLoading = useCallback((mounted: boolean) => {\n        setIsStripeLoading(mounted);\n    }, []);\n\n    const stripeDeinitialize = () => {\n        deinitialize({\n            methodId: 'stripeupe',\n        });\n    };\n\n    const stripeInitialize = () => {\n        initialize( {\n            methodId: 'stripeupe',\n            stripeupe: {\n                container: 'stripeupeLink',\n                onEmailChange: setEmailCallback,\n                isLoading: handleLoading,\n                getStyles: getStripeStyles,\n                gatewayId: 'stripeupe',\n                methodId: 'card',\n            },\n        })};\n\n    useEffect(() => {\n        stripeInitialize();\n\n        return () => stripeDeinitialize();\n    }, []);\n\n    const getStylesFromElement = (\n        id: string,\n        properties: string[]) => {\n        const parentContainer = document.getElementById(id);\n\n        if (parentContainer) {\n            return getAppliedStyles(parentContainer, properties);\n        }\n\n            return undefined;\n\n    };\n\n    const containerId = 'stripe-card-component-field';\n\n    const getStripeStyles: () => (Record<string, string> | undefined) = useCallback( () => {\n        const formInput = getStylesFromElement(`${containerId}--input`, ['color', 'background-color', 'border-color', 'box-shadow']);\n        const formLabel = getStylesFromElement(`${containerId}--label`, ['color']);\n        const formError = getStylesFromElement(`${containerId}--error`, ['color']);\n\n        return formLabel && formInput && formError ? {\n            labelText: formLabel.color,\n            fieldText: formInput.color,\n            fieldPlaceholderText: formInput.color,\n            fieldErrorText: formError.color,\n            fieldBackground: formInput['background-color'],\n            fieldInnerShadow: formInput['box-shadow'],\n            fieldBorder: formInput['border-color'],\n        } : undefined;\n    }, [])\n\n    const renderCheckoutThemeStylesForStripeUPE = () => {\n        return (\n            <div\n                className=\"optimizedCheckout-form-input\"\n                id={ `${containerId}--input` }\n                placeholder=\"1111\"\n            >\n                <div\n                    className=\"form-field--error\"\n                >\n                    <div\n                        className=\"optimizedCheckout-form-label\"\n                        id={ `${containerId}--error` }\n                    />\n                </div>\n                <div\n                    className=\"optimizedCheckout-form-label\"\n                    id={ `${containerId}--label` }\n                />\n            </div>\n        );\n    };\n\n    const renderField = useCallback((fieldProps: FieldProps<boolean>) => (\n        <SubscribeField\n            { ...fieldProps }\n            requiresMarketingConsent={ requiresMarketingConsent }\n        />\n    ), [\n        requiresMarketingConsent,\n    ]);\n\n    const buttonText = authentication && !isNewAuth? 'customer.continue_as_stripe_customer_action' : continueAsGuestButtonLabelId;\n\n    return (\n        <>\n            <CustomerSkeleton isLoading={isStripeLoading}/>\n            <Form\n                className=\"checkout-form\"\n                id=\"checkout-customer-guest\"\n                testId=\"checkout-customer-guest\"\n            >\n                <div className=\"checkout-form\" style={ {display: isStripeLoading ? 'none' : undefined} }>\n                    <Fieldset\n                        legend={ !authentication &&\n                            <Legend hidden>\n                                <TranslatedString id=\"customer.guest_customer_text\"/>\n                            </Legend>\n                        }\n                    >\n                        <div className=\"customerEmail-container\">\n                            <div className=\"customerEmail-body\">\n                                <div id=\"stripeupeLink\"/>\n                                <br/>\n                                { (canSubscribe || requiresMarketingConsent) && <BasicFormField\n                                    name=\"shouldSubscribe\"\n                                    render={ renderField }\n                                /> }\n                            </div>\n\n                            <div className=\"form-actions customerEmail-action\">\n                                { (!authentication || (authentication && !isNewAuth )) && <Button\n                                    className=\"stripeCustomerEmail-button\"\n                                    disabled={ continueAsAGuestButton }\n                                    id=\"stripe-checkout-customer-continue\"\n                                    isLoading={ isLoading }\n                                    testId=\"stripe-customer-continue-as-guest-button\"\n                                    type=\"submit\"\n                                    variant={ ButtonVariant.Primary }\n                                >\n                                    <TranslatedString id={ buttonText }/>\n                                </Button> }\n                            </div>\n                        </div>\n\n                        {privacyPolicyUrl && (\n                            <PrivacyPolicyField isExpressPrivacyPolicy={isExpressPrivacyPolicy} url={privacyPolicyUrl} />\n                        )}\n\n                        {\n                            !isLoading && <p>\n                                <TranslatedString id=\"customer.login_text\"/>\n                                { ' ' }\n                                <a\n                                    data-test=\"customer-continue-button\"\n                                    id=\"checkout-customer-login\"\n                                    onClick={ onShowLogin }\n                                    role=\"button\"\n                                    tabIndex={0}\n                                >\n                                    <TranslatedString id=\"customer.login_action\"/>\n                                </a>\n                            </p>\n                        }\n                        { !authentication && checkoutButtons }\n                    </Fieldset>\n                </div>\n                { renderCheckoutThemeStylesForStripeUPE() }\n            </Form>\n        </>\n    );\n};\n\nexport default withLanguage(\n    withFormik<StripeGuestFormProps, GuestFormValues>({\n            mapPropsToValues: ({\n                email = '',\n                defaultShouldSubscribe = false,\n                requiresMarketingConsent,\n            }) => ({\n                email,\n                shouldSubscribe: requiresMarketingConsent ? false : defaultShouldSubscribe,\n                privacyPolicy: false,\n            }),\n            handleSubmit: ( values, { setStatus }) => {\n                setStatus({\n                    valSuccess: true,\n                    shouldSubscribe: values.shouldSubscribe,\n                  });\n            },\n            validationSchema: ({ language, privacyPolicyUrl, isExpressPrivacyPolicy }: StripeGuestFormProps & WithLanguageProps) => {\n                if (privacyPolicyUrl && !isExpressPrivacyPolicy) {\n                    return getPrivacyPolicyValidationSchema({\n                            isRequired: !!privacyPolicyUrl,\n                            language,\n                        })\n                }\n            },\n        })(memo(StripeGuestForm))\n)\n\n","import {\n    CheckoutPaymentMethodExecutedOptions,\n    CheckoutSelectors, CheckoutSettings,\n    CustomerAccountRequestBody,\n    CustomerCredentials,\n    CustomerInitializeOptions,\n    CustomerRequestOptions,\n    ExecutePaymentMethodCheckoutOptions,\n    FormField,\n    GuestCredentials,\n    SignInEmail,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { Component, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { isPayPalFastlaneMethod } from '@bigcommerce/checkout/paypal-fastlane-integration';\nimport { CustomerSkeleton } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport CheckoutStepStatus from '../checkout/CheckoutStepStatus';\nimport { isErrorWithType } from '../common/error';\nimport { isFloatingLabelEnabled } from '../common/utility';\nimport getProviderWithCustomCheckout from '../payment/getProviderWithCustomCheckout';\nimport { PaymentMethodId } from '../payment/paymentMethod';\n\nimport CheckoutButtonList from './CheckoutButtonList';\nimport CreateAccountForm from './CreateAccountForm';\nimport CustomerViewType from './CustomerViewType';\nimport EmailLoginForm, { EmailLoginFormValues } from './EmailLoginForm';\nimport { CreateAccountFormValues } from './getCreateCustomerValidationSchema';\nimport GuestForm, { GuestFormValues } from './GuestForm';\nimport LoginForm from './LoginForm';\nimport mapCreateAccountFromFormValues from './mapCreateAccountFromFormValues';\nimport StripeGuestForm from './StripeGuestForm';\nimport { SubscribeSessionStorage } from './SubscribeSessionStorage';\n\nexport interface CustomerProps {\n    viewType: CustomerViewType;\n    step: CheckoutStepStatus;\n    isEmbedded?: boolean;\n    isSubscribed: boolean;\n    isWalletButtonsOnTop: boolean;\n    checkEmbeddedSupport?(methodIds: string[]): void;\n    onChangeViewType?(viewType: CustomerViewType): void;\n    onAccountCreated?(): void;\n    onContinueAsGuest?(): void;\n    onContinueAsGuestError?(error: Error): void;\n    onReady?(): void;\n    onSubscribeToNewsletter(subscribe: boolean): void;\n    onSignIn?(): void;\n    onSignInError?(error: Error): void;\n    onUnhandledError?(error: Error): void;\n    onWalletButtonClick?(methodName: string): void;\n}\n\nexport interface WithCheckoutCustomerProps {\n    canSubscribe: boolean;\n    customerAccountFields: FormField[];\n    checkoutButtonIds: string[];\n    defaultShouldSubscribe: boolean;\n    email?: string;\n    firstName?: string;\n    fixNewsletterCheckboxExperimentEnabled: boolean;\n    checkoutSettings: CheckoutSettings;\n    forgotPasswordUrl: string;\n    isContinuingAsGuest: boolean;\n    isCreatingAccount: boolean;\n    isExecutingPaymentMethodCheckout: boolean;\n    isGuestEnabled: boolean;\n    hasBillingId: boolean;\n    isInitializing: boolean;\n    isSendingSignInEmail: boolean;\n    isSignInEmailEnabled: boolean;\n    isSigningIn: boolean;\n    privacyPolicyUrl?: string;\n    providerWithCustomCheckout?: string;\n    requiresMarketingConsent: boolean;\n    signInEmail?: SignInEmail;\n    signInEmailError?: Error;\n    isAccountCreationEnabled: boolean;\n    isPaymentDataRequired: boolean;\n    createAccountError?: Error;\n    signInError?: Error;\n    isFloatingLabelEnabled?: boolean;\n    isExpressPrivacyPolicy: boolean;\n    clearError(error: Error): Promise<CheckoutSelectors>;\n    continueAsGuest(credentials: GuestCredentials): Promise<CheckoutSelectors>;\n    deinitializeCustomer(options: CustomerRequestOptions): Promise<CheckoutSelectors>;\n    executePaymentMethodCheckout(\n        options: ExecutePaymentMethodCheckoutOptions,\n    ): Promise<CheckoutSelectors>;\n    initializeCustomer(options: CustomerInitializeOptions): Promise<CheckoutSelectors>;\n    sendLoginEmail(params: { email: string }): Promise<CheckoutSelectors>;\n    signIn(credentials: CustomerCredentials): Promise<CheckoutSelectors>;\n    createAccount(values: CustomerAccountRequestBody): Promise<CheckoutSelectors>;\n    shouldRenderStripeForm: boolean;\n}\n\nexport interface CustomerState {\n    isEmailLoginFormOpen: boolean;\n    isReady: boolean;\n    hasRequestedLoginEmail: boolean;\n}\n\nclass Customer extends Component<CustomerProps & WithCheckoutCustomerProps & AnalyticsContextProps, CustomerState> {\n    state: CustomerState = {\n        isEmailLoginFormOpen: false,\n        isReady: false,\n        hasRequestedLoginEmail: false,\n    };\n\n    private draftEmail?: string;\n\n    async componentDidMount(): Promise<void> {\n        const {\n            initializeCustomer,\n            email,\n            onReady = noop,\n            onUnhandledError = noop,\n            providerWithCustomCheckout,\n        } = this.props;\n\n        this.draftEmail = email;\n\n        try {\n            if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n                await initializeCustomer({methodId: providerWithCustomCheckout});\n            }\n        } catch (error) {\n            onUnhandledError(error);\n        }\n\n        this.setState({ isReady: true });\n\n        onReady();\n    }\n\n    async componentWillUnmount(): Promise<void> {\n        const {\n            deinitializeCustomer = noop,\n            providerWithCustomCheckout,\n            onUnhandledError = noop,\n        } = this.props;\n\n        try {\n            await deinitializeCustomer({ methodId: providerWithCustomCheckout });\n        } catch (error) {\n            onUnhandledError(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { viewType } = this.props;\n        const { isEmailLoginFormOpen, isReady } = this.state;\n        const shouldRenderGuestForm = viewType === CustomerViewType.Guest;\n        const shouldRenderCreateAccountForm = viewType === CustomerViewType.CreateAccount;\n        const shouldRenderLoginForm = !shouldRenderGuestForm && !shouldRenderCreateAccountForm;\n\n        return (\n            <CustomerSkeleton isLoading={!isReady}>\n                {isEmailLoginFormOpen && this.renderEmailLoginLinkForm()}\n                {shouldRenderLoginForm && this.renderLoginForm()}\n                {shouldRenderGuestForm && this.renderGuestForm()}\n                {shouldRenderCreateAccountForm && this.renderCreateAccountForm()}\n            </CustomerSkeleton>\n        );\n    }\n\n    private renderGuestForm(): ReactNode {\n        const {\n            canSubscribe,\n            checkEmbeddedSupport,\n            checkoutButtonIds,\n            deinitializeCustomer,\n            email,\n            initializeCustomer,\n            isContinuingAsGuest = false,\n            isExecutingPaymentMethodCheckout = false,\n            isInitializing = false,\n            isSubscribed,\n            isWalletButtonsOnTop,\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            onUnhandledError = noop,\n            onWalletButtonClick = noop,\n            step,\n            isFloatingLabelEnabled,\n            isExpressPrivacyPolicy,\n            isPaymentDataRequired,\n            shouldRenderStripeForm,\n            providerWithCustomCheckout,\n            checkoutSettings,\n        } = this.props;\n\n        const checkoutButtons = isWalletButtonsOnTop || !isPaymentDataRequired\n          ? null\n          : <CheckoutButtonList\n            checkEmbeddedSupport={checkEmbeddedSupport}\n            checkoutSettings={checkoutSettings}\n            deinitialize={deinitializeCustomer}\n            initialize={initializeCustomer}\n            isInitializing={isInitializing}\n            methodIds={checkoutButtonIds}\n            onClick={onWalletButtonClick}\n            onError={onUnhandledError}\n          />;\n\n        const isLoadingGuestForm = isContinuingAsGuest || isExecutingPaymentMethodCheckout;\n\n        return (\n            shouldRenderStripeForm ?\n                <StripeGuestForm\n                    canSubscribe={canSubscribe}\n                    checkoutButtons={checkoutButtons}\n                    continueAsGuestButtonLabelId=\"customer.continue\"\n                    defaultShouldSubscribe={isSubscribed}\n                    deinitialize={deinitializeCustomer}\n                    email={this.draftEmail || email}\n                    initialize={initializeCustomer}\n                    isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                    isLoading={isContinuingAsGuest || isInitializing || isExecutingPaymentMethodCheckout}\n                    onChangeEmail={this.handleChangeEmail}\n                    onContinueAsGuest={this.handleContinueAsGuest}\n                    onShowLogin={this.handleShowLogin}\n                    privacyPolicyUrl={privacyPolicyUrl}\n                    requiresMarketingConsent={requiresMarketingConsent}\n                    step={step}\n                />\n                :\n            <GuestForm\n                canSubscribe={canSubscribe}\n                checkoutButtons={checkoutButtons}\n                continueAsGuestButtonLabelId=\"customer.continue\"\n                defaultShouldSubscribe={isSubscribed}\n                email={this.draftEmail || email}\n                isExpressPrivacyPolicy={isExpressPrivacyPolicy}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isLoading={isLoadingGuestForm}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.handleContinueAsGuest}\n                onShowLogin={this.handleShowLogin}\n                privacyPolicyUrl={privacyPolicyUrl}\n                requiresMarketingConsent={requiresMarketingConsent}\n                shouldShowEmailWatermark={isPayPalFastlaneMethod(providerWithCustomCheckout)}\n            />\n        );\n    }\n\n    private renderEmailLoginLinkForm(): ReactNode {\n        const { isEmailLoginFormOpen, hasRequestedLoginEmail } = this.state;\n\n        const { isSendingSignInEmail, signInEmailError, signInEmail, isFloatingLabelEnabled } =\n            this.props;\n\n        return (\n            <EmailLoginForm\n                email={this.draftEmail}\n                emailHasBeenRequested={hasRequestedLoginEmail}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isOpen={isEmailLoginFormOpen}\n                isSendingEmail={isSendingSignInEmail}\n                onRequestClose={this.closeEmailLoginFormForm}\n                onSendLoginEmail={this.handleSendLoginEmail}\n                sentEmail={signInEmail}\n                sentEmailError={signInEmailError}\n            />\n        );\n    }\n\n    private closeEmailLoginFormForm: () => void = () => {\n        this.setState({\n            isEmailLoginFormOpen: false,\n            hasRequestedLoginEmail: false,\n        });\n    };\n\n    private renderCreateAccountForm(): ReactNode {\n        const {\n            customerAccountFields,\n            isExecutingPaymentMethodCheckout,\n            isCreatingAccount,\n            createAccountError,\n            requiresMarketingConsent,\n            isFloatingLabelEnabled,\n            defaultShouldSubscribe,\n            fixNewsletterCheckboxExperimentEnabled,\n        } = this.props;\n\n        return (\n            <CreateAccountForm\n                createAccountError={createAccountError}\n                defaultShouldSubscribe={defaultShouldSubscribe}\n                fixNewsletterCheckboxExperimentEnabled={fixNewsletterCheckboxExperimentEnabled}\n                formFields={customerAccountFields}\n                isCreatingAccount={isCreatingAccount}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                onCancel={this.handleCancelCreateAccount}\n                onSubmit={this.handleCreateAccount}\n                requiresMarketingConsent={requiresMarketingConsent}\n            />\n        );\n    }\n\n    private renderLoginForm(): ReactNode {\n        const {\n            isEmbedded,\n            email,\n            forgotPasswordUrl,\n            isSignInEmailEnabled,\n            isGuestEnabled,\n            isSendingSignInEmail,\n            isSigningIn,\n            isExecutingPaymentMethodCheckout,\n            isAccountCreationEnabled,\n            providerWithCustomCheckout,\n            signInError,\n            isFloatingLabelEnabled,\n            viewType,\n        } = this.props;\n\n        return (\n            <LoginForm\n                canCancel={isGuestEnabled}\n                continueAsGuestButtonLabelId={\n                    providerWithCustomCheckout\n                        ? 'customer.continue'\n                        : 'customer.continue_as_guest_action'\n                }\n                email={this.draftEmail || email}\n                forgotPasswordUrl={forgotPasswordUrl}\n                isExecutingPaymentMethodCheckout={isExecutingPaymentMethodCheckout}\n                isFloatingLabelEnabled={isFloatingLabelEnabled}\n                isSendingSignInEmail={isSendingSignInEmail}\n                isSignInEmailEnabled={isSignInEmailEnabled && !isEmbedded}\n                isSigningIn={isSigningIn}\n                onCancel={this.handleCancelSignIn}\n                onChangeEmail={this.handleChangeEmail}\n                onContinueAsGuest={this.executePaymentMethodCheckoutOrContinue}\n                onCreateAccount={this.showCreateAccount}\n                onSendLoginEmail={this.handleEmailLoginClicked}\n                onSignIn={this.handleSignIn}\n                shouldShowCreateAccountLink={isAccountCreationEnabled}\n                signInError={signInError}\n                viewType={viewType}\n            />\n        );\n    }\n\n    private handleEmailLoginClicked: () => void = async () => {\n        const { viewType } = this.props;\n\n        try {\n            if (viewType !== CustomerViewType.Login && this.draftEmail) {\n                await this.handleSendLoginEmail({ email: this.draftEmail });\n            }\n        } finally {\n            this.setState({\n                isEmailLoginFormOpen: true,\n            });\n        }\n    };\n\n    private handleSendLoginEmail: (values: EmailLoginFormValues) => Promise<void> = async (\n        values,\n    ) => {\n        const { sendLoginEmail } = this.props;\n\n        try {\n            await sendLoginEmail(values);\n        } catch (error) {\n        // Need to write catch block since one test covers the case when `sendLoginEmail` fails\n        } finally {\n            this.setState({\n                hasRequestedLoginEmail: true,\n            });\n        }\n    };\n\n    private handleContinueAsGuest: (formValues: GuestFormValues) => Promise<void> = async (\n        formValues,\n    ) => {\n        const {\n            canSubscribe,\n            continueAsGuest,\n            hasBillingId,\n            defaultShouldSubscribe,\n            onChangeViewType = noop,\n            onContinueAsGuest = noop,\n            onContinueAsGuestError = noop,\n            onSubscribeToNewsletter,\n        } = this.props;\n\n        const email = formValues.email.trim();\n        const updateSubscriptionWhenUnchecked =\n            hasBillingId || defaultShouldSubscribe ? false : undefined;\n\n        try {\n            const { data } = await continueAsGuest({\n                email,\n                acceptsMarketingNewsletter:\n                    canSubscribe && formValues.shouldSubscribe\n                        ? true\n                        : updateSubscriptionWhenUnchecked,\n                acceptsAbandonedCartEmails: formValues.shouldSubscribe\n                    ? true\n                    : updateSubscriptionWhenUnchecked,\n            });\n\n            onSubscribeToNewsletter(formValues.shouldSubscribe);\n\n            SubscribeSessionStorage.setSubscribeStatus(formValues.shouldSubscribe);\n\n            const customer = data.getCustomer();\n\n            const paymentProviderCustomer = data.getPaymentProviderCustomer();\n\n            if (customer && customer.shouldEncourageSignIn && customer.isGuest && !paymentProviderCustomer?.stripeLinkAuthenticationState) {\n                return onChangeViewType(CustomerViewType.SuggestedLogin);\n            }\n\n            await this.executePaymentMethodCheckoutOrContinue();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            if (\n                isErrorWithType(error) &&\n                (error.type === 'update_subscriptions' ||\n                    error.type === 'payment_method_client_invalid')\n            ) {\n                this.draftEmail = undefined;\n\n                onContinueAsGuest();\n            }\n\n            if (isErrorWithType(error) && error.status === 429) {\n                return onChangeViewType(CustomerViewType.EnforcedLogin);\n            }\n\n            if (isErrorWithType(error) && error.status === 403) {\n                return onChangeViewType(CustomerViewType.CancellableEnforcedLogin);\n            }\n\n            onContinueAsGuestError(error);\n        }\n    };\n\n    private handleSignIn: (credentials: CustomerCredentials) => Promise<void> = async (\n        credentials,\n    ) => {\n        const {\n            signIn,\n            onSignIn = noop,\n            onSignInError = noop,\n        } = this.props;\n\n        try {\n            await signIn(credentials);\n\n            onSignIn();\n\n            this.draftEmail = undefined;\n        } catch (error) {\n            onSignInError(error);\n        }\n    };\n\n    private handleCreateAccount: (values: CreateAccountFormValues) => void = async (values) => {\n        const {\n            createAccount = noop,\n            onAccountCreated = noop,\n        } = this.props;\n\n        await createAccount(mapCreateAccountFromFormValues(values));\n\n        onAccountCreated();\n    };\n\n    private showCreateAccount: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.CreateAccount);\n    };\n\n    private handleCancelCreateAccount: () => void = () => {\n        const { clearError, onChangeViewType = noop, createAccountError } = this.props;\n\n        if (createAccountError) {\n            clearError(createAccountError);\n        }\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private handleCancelSignIn: () => void = () => {\n        const { clearError, onChangeViewType = noop, signInError } = this.props;\n\n        if (signInError) {\n            clearError(signInError);\n        }\n\n        onChangeViewType(CustomerViewType.Guest);\n    };\n\n    private handleChangeEmail: (email: string) => void = (email) => {\n        const { analyticsTracker } = this.props;\n\n        this.draftEmail = email;\n        analyticsTracker.customerEmailEntry(email);\n    };\n\n    private handleShowLogin: () => void = () => {\n        const { onChangeViewType = noop } = this.props;\n\n        onChangeViewType(CustomerViewType.Login);\n    };\n\n    private executePaymentMethodCheckoutOrContinue: () => void = async () => {\n        const {\n            executePaymentMethodCheckout,\n            onContinueAsGuest = noop,\n            providerWithCustomCheckout\n        } = this.props;\n\n        if (providerWithCustomCheckout && providerWithCustomCheckout !== PaymentMethodId.StripeUPE) {\n            await executePaymentMethodCheckout({\n                methodId: providerWithCustomCheckout,\n                continueWithCheckoutCallback: onContinueAsGuest,\n                checkoutPaymentMethodExecuted: (payload) => this.checkoutPaymentMethodExecuted(payload)\n            });\n        } else {\n            onContinueAsGuest();\n        }\n    };\n\n    private checkoutPaymentMethodExecuted(payload?: CheckoutPaymentMethodExecutedOptions) {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.customerPaymentMethodExecuted(payload);\n    }\n}\n\nexport function mapToWithCheckoutCustomerProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomerProps | null {\n    const {\n        data: {\n            getBillingAddress,\n            getCustomerAccountFields,\n            getCheckout,\n            getCustomer,\n            getCart,\n            getSignInEmail,\n            getConfig,\n            isPaymentDataRequired,\n        },\n        errors: { getSignInError, getSignInEmailError, getCreateCustomerAccountError },\n        statuses: {\n            isContinuingAsGuest,\n            isExecutingPaymentMethodCheckout,\n            isInitializingCustomer,\n            isSigningIn,\n            isSendingSignInEmail,\n            isCreatingCustomerAccount,\n        },\n    } = checkoutState;\n\n    const billingAddress = getBillingAddress();\n    const checkout = getCheckout();\n    const customer = getCustomer();\n    const cart = getCart();\n    const signInEmail = getSignInEmail();\n    const config = getConfig();\n\n    if (!checkout || !config || !cart) {\n        return null;\n    }\n\n    const {\n        checkoutSettings: {\n            privacyPolicyUrl,\n            requiresMarketingConsent,\n            isSignInEmailEnabled,\n            isAccountCreationEnabled,\n            isExpressPrivacyPolicy,\n            features,\n        },\n    } = config as StoreConfig & { checkoutSettings: { isAccountCreationEnabled: boolean } };\n\n    const providerWithCustomCheckout = getProviderWithCustomCheckout(\n        config.checkoutSettings.providerWithCustomCheckout,\n    );\n\n    const fixNewsletterCheckboxExperimentEnabled = features['CHECKOUT-8033.fix_newletter_checkbox'];\n\n    return {\n        customerAccountFields: getCustomerAccountFields(),\n        canSubscribe: config.shopperConfig.showNewsletterSignup,\n        checkoutButtonIds: config.checkoutSettings.remoteCheckoutProviders,\n        clearError: checkoutService.clearError,\n        createAccount: checkoutService.createCustomerAccount,\n        continueAsGuest: checkoutService.continueAsGuest,\n        sendLoginEmail: checkoutService.sendSignInEmail,\n        defaultShouldSubscribe: config.shopperConfig.defaultNewsletterSignup,\n        deinitializeCustomer: checkoutService.deinitializeCustomer,\n        executePaymentMethodCheckout: checkoutService.executePaymentMethodCheckout,\n        email: billingAddress?.email || customer?.email,\n        firstName: customer?.firstName,\n        fixNewsletterCheckboxExperimentEnabled,\n        forgotPasswordUrl: config.links.forgotPasswordLink,\n        initializeCustomer: checkoutService.initializeCustomer,\n        isCreatingAccount: isCreatingCustomerAccount(),\n        createAccountError: getCreateCustomerAccountError(),\n        hasBillingId: !!billingAddress?.id,\n        isContinuingAsGuest: isContinuingAsGuest(),\n        isExecutingPaymentMethodCheckout: isExecutingPaymentMethodCheckout(),\n        isInitializing: isInitializingCustomer(),\n        isSignInEmailEnabled,\n        isAccountCreationEnabled,\n        isGuestEnabled: config.checkoutSettings.guestCheckoutEnabled,\n        isSigningIn: isSigningIn(),\n        isSendingSignInEmail: isSendingSignInEmail(),\n        signInEmail,\n        signInEmailError: getSignInEmailError(),\n        privacyPolicyUrl,\n        providerWithCustomCheckout,\n        requiresMarketingConsent,\n        signIn: checkoutService.signInCustomer,\n        signInError: getSignInError(),\n        isFloatingLabelEnabled: isFloatingLabelEnabled(config.checkoutSettings),\n        isExpressPrivacyPolicy,\n        isPaymentDataRequired: isPaymentDataRequired(),\n        shouldRenderStripeForm: providerWithCustomCheckout === PaymentMethodId.StripeUPE && shouldUseStripeLinkByMinimumAmount(cart),\n        checkoutSettings: config.checkoutSettings,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToWithCheckoutCustomerProps)(Customer));\n","import { PaymentMethodId } from './paymentMethod';\n\nexport default function getProviderWithCustomCheckout(methodId?: string | null): string | undefined {\n    if (!methodId) {\n        return undefined;\n    }\n\n    if (methodId === PaymentMethodId.PaypalCommerce || methodId === PaymentMethodId.PaypalCommerceCreditCards) {\n        return PaymentMethodId.PayPalCommerceAcceleratedCheckout;\n    }\n\n    if (methodId === PaymentMethodId.Braintree) {\n        return PaymentMethodId.BraintreeAcceleratedCheckout;\n    }\n\n    return methodId;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconTag: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M21.41 11.58l-9-9C12.05 2.22 11.55 2 11 2H4c-1.1 0-2 .9-2 2v7c0 .55.22 1.05.59 1.42l9 9c.36.36.86.58 1.41.58.55 0 1.05-.22 1.41-.59l7-7c.37-.36.59-.86.59-1.41 0-.55-.23-1.06-.59-1.42zM5.5 7C4.67 7 4 6.33 4 5.5S4.67 4 5.5 4 7 4.67 7 5.5 6.33 7 5.5 7z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconTag);\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { Alert, AlertType } from '../ui/alert';\nimport { IconTag } from '../ui/icon';\n\nexport interface PromotionBannerProps {\n    message: string;\n}\n\nconst PromotionBanner: FunctionComponent<PromotionBannerProps> = ({ message }) => (\n    <Alert\n        additionalClassName=\"optimizedCheckout-discountBanner\"\n        icon={<IconTag />}\n        type={AlertType.Info}\n    >\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(message),\n            }}\n            data-test=\"promotion-banner-message\"\n        />\n    </Alert>\n);\n\nexport default memo(PromotionBanner);\n","import { Banner, Promotion } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport PromotionBanner from './PromotionBanner';\nimport './PromotionBannerList.scss';\n\nexport interface PromotionBannerListProps {\n    promotions?: Promotion[];\n}\n\nconst PromotionBannerList: FunctionComponent<PromotionBannerListProps> = ({ promotions }) => {\n    const banners = (promotions || []).reduce(\n        (result, promotion) => [...result, ...promotion.banners],\n        [] as Banner[],\n    );\n\n    if (!banners.length) {\n        return null;\n    }\n\n    return (\n        <div className=\"discountBanner\">\n            <ul className=\"discountBannerList\">\n                {banners.map((banner, index) => (\n                    <PromotionBanner key={index} message={banner.text} />\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default memo(PromotionBannerList);\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { reduce } from 'lodash';\n\nexport default function hasUnassignedLineItems(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    const totalAssigned = reduce(\n        consignments,\n        (total, consignment) => total + consignment.lineItemIds.length,\n        0,\n    );\n\n    return totalAssigned < lineItems.physicalItems.filter((item) => !item.addedByPromotion).length;\n}\n","import { Consignment, LineItemMap } from '@bigcommerce/checkout-sdk';\nimport { some } from 'lodash';\n\nimport hasUnassignedLineItems from './hasUnassignedLineItems';\n\nexport default function isUsingMultiShipping(\n    consignments: Consignment[],\n    lineItems: LineItemMap,\n): boolean {\n    if (consignments.length > 1) {\n        return true;\n    }\n\n    if (\n        some(consignments, (consignment) => consignment.lineItemIds.length) &&\n        hasUnassignedLineItems(consignments, lineItems)\n    ) {\n        return true;\n    }\n\n    return false;\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class ShippingOptionExpiredError extends CustomError {\n    constructor() {\n        super({\n            name: 'SHIPPING_OPTION_EXPIRED',\n            message: getLanguageService().translate('shipping.shipping_option_expired_error'),\n            title: getLanguageService().translate('shipping.shipping_option_expired_heading'),\n        });\n\n        setPrototypeOf(this, ShippingOptionExpiredError.prototype);\n    }\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconCheck: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconCheck);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize, ButtonVariant } from '../ui/button';\nimport { IconCheck } from '../ui/icon';\n\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepHeaderProps {\n    heading: ReactNode;\n    isActive?: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onEdit?(type: CheckoutStepType): void;\n}\n\nconst CheckoutStepHeader: FunctionComponent<CheckoutStepHeaderProps> = ({\n    heading,\n    isActive,\n    isComplete,\n    isEditable,\n    onEdit,\n    summary,\n    type,\n}) => {\n    return (\n        <div\n            className={classNames('stepHeader', {\n                'is-readonly': !isEditable,\n                'is-clickable': isEditable && !isActive,\n            })}\n            onClick={preventDefault(isEditable && onEdit ? () => onEdit(type) : noop)}\n        >\n            <div className=\"stepHeader-figure stepHeader-column\">\n                <IconCheck\n                    additionalClassName={classNames(\n                        'stepHeader-counter',\n                        'optimizedCheckout-step',\n                        { 'stepHeader-counter--complete': isComplete },\n                    )}\n                />\n\n                <h2\n                    className=\"stepHeader-title optimizedCheckout-headingPrimary\"\n                    style={{ fontFamily: 'industry, sans-serif' }}\n                >\n                    {heading}\n                </h2>\n            </div>\n\n            <div\n                className=\"stepHeader-body stepHeader-column optimizedCheckout-contentPrimary\"\n                data-test=\"step-info\"\n            >\n                {!isActive && isComplete && summary}\n            </div>\n\n            {isEditable && !isActive && (\n                <div className=\"stepHeader-actions stepHeader-column\">\n                    <Button\n                        aria-expanded={isActive}\n                        size={ButtonSize.Tiny}\n                        testId=\"step-edit-button\"\n                        variant={ButtonVariant.Secondary}\n                    >\n                        <TranslatedString id=\"common.edit_action\" />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default memo(CheckoutStepHeader);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { Component, createRef, ReactNode } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { isMobileView, MobileView } from '../ui/responsive';\n\nimport CheckoutStepHeader from './CheckoutStepHeader';\nimport CheckoutStepType from './CheckoutStepType';\n\nexport interface CheckoutStepProps {\n    heading?: ReactNode;\n    isActive?: boolean;\n    isBusy: boolean;\n    isComplete?: boolean;\n    isEditable?: boolean;\n    suggestion?: ReactNode;\n    summary?: ReactNode;\n    type: CheckoutStepType;\n    onExpanded?(step: CheckoutStepType): void;\n    onEdit?(step: CheckoutStepType): void;\n}\n\nexport interface CheckoutStepState {\n    isClosed: boolean;\n}\n\nexport default class CheckoutStep extends Component<CheckoutStepProps, CheckoutStepState> {\n    state = {\n        isClosed: true,\n    };\n\n    private containerRef = createRef<HTMLLIElement>();\n    private contentRef = createRef<HTMLDivElement>();\n    private timeoutRef?: number;\n    private timeoutDelay?: number;\n\n    componentDidMount(): void {\n        const { isActive } = this.props;\n\n        if (isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentDidUpdate(prevProps: Readonly<CheckoutStepProps>): void {\n        const { isActive } = this.props;\n\n        if (isActive && isActive !== prevProps.isActive) {\n            this.focusStep();\n        }\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeoutRef) {\n            window.clearTimeout(this.timeoutRef);\n\n            this.timeoutRef = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { heading, isActive, isComplete, isEditable, onEdit, suggestion, summary, type } =\n            this.props;\n\n        const { isClosed } = this.state;\n\n        return (\n            <li\n                className={classNames('checkout-step', 'optimizedCheckout-checkoutStep', {\n                    [`checkout-step--${type}`]: !!type,\n                })}\n                ref={this.containerRef}\n            >\n                <div className=\"checkout-view-header\">\n                    <CheckoutStepHeader\n                        heading={heading}\n                        isActive={isActive}\n                        isComplete={isComplete}\n                        isEditable={isEditable}\n                        onEdit={onEdit}\n                        summary={summary}\n                        type={type}\n                    />\n                </div>\n\n                {suggestion && isClosed && !isActive && (\n                    <div className=\"checkout-suggestion\" data-test=\"step-suggestion\">\n                        {suggestion}\n                    </div>\n                )}\n\n                {this.renderContent()}\n            </li>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { children, isActive, isBusy } = this.props;\n\n        return (\n            <MobileView>\n                {(matched) => (\n                    <CSSTransition\n                        addEndListener={this.handleTransitionEnd}\n                        classNames=\"checkout-view-content\"\n                        enter={!matched}\n                        exit={!matched}\n                        in={isActive}\n                        mountOnEnter\n                        onExited={ this.onAnimationEnd }\n                        timeout={ {} }\n                        unmountOnExit\n                    >\n                        <div\n                            aria-busy={isBusy}\n                            className=\"checkout-view-content\"\n                            ref={this.contentRef}\n                        >\n                            {isActive ? children : null}\n                        </div>\n                    </CSSTransition>\n                )}\n            </MobileView>\n        );\n    }\n\n    private focusStep(): void {\n        const delay = isMobileView() ? 0 : this.getTransitionDelay();\n\n        this.setState({ isClosed: false });\n\n        this.timeoutRef = window.setTimeout(() => {\n            const input = this.getChildInput();\n            const position = this.getScrollPosition();\n            const { type, onExpanded = noop } = this.props;\n\n            if (input) {\n                input.focus();\n            }\n\n            if (position !== undefined && !isNaN(position)) {\n                window.scrollTo(0, position);\n            }\n\n            onExpanded(type);\n\n            this.timeoutRef = undefined;\n        }, delay);\n    }\n\n    private getChildInput(): HTMLElement | undefined {\n        const container = this.containerRef.current;\n\n        if (!container) {\n            return;\n        }\n\n        const input = container.querySelector<HTMLElement>('input, select, textarea');\n\n        return input || undefined;\n    }\n\n    private getScrollPosition(): number | undefined {\n        const container = this.getParentContainer();\n        const { isComplete } = this.props;\n\n        if (!container || window !== window.top) {\n            return;\n        }\n\n        const topOffset = isComplete ? 0 : window.innerHeight / 5;\n        const containerOffset =\n            container.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\n\n        return containerOffset - topOffset;\n    }\n\n    // For now, we need to find the parent container because `CheckoutStep`\n    // isn't the outer container yet. Once both the header and body are\n    // moved inside this component, we can remove the lookup.\n    private getParentContainer(): HTMLElement | undefined {\n        let container: HTMLElement | null = this.containerRef.current;\n\n        while (container && container.parentElement) {\n            if (container.parentElement.classList.contains('checkout-step')) {\n                return container.parentElement;\n            }\n\n            container = container.parentElement;\n        }\n\n        return this.containerRef.current ? this.containerRef.current : undefined;\n    }\n\n    private getTransitionDelay(): number {\n        if (this.timeoutDelay !== undefined) {\n            return this.timeoutDelay;\n        }\n\n        // Cache the result to avoid unnecessary reflow\n        this.timeoutDelay =\n            parseFloat(\n                this.contentRef.current\n                    ? getComputedStyle(this.contentRef.current).transitionDuration\n                    : '0s',\n            ) * 1000;\n\n        return this.timeoutDelay;\n    }\n\n    private handleTransitionEnd: (node: HTMLElement, done: () => void) => void = (node, done) => {\n        node.addEventListener('transitionend', ({ target }) => {\n            if (target === node) {\n                done();\n            }\n        });\n    };\n\n    private onAnimationEnd = (): void => {\n        const { isActive } = this.props;\n\n        if (!isActive) {\n            this.setState({ isClosed: true });\n        }\n    }\n}\n","import { MOBILE_MAX_WIDTH } from './breakpoints';\n\nlet query: MediaQueryList;\n\nexport default function isMobileView() {\n    query = window.matchMedia(`(max-width: ${MOBILE_MAX_WIDTH}px)`);\n\n    return query.matches;\n}\n","enum CheckoutStepType {\n    Billing = 'billing',\n    Customer = 'customer',\n    Payment = 'payment',\n    Shipping = 'shipping',\n}\n\nexport default CheckoutStepType;\n","import { CheckoutPayment, CheckoutSelectors } from '@bigcommerce/checkout-sdk';\nimport { compact } from 'lodash';\nimport { createSelector } from 'reselect';\n\nimport { shouldUseStripeLinkByMinimumAmount } from '@bigcommerce/checkout/instrument-utils';\n\nimport { isValidAddress } from '../address';\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\nimport { SUPPORTED_METHODS } from '../customer';\nimport { PaymentMethodId } from '../payment/paymentMethod';\nimport {\n    hasUnassignedLineItems,\n} from '../shipping';\n\nimport CheckoutStepType from './CheckoutStepType';\n\n// StripeLink is a UX that is only available with StripeUpe and will only be displayed for BC guest users,\n// it uses its own components in the customer and shipping steps, unfortunately in order to preserve the UX\n// when reloading the checkout page it's necessary to refill the stripe components with the information saved.\n// In this step, we require that the customer strategy be reloaded the first time.\nconst getStripeLinkAndCheckoutPageIsReloaded = (\n    isUsingWallet: boolean,\n    hasEmail: boolean,\n    isGuest: boolean,\n    shouldUseStripeLinkByMinimumAmount: boolean,\n    providerWithCustomCheckout?: string | null,\n) => {\n    return !isUsingWallet && providerWithCustomCheckout === PaymentMethodId.StripeUPE && hasEmail && isGuest && shouldUseStripeLinkByMinimumAmount;\n}\n\nconst getCustomerStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getCustomer(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n    ({ data }: CheckoutSelectors) => data.getPaymentProviderCustomer(),\n    (checkout, customer, billingAddress, config, cart, paymentProviderCustomer) => {\n        const hasEmail = !!(\n            (customer && customer.email) ||\n            (billingAddress && billingAddress.email)\n        );\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment: CheckoutPayment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                )\n                : false;\n        const isGuest = !!(customer && customer.isGuest);\n        const isComplete = hasEmail || isUsingWallet;\n        const isEditable = isComplete && !isUsingWallet && isGuest;\n        const isUsingStripeLinkAndCheckoutPageIsReloaded = getStripeLinkAndCheckoutPageIsReloaded(\n            isUsingWallet,\n            hasEmail,\n            isGuest,\n            cart ? shouldUseStripeLinkByMinimumAmount(cart) : false,\n            config?.checkoutSettings.providerWithCustomCheckout,\n        );\n\n        if (isUsingStripeLinkAndCheckoutPageIsReloaded) {\n            return {\n                type: CheckoutStepType.Customer,\n                isActive: false,\n                isComplete: paymentProviderCustomer?.stripeLinkAuthenticationState !== undefined,\n                isEditable,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Customer,\n            isActive: false,\n            isComplete,\n            isEditable,\n            isRequired: true,\n        };\n    },\n);\n\nconst getBillingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getCheckout(),\n    ({ data }: CheckoutSelectors) => data.getBillingAddress(),\n    ({ data }: CheckoutSelectors) => {\n        const billingAddress = data.getBillingAddress();\n\n        return billingAddress\n            ? data.getBillingAddressFields(billingAddress.countryCode)\n            : EMPTY_ARRAY;\n    },\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (checkout, billingAddress, billingAddressFields, config) => {\n        const hasAddress = billingAddress\n            ? isValidAddress(billingAddress, billingAddressFields)\n            : false;\n        const isUsingWallet =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) => SUPPORTED_METHODS.indexOf(payment.providerId) >= 0,\n                )\n                : false;\n        const isComplete = hasAddress || isUsingWallet;\n        const isUsingAmazonPay =\n            checkout && checkout.payments\n                ? checkout.payments.some((payment) => payment.providerId === 'amazonpay')\n                : false;\n\n        if (isUsingAmazonPay) {\n            const billingAddressCustomFields = billingAddressFields.filter(\n                ({ custom }: { custom: boolean }) => custom,\n            );\n            const hasCustomFields = billingAddressCustomFields.length > 0;\n            const isAmazonPayBillingStepComplete =\n                billingAddress && hasCustomFields\n                    ? isValidAddress(billingAddress, billingAddressCustomFields)\n                    : true;\n\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: isAmazonPayBillingStepComplete,\n                isEditable: isAmazonPayBillingStepComplete && hasCustomFields,\n                isRequired: true,\n            };\n        }\n\n        const isGooglePayBillingAddressEditingEnabled = isExperimentEnabled(\n            config?.checkoutSettings,\n            'STRIPE-546.allow_billing_address_editing_for_all_Google_Pay_providers',\n        );\n        const isUsingGooglePay =\n            isGooglePayBillingAddressEditingEnabled && (checkout && checkout.payments\n                ? checkout.payments.some((payment) => (payment?.providerId || '').startsWith('googlepay'))\n                : false);\n\n        if (isUsingGooglePay) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        const isUsingPaypal =\n            checkout && checkout.payments\n                ? checkout.payments.some(\n                    (payment) =>\n                        [\n                            'braintreepaypal',\n                            'braintreepaypalcredit',\n                            'braintreevenmo',\n                            'paypalcommerce',\n                            'paypalcommercecredit',\n                            'paypalcommercevenmo'\n                        ]\n                            .includes(payment.providerId))\n                : false;\n\n        if (isUsingPaypal) {\n            return {\n                type: CheckoutStepType.Billing,\n                isActive: false,\n                isComplete: hasAddress,\n                isEditable: hasAddress,\n                isRequired: true,\n            };\n        }\n\n        return {\n            type: CheckoutStepType.Billing,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete && !isUsingWallet,\n            isRequired: true,\n        };\n    },\n);\n\n\n\nconst getCustomShippingStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getShippingAddress(),\n    ({ data }: CheckoutSelectors) => data.getConsignments(),\n    ({ data }: CheckoutSelectors) => data.getCart(),\n\n    ({ data }: CheckoutSelectors) => data.getConfig(),\n    (_shippingAddress, consignments, cart) => {\n        let hasUnselectedShippingOption = false;\n\n        if (consignments) {\n            for (let i = 0; i < consignments.length; i++) {\n                if (consignments[i].selectedShippingOption === null) {\n                    hasUnselectedShippingOption = true;\n                }\n            }\n        }\n\n        const hasUnassignedItems = cart && consignments ? hasUnassignedLineItems(consignments, cart.lineItems) : true;\n        const isComplete = !hasUnassignedItems && !hasUnselectedShippingOption;\n\n\n\n        return {\n            type: CheckoutStepType.Shipping,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getPaymentStepStatus = createSelector(\n    ({ data }: CheckoutSelectors) => data.getOrder(),\n    (order) => {\n        const isComplete = order ? order.isComplete : false;\n\n        return {\n            type: CheckoutStepType.Payment,\n            isActive: false,\n            isComplete,\n            isEditable: isComplete,\n            isRequired: true,\n        };\n    },\n);\n\nconst getOrderSubmitStatus = createSelector(\n    ({ statuses }: CheckoutSelectors) => statuses.isSubmittingOrder(),\n    (status) => status,\n);\n\nconst getCheckoutStepStatuses = createSelector(\n    getCustomerStepStatus,\n    getCustomShippingStepStatus,\n    getBillingStepStatus,\n    getPaymentStepStatus,\n    getOrderSubmitStatus,\n    (customerStep, shippingStep, billingStep, paymentStep, orderStatus) => {\n        const isSubmittingOrder = orderStatus;\n\n        const steps = compact([customerStep, shippingStep, billingStep, paymentStep]);\n\n        const defaultActiveStep =\n            steps.find((step) => !step.isComplete && step.isRequired) || steps[steps.length - 1];\n\n        return steps.map((step, index) => {\n            const isPrevStepComplete = steps\n                .slice(0, index)\n                .every((prevStep) => prevStep.isComplete || !prevStep.isRequired);\n\n            return {\n                ...step,\n                isActive: defaultActiveStep.type === step.type,\n                isBusy: false,\n                // A step is only editable if its previous step is complete or not required\n                isEditable: isPrevStepComplete && step.isEditable && !isSubmittingOrder,\n            };\n        });\n    },\n);\n\nexport default getCheckoutStepStatuses;\n","import React from 'react';\n\ninterface PickupLocationSelectorProps {\n  hasFirearms: boolean;\n  pickupAtSS: boolean;\n  handleSetPickupAtSS: (e: React.MouseEvent<HTMLDivElement>) => void;\n}\n\nconst PickupLocationSelector: React.FC<PickupLocationSelectorProps> = ({\n  hasFirearms,\n  pickupAtSS,\n  handleSetPickupAtSS,\n}) => (\n  <div className=\"pickupLocationContainer\">\n    <div\n      id=\"ssPickup\"\n      className={`pickupOption ${pickupAtSS ? 'selectedPickupOption' : ''}`}\n      onClick={handleSetPickupAtSS}\n    >\n      Pickup at Shoot Straight\n    </div>\n    {hasFirearms && (\n      <div\n        id=\"otherFFLPickup\"\n        className={`pickupOption ${!pickupAtSS ? 'selectedPickupOption' : ''}`}\n        onClick={handleSetPickupAtSS}\n      >\n        Pickup at other FFL\n      </div>\n    )}\n    {!hasFirearms && (\n      <div\n        id=\"shipToHome\"\n        className={`pickupOption ${!pickupAtSS ? 'selectedPickupOption' : ''}`}\n        onClick={handleSetPickupAtSS}\n      >\n        Ship to home\n      </div>\n    )}\n  </div>\n);\n\nexport default PickupLocationSelector;\n","import React from 'react';\nimport PickupLocationSelector from './PickupLocationSelector';\n\nconst PickupLocationSection: React.FC<{\n  hasFirearms: boolean;\n  pickupAtSS: boolean;\n  setPickupAtSS: React.Dispatch<React.SetStateAction<boolean>>;\n  setCustomFFL: React.Dispatch<React.SetStateAction<boolean>>;\n  setSelectedFFL: React.Dispatch<React.SetStateAction<any>>;\n}> = ({ hasFirearms, pickupAtSS, setPickupAtSS, setCustomFFL, setSelectedFFL }) => {\n  const handleSetPickupAtSS = (e: React.MouseEvent<HTMLDivElement>) => {\n    const target = e.target as HTMLElement;\n    setPickupAtSS(target.id === 'ssPickup');\n    setCustomFFL(false);\n    setSelectedFFL(null);\n  };\n  return (\n    <label>\n      <PickupLocationSelector\n        hasFirearms={hasFirearms}\n        pickupAtSS={pickupAtSS}\n        handleSetPickupAtSS={handleSetPickupAtSS}\n      />\n      <h2 className=\"customShippingSectionHeader\">\n        {!hasFirearms && !pickupAtSS\n          ? ''\n          : pickupAtSS\n            ? 'Shoot Straight Location'\n            : 'FFL Location'}\n      </h2>\n      <p className=''>{!hasFirearms && !pickupAtSS\n        ? ''\n        : pickupAtSS\n          ? 'All products will be sent to your selected Shoot Straight location.'\n          : 'Only firearms will be sent to your selected FFL.'}</p>\n\n\n    </label>\n  );\n};\n\nexport default PickupLocationSection;\n","import React from 'react';\n\ninterface CustomFFLFormProps {\n  customFFLData: { company: string; phone: string };\n  handleCustomFFLInputChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst CustomFFLForm: React.FC<CustomFFLFormProps> = ({ customFFLData, handleCustomFFLInputChange }) => (\n  <div className='CustomFormContainer'>\n    <div className=\"formRow\">\n      <div className=\"customFormGroup\">\n        <label htmlFor=\"company\">FFL name</label>\n        <input\n          className='customFormInput'\n          type=\"text\"\n          name=\"company\"\n          id=\"company\"\n          placeholder=\"FFL Name\"\n          value={customFFLData.company}\n          onChange={handleCustomFFLInputChange}\n        />\n      </div>\n      <div className=\"customFormGroup\">\n        <label htmlFor=\"phone\">FFL business phone number</label>\n        <input\n          className='customFormInput'\n          type=\"number\"\n          name=\"phone\"\n          id=\"phone\"\n          placeholder=\"Phone Number\"\n          value={customFFLData.phone}\n          onChange={handleCustomFFLInputChange}\n        />\n      </div>\n    </div>\n  </div>\n);\n\nexport default CustomFFLForm;\n","import React from 'react';\nimport CustomFFLForm from './CustomFFLForm';\n\nconst CustomFFLSection: React.FC<{\n  customFFL: boolean;\n  setCustomFFL: React.Dispatch<React.SetStateAction<boolean>>;\n  customFFLData: any;\n  setCustomFFLData: React.Dispatch<any>;\n  setSelectedFFL: React.Dispatch<React.SetStateAction<any>>;\n}> = ({ customFFL, setCustomFFL, customFFLData, setCustomFFLData, setSelectedFFL }) => {\n  const handleCustomFFLInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setCustomFFLData((prev: any) => ({ ...prev, [name]: value }));\n    if (name === 'company') {\n      setSelectedFFL((prev: any) => prev ? {\n        ...prev,\n        id: prev.id,\n        company: value,\n        name: value,\n        address: { ...prev.address, company: value }\n      } : null);\n    }\n    if (name === 'phone') {\n      setSelectedFFL((prev: any) => prev ? {\n        ...prev,\n        address: { ...prev.address, phone: value }\n      } : null);\n    }\n  };\n  const handleCheckCustomFFL = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const isChecked = e.target.checked;\n    if (isChecked) {\n      setSelectedFFL({\n        id: 0,\n        name: customFFLData.company,\n        address: {\n          firstName: '-', lastName: '-', address1: '-', city: '-', stateOrProvinceCode: 'FL',\n          postalCode: '-', country: '-', company: '_', address2: '-', stateOrProvince: '',\n          countryCode: 'US', phone: '_', customFields: []\n        }\n      });\n      setCustomFFL(isChecked);\n    } else {\n      setCustomFFL(isChecked);\n      setSelectedFFL(null);\n    }\n  };\n  return (\n    <>\n      {customFFL && (\n        <CustomFFLForm\n          customFFLData={customFFLData}\n          handleCustomFFLInputChange={handleCustomFFLInputChange}\n        />\n      )}\n      <div>\n        <input onChange={handleCheckCustomFFL} checked={customFFL} name=\"customFFL\" type=\"checkbox\" style={{ marginRight: '8px' }} />\n        <label>Enter a different FFL</label>\n      </div>\n\n    </>\n  );\n};\n\nexport default CustomFFLSection;\n","import React from \"react\";\nimport { FFL } from \"./CustomShippingStep\";\n\ninterface FFLSelectOptionProps {\n    ffl: FFL;\n    handleSelectFFL: (ffl: FFL) => void;\n}\n\nconst FFLSelectOption: React.FC<FFLSelectOptionProps> = ({ ffl, handleSelectFFL }) => {\n    return (\n        <div onClick={() => handleSelectFFL(ffl)}>\n            <h2>{ ffl.address.company }</h2>\n            <h4>{ ffl.address.address1}</h4>\n            <h4>{ ffl.address.city + \", \" + ffl.address.stateOrProvince + \", \" + ffl.address.postalCode }</h4>\n        </div>\n    );\n}\n\nexport default FFLSelectOption;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { FFL } from \"./CustomShippingStep\";\nimport FFLSelectOption from \"./FFLSelectOption\";\nimport \"./FFLSelector.scss\";\nimport data from './locations.json';\n\ninterface FFLSelectorProps {\n    selectedFFL: FFL | null;\n    ffls: FFL[] | null;\n    handleSelectFFL: (ffl: FFL) => void;\n    pickupAtSS: boolean;\n}\n\nconst shootStraightIds = data.shootStraightIds;\n\nconst FFLSelector: React.FC<FFLSelectorProps> = ({ ffls, handleSelectFFL, selectedFFL, pickupAtSS }) => {\n    // Early return if ffls is null and pickupAtSS is false\n    if (!pickupAtSS && ffls === null) {\n        return <></>;\n    }\n\n    const [isOpen, setIsOpen] = useState(false);\n    const selectorRef = useRef<HTMLDivElement>(null);\n\n    const toggleDropdown = () => setIsOpen((prev) => !prev);\n\n    const handleOptionClick = (ffl: FFL) => {\n        handleSelectFFL(ffl);\n        setIsOpen(false);\n    };\n\n    // Filter shoot straight locations from ffls\n    const shootStraightLocations = (ffls || []).filter(ffl => shootStraightIds.includes(ffl.id));\n\n    // Close dropdown on outside click\n    useEffect(() => {\n        const handleClickOutside = (event: MouseEvent) => {\n            if (selectorRef.current && !selectorRef.current.contains(event.target as Node)) {\n                setIsOpen(false);\n            }\n        };\n\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, []);\n\n    return (\n        <div className=\"ffl-selector\" ref={selectorRef}>\n            <div className=\"ffl-selector__header\" onClick={toggleDropdown}>\n                <h2 className=\"ffl-selector__selected\">\n                    {\n                        selectedFFL\n                            ? selectedFFL.address.company\n                            : (pickupAtSS ? \"Select a Shoot Straight location\" : \"Select an FFL location\")\n                    }\n                </h2>\n                <span className=\"ffl-selector__arrow\">▼</span>\n            </div>\n\n            {isOpen && (\n                <div className=\"ffl-selector__options\">\n                    {(pickupAtSS ? shootStraightLocations : ffls || []).map((ffl) => (\n                        <div\n                            key={ffl.address.company}\n                            className=\"ffl-selector__option\"\n                            onClick={() => handleOptionClick(ffl)}\n                        >\n                            <FFLSelectOption\n                                ffl={ffl}\n                                handleSelectFFL={handleOptionClick}\n                            />\n                        </div>\n                    ))}\n                </div>\n            )}\n        </div>\n\n    );\n};\n\n\nexport default FFLSelector;\n","import React from 'react';\nimport FFLSelector from './FFLSelector';\nimport { FFL } from './CustomShippingStep';\n\nconst FFLSelectorSection: React.FC<{\n  show: boolean;\n  fflLocations: FFL[] | null;\n  selectedFFL: FFL | null;\n  setSelectedFFL: React.Dispatch<React.SetStateAction<FFL | null>>;\n  setPickupAtSS: React.Dispatch<React.SetStateAction<boolean>>;\n  shootStraightIds: number[];\n  pickupAtSS: boolean;\n}> = ({ show, fflLocations, selectedFFL, setSelectedFFL, setPickupAtSS, shootStraightIds, pickupAtSS }) => {\n  const handleSelectFFL = (ffl: FFL) => {\n    if (shootStraightIds.includes(ffl?.id)) setPickupAtSS(true);\n    setSelectedFFL(ffl || null);\n  };\n  return show ? (\n    <FFLSelector\n      ffls={fflLocations}\n      handleSelectFFL={handleSelectFFL}\n      selectedFFL={selectedFFL}\n      pickupAtSS={pickupAtSS}\n    />\n  ) : null;\n};\n\nexport default FFLSelectorSection;\n","import React from \"react\";\nimport { Address } from \"@bigcommerce/checkout-sdk\";\nimport \"./CustomAddressForm.scss\"\n\ninterface CustomAddressFormProps {\n    savedAddress: Address;\n    formState: Address;\n    handleInputChange: (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => void\n}\n\nconst CustomAddressForm: React.FC<CustomAddressFormProps> = ({  handleInputChange, formState }) => {\n\n\n\n\n    return (\n        <>\n            <div className='CustomFormContainer'>\n                <h2 className='customShippingSectionHeader'>Shipping Address</h2>\n                <p className=''>This address will be used for any non-firearm products.</p>\n\n\n                <div className=\"formRow\">\n\n\n                    <div className=\"customFormGroup\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input\n                            className='customFormInput'\n                            type=\"text\"\n                            name=\"firstName\"\n                            id=\"firstName\"\n                            placeholder=\"First Name\"\n                            value={formState.firstName}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n\n                    <div className=\"customFormGroup\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input\n                            className='customFormInput'\n                            type=\"text\"\n                            name=\"lastName\"\n                            id=\"lastName\"\n                            placeholder=\"Last Name\"\n                            value={formState.lastName}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n                </div>\n\n\n                <div className=\"customFormGroup\">\n                    <label htmlFor=\"address1\">Address 1</label>\n                    <input\n                        className='customFormInput'\n                        type=\"text\"\n                        name=\"address1\"\n                        id=\"address1\"\n                        placeholder=\"Address 1\"\n                        value={formState.address1}\n                        onChange={handleInputChange}\n                    />\n                </div>\n\n                <div className=\"customFormGroup\">\n                    <label htmlFor=\"address2\">Address 2</label>\n                    <input\n                        className='customFormInput'\n                        type=\"text\"\n                        name=\"address2\"\n                        id=\"address2\"\n                        placeholder=\"Address 2\"\n                        value={formState.address2}\n                        onChange={handleInputChange}\n                    />\n                </div>\n\n\n                <div className=\"customFormGroup\">\n                    <label htmlFor=\"company\">Company</label>\n                    <input\n                        className='customFormInput'\n                        type=\"text\"\n                        name=\"company\"\n                        id=\"company\"\n                        placeholder=\"Company\"\n                        value={formState.company}\n                        onChange={handleInputChange}\n                    />\n                </div>\n\n                <div className=\"customFormGroup\">\n                    <label htmlFor=\"city\">City</label>\n                    <input\n                        className='customFormInput'\n                        type=\"text\"\n                        name=\"city\"\n                        id=\"city\"\n                        placeholder=\"City\"\n                        value={formState.city}\n                        onChange={handleInputChange}\n                    />\n                </div>\n\n\n                <div className=\"formRow\">\n\n                    <div className=\"customFormGroup\">\n                        <label htmlFor=\"stateOrProvinceCode\">State</label>\n                        <select\n                            className=\"customFormInput\"\n                            name=\"stateOrProvinceCode\"\n                            id=\"stateOrProvinceCode\"\n                            value={formState.stateOrProvinceCode}\n                            onChange={handleInputChange}\n                        >\n                            <option value=\"\">Select a state</option>\n                            <option value=\"AL\">AL</option>\n                            <option value=\"AK\">AK</option>\n                            <option value=\"AZ\">AZ</option>\n                            <option value=\"AR\">AR</option>\n                            <option value=\"CA\">CA</option>\n                            <option value=\"CO\">CO</option>\n                            <option value=\"CT\">CT</option>\n                            <option value=\"DE\">DE</option>\n                            <option value=\"FL\">FL</option>\n                            <option value=\"GA\">GA</option>\n                            <option value=\"HI\">HI</option>\n                            <option value=\"ID\">ID</option>\n                            <option value=\"IL\">IL</option>\n                            <option value=\"IN\">IN</option>\n                            <option value=\"IA\">IA</option>\n                            <option value=\"KS\">KS</option>\n                            <option value=\"KY\">KY</option>\n                            <option value=\"LA\">LA</option>\n                            <option value=\"ME\">ME</option>\n                            <option value=\"MD\">MD</option>\n                            <option value=\"MA\">MA</option>\n                            <option value=\"MI\">MI</option>\n                            <option value=\"MN\">MN</option>\n                            <option value=\"MS\">MS</option>\n                            <option value=\"MO\">MO</option>\n                            <option value=\"MT\">MT</option>\n                            <option value=\"NE\">NE</option>\n                            <option value=\"NV\">NV</option>\n                            <option value=\"NH\">NH</option>\n                            <option value=\"NJ\">NJ</option>\n                            <option value=\"NM\">NM</option>\n                            <option value=\"NY\">NY</option>\n                            <option value=\"NC\">NC</option>\n                            <option value=\"ND\">ND</option>\n                            <option value=\"OH\">OH</option>\n                            <option value=\"OK\">OK</option>\n                            <option value=\"OR\">OR</option>\n                            <option value=\"PA\">PA</option>\n                            <option value=\"RI\">RI</option>\n                            <option value=\"SC\">SC</option>\n                            <option value=\"SD\">SD</option>\n                            <option value=\"TN\">TN</option>\n                            <option value=\"TX\">TX</option>\n                            <option value=\"UT\">UT</option>\n                            <option value=\"VT\">VT</option>\n                            <option value=\"VA\">VA</option>\n                            <option value=\"WA\">WA</option>\n                            <option value=\"WV\">WV</option>\n                            <option value=\"WI\">WI</option>\n                            <option value=\"WY\">WY</option>\n                        </select>\n                    </div>\n\n\n                    <div className=\"customFormGroup\">\n                        <label htmlFor=\"postalCode\">Postal Code</label>\n                        <input\n                            className='customFormInput'\n                            type=\"text\"\n                            name=\"postalCode\"\n                            id=\"postalCode\"\n                            placeholder=\"Postal Code\"\n                            value={formState.postalCode}\n                            onChange={handleInputChange}\n                        />\n                    </div>\n\n                </div>\n\n\n            </div>\n\n        </>\n    )\n}\n\nexport default CustomAddressForm;","import React from 'react';\nimport CustomAddressForm from './CustomAddressForm';\nimport { Address } from '@bigcommerce/checkout-sdk';\n\nconst ManualAddressSection: React.FC<{\n  show: boolean;\n  homeAddress: Address;\n  setHomeAddress: React.Dispatch<React.SetStateAction<Address>>;\n}> = ({ show, homeAddress, setHomeAddress }) => {\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setHomeAddress(prev => ({ ...prev, [name]: value }));\n  };\n  return show ? (\n    <CustomAddressForm savedAddress={homeAddress} handleInputChange={handleInputChange} formState={homeAddress} />\n  ) : null;\n};\n\nexport default ManualAddressSection;\n","import React from 'react';\n\nconst ValidationError: React.FC = () => (\n  <div className=\"error\">Please fill out all required fields.</div>\n);\n\nexport default ValidationError;\n","import React from 'react';\nimport ValidationError from './ValidationError';\n\nconst ContinueButtonSection: React.FC<{\n  handleContinue: () => void;\n  validationError: boolean;\n}> = ({ handleContinue, validationError }) => (\n  <>\n    <button className=\"button button--primary optimizedCheckout-buttonPrimary\" onClick={handleContinue}>\n      Continue\n    </button>\n    {validationError && <ValidationError />}\n  </>\n);\n\nexport default ContinueButtonSection;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Customer,\n  Cart,\n  CheckoutSelectors,\n  ConsignmentsRequestBody,\n  ConsignmentCreateRequestBody,\n  Address,\n  Consignment,\n  CheckoutRequestBody\n\n} from '@bigcommerce/checkout-sdk';\nimport { withCheckout } from '../checkout';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport data from './locations.json';\nimport './CustomShippingStep.scss';\nimport PickupLocationSection from './PickupLocationSection';\nimport CustomFFLSection from './CustomFFLSection';\nimport FFLSelectorSection from './FFLSelectorSection';\nimport ManualAddressSection from './ManualAddressSection';\nimport ContinueButtonSection from './ContinueButtonSection';\n\nexport type FFL = {\n  id: number;\n  name: string;\n  address: Address;\n};\n\nexport interface WithCheckoutCustomShippingProps {\n  cart: Cart;\n  customer: Customer;\n  consignments: Consignment[];\n  createConsignments: (consignments: ConsignmentsRequestBody) => Promise<CheckoutSelectors>;\n  selectConsignmentShippingOption: (consignmentId: string, shippingOptionId: string) => Promise<CheckoutSelectors>;\n  updateCheckout(payload: CheckoutRequestBody): Promise<CheckoutSelectors>;\n\n}\n\ninterface CustomShippingProps {\n  onContinue: () => void;\n}\n\n\n\nconst shootStraightIds: number[] = data.shootStraightIds;\n\n// Utility: Separate items into FFL and home items\nconst getFFLItemIDs = (cart: Cart) => {\n  const fflItems = [];\n  const homeItems = [];\n  const lineItems = cart.lineItems.physicalItems;\n  for (let i = 0; i < lineItems.length; i++) {\n    const category = lineItems[i].categoryNames?.[0] ?? '';\n    const id = lineItems[i].id ?? '';\n    const quantity = lineItems[i].quantity;\n    if (category === 'Firearms') {\n      fflItems.push({ itemId: id, quantity });\n    } else {\n      homeItems.push({ itemId: id, quantity });\n    }\n  }\n  return { fflitems: fflItems, homeItems };\n};\n\nconst CustomShipping: React.FC<WithCheckoutCustomShippingProps & CustomShippingProps> = ({\n  cart,\n  customer,\n  createConsignments,\n  onContinue,\n  selectConsignmentShippingOption,\n}) => {\n  const lineItemAllocations = useRef<{\n    fflitems: { itemId: number | string; quantity: number }[];\n    homeItems: { itemId: number | string; quantity: number }[];\n  } | null>(null);\n\n  // State only\n  const [selectedFFL, setSelectedFFL] = useState<FFL | null>(null);\n  const [validationError, setValidationError] = useState(false);\n  const [pickupAtSS, setPickupAtSS] = useState<boolean>(false);\n  const [fflLocations, setFFLLocations] = useState<FFL[] | null>(null);\n  const [customFFL, setCustomFFL] = useState<boolean>(false);\n  const [customFFLData, setCustomFFLData] = useState<any>({ company: '', phone: '' });\n  const [homeAddress, setHomeAddress] = useState<Address>({\n    firstName: '', lastName: '', company: '', address1: '', address2: '', city: '',\n    stateOrProvince: '', stateOrProvinceCode: '', postalCode: '', country: '', countryCode: 'US',\n    phone: '', customFields: [], shouldSaveAddress: false,\n  });\n\n  // Prefill home address if customer has saved addresses\n  useEffect(() => {\n    if (customer?.addresses && customer.addresses.length > 0) {\n      const defaultAddress = customer.addresses[0];\n      setHomeAddress({\n        firstName: defaultAddress.firstName || '',\n        lastName: defaultAddress.lastName || '',\n        company: defaultAddress.company || '',\n        address1: defaultAddress.address1 || '',\n        address2: defaultAddress.address2 || '',\n        city: defaultAddress.city || '',\n        stateOrProvince: defaultAddress.stateOrProvince || '',\n        stateOrProvinceCode: defaultAddress.stateOrProvinceCode || 'FL',\n        postalCode: defaultAddress.postalCode || '',\n        country: defaultAddress.country || '',\n        countryCode: defaultAddress.countryCode || 'US',\n        phone: defaultAddress.phone || '',\n        customFields: defaultAddress.customFields || [],\n        shouldSaveAddress: false,\n      });\n    }\n  }, [customer?.addresses]);\n\n  const hasFirearms = cart.lineItems.physicalItems.some(item =>\n    item.categoryNames?.includes('Firearms')\n  );\n\n  const showManualAddressInputs = cart.lineItems.physicalItems.some(\n    item => !item.categoryNames?.includes('Firearms')\n  ) && !pickupAtSS;\n\n\n\n  useEffect(() => {\n    setFFLLocations(data.fflLocations);\n  }, []);\n\n  useEffect(() => {\n    lineItemAllocations.current = getFFLItemIDs(cart);\n  }, [cart]);\n\n  // Utility: Get empty required fields for validation\n  const getEmptyRequiredFields = ({\n    hasFirearms,\n    pickupAtSS,\n    customFFL,\n    customFFLData,\n    selectedFFL,\n    homeAddress,\n  }: {\n    hasFirearms: boolean;\n    pickupAtSS: boolean;\n    customFFL: boolean;\n    customFFLData: any;\n    selectedFFL: FFL | null;\n    homeAddress: Address;\n  }) => {\n    const requiredFields = [];\n    const customFFLFields = [\n      { label: 'FFL Business Name', value: customFFLData.company || '' },\n      { label: 'FFL Phone Number', value: customFFLData.phone || '' },\n    ];\n    const fflFields = [\n      { label: 'FFL First Name', value: selectedFFL?.address?.firstName || '' },\n      { label: 'FFL Last Name', value: selectedFFL?.address?.lastName || '' },\n      { label: 'FFL Company Name', value: selectedFFL?.name || '' },\n      { label: 'FFL Address 1', value: selectedFFL?.address?.address1 || '' },\n      { label: 'FFL City', value: selectedFFL?.address?.city || '' },\n      { label: 'FFL State Code', value: selectedFFL?.address?.stateOrProvinceCode || '' },\n      { label: 'FFL Postal Code', value: selectedFFL?.address?.postalCode || '' },\n    ];\n    const homeFields = [\n      { label: 'Home First Name', value: homeAddress?.firstName },\n      { label: 'Home Last Name', value: homeAddress?.lastName },\n      { label: 'Home Address 1', value: homeAddress?.address1 },\n      { label: 'Home City', value: homeAddress?.city },\n      { label: 'Home State Code', value: homeAddress?.stateOrProvinceCode },\n      { label: 'Home Postal Code', value: homeAddress?.postalCode },\n    ];\n    if (hasFirearms) requiredFields.push(...fflFields);\n    if (!pickupAtSS) requiredFields.push(...homeFields);\n    if (customFFL) requiredFields.push(...customFFLFields);\n    return requiredFields.filter(field => !field.value.trim());\n  };\n\n  // Utility: Build consignments array\n  const buildConsignments = ({\n    pickupAtSS,\n    selectedFFL,\n    homeAddress,\n    lineItemAllocations,\n    hasFirearms,\n  }: {\n    pickupAtSS: boolean;\n    selectedFFL: FFL | null;\n    homeAddress: Address;\n    lineItemAllocations: React.MutableRefObject<any>;\n    hasFirearms: boolean;\n  }): ConsignmentCreateRequestBody[] => {\n    const consignments: ConsignmentCreateRequestBody[] = [];\n    const fflItems = lineItemAllocations.current?.fflitems ?? [];\n    const homeItems = lineItemAllocations.current?.homeItems ?? [];\n    if (fflItems.length > 0 && selectedFFL) {\n      const itemsToFFL = pickupAtSS ? [...fflItems, ...homeItems] : fflItems;\n      consignments.push({\n        address: { ...selectedFFL.address, company: selectedFFL.name, customFields: [] },\n        lineItems: itemsToFFL,\n      });\n    }\n    if (homeItems.length > 0 && (!pickupAtSS || !hasFirearms)) {\n      consignments.push({\n        address: { ...homeAddress, customFields: homeAddress.customFields || [] },\n        lineItems: homeItems,\n      });\n    }\n    return consignments;\n  };\n\n  // Utility: Select shipping options for consignments\n  const selectShippingOptionsForConsignments = async ({\n    consignments,\n    pickupAtSS,\n    lineItemAllocations,\n    selectConsignmentShippingOption,\n  }: {\n    consignments: Consignment[];\n    pickupAtSS: boolean;\n    lineItemAllocations: React.MutableRefObject<any>;\n    selectConsignmentShippingOption: (consignmentId: string, shippingOptionId: string) => Promise<CheckoutSelectors>;\n  }) => {\n    for (const consignment of consignments) {\n      const isFFL = consignment.lineItemIds.some(id =>\n        lineItemAllocations.current?.fflitems?.some((item: any) => item.itemId === id)\n      );\n      const optionId = pickupAtSS\n        ? 'ff286e83078d1fff1601e5b06cabc8e2'\n        : isFFL\n          ? 'ba4bfeb633b03cac4e06976b8e8e77c4'\n          : '71fadd3406386d6644ce70b46a5bb4f2';\n      await selectConsignmentShippingOption(consignment.id, optionId);\n    }\n  };\n\n  // Validates and submits shipping selections\n  const handleContinue = async () => {\n    const emptyFields = getEmptyRequiredFields({\n      hasFirearms,\n      pickupAtSS,\n      customFFL,\n      customFFLData,\n      selectedFFL,\n      homeAddress,\n    });\n    if (emptyFields.length > 0) {\n      setValidationError(true);\n      return;\n    }\n    const consignments = buildConsignments({\n      pickupAtSS,\n      selectedFFL,\n      homeAddress,\n      lineItemAllocations,\n      hasFirearms,\n    });\n    if (consignments.length === 0) return;\n    try {\n      const response = await createConsignments(consignments);\n      const currentConsignments = response.data.getConsignments() ?? [];\n      await selectShippingOptionsForConsignments({\n        consignments: currentConsignments,\n        pickupAtSS,\n        lineItemAllocations,\n        selectConsignmentShippingOption,\n      });\n      setValidationError(false);\n      onContinue();\n    } catch (error) {\n      setValidationError(true);\n    }\n  };\n\n  // UI logic for FFLSelectorSection\n  const showFFLSelector = (\n    (customFFL && pickupAtSS) ||\n    (hasFirearms && pickupAtSS && !customFFL) ||\n    (hasFirearms && !customFFL && !pickupAtSS) ||\n    (pickupAtSS && !hasFirearms && !customFFL)\n  );\n\n  return (\n    <div>\n      <PickupLocationSection\n        hasFirearms={hasFirearms}\n        pickupAtSS={pickupAtSS}\n        setPickupAtSS={setPickupAtSS}\n        setCustomFFL={setCustomFFL}\n        setSelectedFFL={setSelectedFFL}\n      />\n\n      <FFLSelectorSection\n        show={showFFLSelector}\n        fflLocations={fflLocations}\n        selectedFFL={selectedFFL}\n        setSelectedFFL={setSelectedFFL}\n        setPickupAtSS={setPickupAtSS}\n        shootStraightIds={shootStraightIds}\n        pickupAtSS={pickupAtSS}\n      />\n      {!pickupAtSS && hasFirearms && (\n        <CustomFFLSection\n          customFFL={customFFL}\n          setCustomFFL={setCustomFFL}\n          customFFLData={customFFLData}\n          setCustomFFLData={setCustomFFLData}\n          setSelectedFFL={setSelectedFFL}\n        />\n      )}\n      <ManualAddressSection\n        show={showManualAddressInputs}\n        homeAddress={homeAddress}\n        setHomeAddress={setHomeAddress}\n      />\n      <ContinueButtonSection\n        handleContinue={handleContinue}\n        validationError={validationError}\n      />\n    </div>\n  );\n};\n\nexport function mapToShippingProps({\n  checkoutService,\n  checkoutState,\n}: CheckoutContextProps): WithCheckoutCustomShippingProps | null {\n  const {\n    data: { getCart, getCustomer, getConsignments },\n  } = checkoutState;\n\n  const cart = getCart();\n  const customer = getCustomer();\n  const consignments = getConsignments();\n\n  return cart && customer\n    ? {\n      cart,\n      customer,\n      consignments: consignments ?? [],\n      createConsignments: checkoutService.createConsignments,\n      selectConsignmentShippingOption: checkoutService.selectConsignmentShippingOption,\n      updateCheckout: checkoutService.updateCheckout,\n    }\n    : null;\n}\n\nexport default withCheckout(mapToShippingProps)(CustomShipping);\n","import { Cart, Consignment } from \"@bigcommerce/checkout-sdk\";\nimport './customShippingSummary.scss'\nimport React from \"react\";\n\ninterface CustomShippingSummaryProps {\n    cart: Cart;\n    consignments: Consignment[];\n\n}\n\nconst CustomShippingSummary: React.FC<CustomShippingSummaryProps> = ({  consignments }) => {\n\n\n\n    return (\n        <>\n            <div className=\"customShippingSummaryContainer\">\n\n                {consignments.map(consignment => {\n                    return (\n                        <div key={consignment.id}>\n                            {consignment.address.address1 == \"-\" && (\n                                <div>\n                                    <h2>{consignment.selectedShippingOption?.description}</h2>\n                                    <p>Firearms will be sent to { consignment.address.company }</p>\n                                </div>\n                            )}\n                            {consignment.address.address1 != \"-\" && (\n                                <>\n                                    <h2>{consignment.selectedShippingOption?.description}</h2>\n                                    <p>{consignment.address.firstName + \", \" + consignment.address.lastName}</p>\n                                    <p>{consignment.address.address1}</p>\n                                    <p>{consignment.address.city + \", \" + consignment.address.stateOrProvince + \", \" + consignment.address.postalCode}</p>\n                                </>\n                            )}\n                        </div>\n                    )\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default CustomShippingSummary","import {\n    Address,\n    Cart,\n    CartChangedError,\n    CheckoutParams,\n    CheckoutSelectors,\n    Consignment,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    ExtensionRegion,\n    FlashMessage,\n    PaymentMethod,\n    Promotion,\n    RequestOptions\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { find, findIndex } from 'lodash';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { Extension, ExtensionContextProps, withExtension } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\nimport { AddressFormSkeleton, ChecklistSkeleton, LazyContainer, LoadingNotification, LoadingOverlay } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { StaticBillingAddress } from '../billing';\nimport { EmptyCartMessage } from '../cart';\nimport { withCheckout } from '../checkout';\nimport { CustomError, ErrorModal, isCustomError } from '../common/error';\nimport { retry } from '../common/utility';\nimport {\n    CheckoutButtonContainer,\n    CheckoutSuggestion,\n    Customer,\n    CustomerInfo,\n    CustomerSignOutEvent,\n    CustomerViewType,\n} from '../customer';\nimport { getSupportedMethodIds } from '../customer/getSupportedMethods';\nimport { SubscribeSessionStorage } from '../customer/SubscribeSessionStorage';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport { PromotionBannerList } from '../promotion';\nimport { hasSelectedShippingOptions, isUsingMultiShipping } from '../shipping';\nimport { ShippingOptionExpiredError } from '../shipping/shippingOption';\nimport { MobileView } from '../ui/responsive';\n\nimport CheckoutStep from './CheckoutStep';\nimport CheckoutStepStatus from './CheckoutStepStatus';\nimport CheckoutStepType from './CheckoutStepType';\nimport CheckoutSupport from './CheckoutSupport';\nimport mapToCheckoutProps from './mapToCheckoutProps';\nimport navigateToOrderConfirmation from './navigateToOrderConfirmation';\nimport CustomShippingStep from '../fflShipping/CustomShippingStep';\nimport CustomShippingSummary from '../fflShipping/customShippingSummary';\n\nconst Billing = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"billing\" */\n                '../billing/Billing'\n            ),\n    ),\n);\n\nconst CartSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary\" */\n                '../cart/CartSummary'\n            ),\n    ),\n);\n\nconst CartSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"cart-summary-drawer\" */\n                '../cart/CartSummaryDrawer'\n            ),\n    ),\n);\n\nconst Payment = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"payment\" */\n                '../payment/Payment'\n            ),\n    ),\n);\n\n\n\nexport interface CheckoutProps {\n    checkoutId: string;\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    embeddedSupport: CheckoutSupport;\n    errorLogger: ErrorLogger;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\nexport interface CheckoutState {\n    activeStepType?: CheckoutStepType;\n    isBillingSameAsShipping: boolean;\n    customerViewType?: CustomerViewType;\n    defaultStepType?: CheckoutStepType;\n    error?: Error;\n    flashMessages?: FlashMessage[];\n    isMultiShippingMode: boolean;\n    isCartEmpty: boolean;\n    isRedirecting: boolean;\n    hasSelectedShippingOptions: boolean;\n    isSubscribed: boolean;\n    buttonConfigs: PaymentMethod[];\n}\n\nexport interface WithCheckoutProps {\n    billingAddress?: Address;\n    cart?: Cart;\n    consignments?: Consignment[];\n    error?: Error;\n    hasCartChanged: boolean;\n    flashMessages?: FlashMessage[];\n    isGuestEnabled: boolean;\n    isLoadingCheckout: boolean;\n    isPending: boolean;\n    isPriceHiddenFromGuests: boolean;\n    isShowingWalletButtonsOnTop: boolean;\n    isShippingDiscountDisplayEnabled: boolean;\n    loginUrl: string;\n    cartUrl: string;\n    createAccountUrl: string;\n    promotions?: Promotion[];\n    steps: CheckoutStepStatus[];\n    clearError(error?: Error): void;\n    loadCheckout(id: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors>;\n    loadPaymentMethodByIds(methodIds: string[]): Promise<CheckoutSelectors>;\n    subscribeToConsignments(subscriber: (state: CheckoutSelectors) => void): () => void;\n}\n\nclass Checkout extends Component<\n    CheckoutProps &\n    WithCheckoutProps &\n    WithLanguageProps &\n    AnalyticsContextProps &\n    ExtensionContextProps,\n    CheckoutState\n> {\n    state: CheckoutState = {\n        isBillingSameAsShipping: true,\n        isCartEmpty: false,\n        isRedirecting: false,\n        isMultiShippingMode: false,\n        hasSelectedShippingOptions: false,\n        isSubscribed: false,\n        buttonConfigs: [],\n    };\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n    private unsubscribeFromConsignments?: () => void;\n\n    componentWillUnmount(): void {\n        if (this.unsubscribeFromConsignments) {\n            this.unsubscribeFromConsignments();\n            this.unsubscribeFromConsignments = undefined;\n        }\n\n        window.removeEventListener('beforeunload', this.handleBeforeExit);\n        this.handleBeforeExit();\n    }\n\n    async componentDidMount(): Promise<void> {\n        const {\n            analyticsTracker,\n            checkoutId,\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            extensionService,\n            loadCheckout,\n            loadPaymentMethodByIds,\n            subscribeToConsignments,\n        } = this.props;\n\n        try {\n            const [{ data }] = await Promise.all([loadCheckout(checkoutId, {\n                params: {\n                    include: [\n                        'cart.lineItems.physicalItems.categoryNames',\n                        'cart.lineItems.digitalItems.categoryNames',\n                    ] as any, // FIXME: Currently the enum is not exported so it can't be used here.\n                },\n            }), extensionService.loadExtensions()]);\n\n            const providers = data.getConfig()?.checkoutSettings?.remoteCheckoutProviders || [];\n            const checkoutSettings = data.getConfig()?.checkoutSettings;\n\n            const supportedProviders = getSupportedMethodIds(providers, checkoutSettings);\n\n            if (providers.length > 0) {\n                const configs = await loadPaymentMethodByIds(supportedProviders);\n\n                this.setState({\n                    buttonConfigs: configs.data.getPaymentMethods() || [],\n                });\n            }\n\n            extensionService.preloadExtensions();\n\n            const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n            const errorFlashMessages = data.getFlashMessages('error') || [];\n\n            if (errorFlashMessages.length) {\n                const { language } = this.props;\n\n                this.setState({\n                    error: new CustomError({\n                        title:\n                            errorFlashMessages[0].title ||\n                            language.translate('common.error_heading'),\n                        message: errorFlashMessages[0].message,\n                        data: {},\n                        name: 'default',\n                    }),\n                });\n            }\n\n            const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n            this.unsubscribeFromConsignments = subscribeToConsignments(\n                this.handleConsignmentsUpdated,\n            );\n            this.embeddedMessenger = messenger;\n            messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n            messenger.postFrameLoaded({ contentId: containerId });\n            messenger.postLoaded();\n\n            analyticsTracker.checkoutBegin();\n\n            const consignments = data.getConsignments();\n            const cart = data.getCart();\n\n\n\n\n            const hasMultiShippingEnabled =\n                data.getConfig()?.checkoutSettings.hasMultiShippingEnabled;\n            const checkoutBillingSameAsShippingEnabled =\n                data.getConfig()?.checkoutSettings.checkoutBillingSameAsShippingEnabled ?? true;\n            const defaultNewsletterSignupOption =\n                data.getConfig()?.shopperConfig.defaultNewsletterSignup ??\n                false;\n            const isMultiShippingMode =\n                !!cart &&\n                !!consignments &&\n                hasMultiShippingEnabled &&\n                isUsingMultiShipping(consignments, cart.lineItems);\n\n            this.setState({\n                isBillingSameAsShipping: checkoutBillingSameAsShippingEnabled,\n                isSubscribed: defaultNewsletterSignupOption,\n            });\n\n            if (isMultiShippingMode) {\n                this.setState({ isMultiShippingMode }, this.handleReady);\n            } else {\n                this.handleReady();\n            }\n\n            window.addEventListener('beforeunload', this.handleBeforeExit);\n\n        } catch (error) {\n            if (error instanceof Error) {\n                this.handleUnhandledError(error);\n            }\n        }\n    }\n\n    render(): ReactNode {\n        const { error } = this.state;\n        let errorModal = null;\n\n        if (error) {\n            if (isCustomError(error)) {\n                errorModal = (\n                    <ErrorModal\n                        error={error}\n                        onClose={this.handleCloseErrorModal}\n                        title={error.title}\n                    />\n                );\n            } else {\n                errorModal = <ErrorModal error={error} onClose={this.handleCloseErrorModal} />;\n            }\n        }\n\n        return (\n            <div className={classNames('remove-checkout-step-numbers', { 'is-embedded': isEmbedded() })} data-test=\"checkout-page-container\" id=\"checkout-page-container\">\n                <div className=\"layout optimizedCheckout-contentPrimary\">\n                    {this.renderContent()}\n                </div>\n                {errorModal}\n            </div>\n        );\n    }\n\n    private renderContent(): ReactNode {\n        const { isPending, loginUrl, promotions = [], steps, isShowingWalletButtonsOnTop, extensionState } = this.props;\n\n        const { activeStepType, defaultStepType, isCartEmpty, isRedirecting } = this.state;\n\n        if (isCartEmpty) {\n            return <EmptyCartMessage loginUrl={loginUrl} waitInterval={3000} />;\n        }\n\n        const isPaymentStepActive = activeStepType\n            ? activeStepType === CheckoutStepType.Payment\n            : defaultStepType === CheckoutStepType.Payment;\n\n        return (\n            <LoadingOverlay hideContentWhenLoading isLoading={isRedirecting}>\n                <div className=\"layout-main\">\n                    <LoadingNotification isLoading={(!isShowingWalletButtonsOnTop && isPending) || extensionState.isShowingLoadingIndicator} />\n\n                    <PromotionBannerList promotions={promotions} />\n\n                    {isShowingWalletButtonsOnTop && this.state.buttonConfigs?.length > 0 && (\n                        <CheckoutButtonContainer\n                            checkEmbeddedSupport={this.checkEmbeddedSupport}\n                            isPaymentStepActive={isPaymentStepActive}\n                            onUnhandledError={this.handleUnhandledError}\n                            onWalletButtonClick={this.handleWalletButtonClick}\n                        />\n                    )}\n\n                    <ol className=\"checkout-steps\">\n                        {steps\n                            .filter((step) => step.isRequired)\n                            .map((step) =>\n                                this.renderStep({\n                                    ...step,\n                                    isActive: activeStepType\n                                        ? activeStepType === step.type\n                                        : defaultStepType === step.type,\n                                    isBusy: isPending,\n                                }),\n                            )}\n                    </ol>\n                </div>\n\n                {this.renderCartSummary()}\n            </LoadingOverlay>\n        );\n    }\n\n    private renderStep(step: CheckoutStepStatus): ReactNode {\n        switch (step.type) {\n            case CheckoutStepType.Customer:\n                return this.renderCustomerStep(step);\n\n            case CheckoutStepType.Shipping:\n                return this.renderShippingStep(step);\n\n            case CheckoutStepType.Billing:\n                return this.renderBillingStep(step);\n\n            case CheckoutStepType.Payment:\n                return this.renderPaymentStep(step);\n\n            default:\n                return null;\n        }\n    }\n\n    private renderCustomerStep(step: CheckoutStepStatus): ReactNode {\n        const { isGuestEnabled, isShowingWalletButtonsOnTop } = this.props;\n        const {\n            customerViewType = isGuestEnabled ? CustomerViewType.Guest : CustomerViewType.Login,\n            isSubscribed,\n        } = this.state;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"customer.customer_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                suggestion={<CheckoutSuggestion />}\n                summary={\n                    <CustomerInfo\n                        onSignOut={this.handleSignOut}\n                        onSignOutError={this.handleError}\n                    />\n                }\n            >\n                <Customer\n                    checkEmbeddedSupport={this.checkEmbeddedSupport}\n                    isEmbedded={isEmbedded()}\n                    isSubscribed={isSubscribed}\n                    isWalletButtonsOnTop={isShowingWalletButtonsOnTop}\n                    onAccountCreated={this.navigateToNextIncompleteStep}\n                    onChangeViewType={this.setCustomerViewType}\n                    onContinueAsGuest={this.navigateToNextIncompleteStep}\n                    onContinueAsGuestError={this.handleError}\n                    onReady={this.handleReady}\n                    onSignIn={this.navigateToNextIncompleteStep}\n                    onSignInError={this.handleError}\n                    onSubscribeToNewsletter={this.handleNewsletterSubscription}\n                    onUnhandledError={this.handleUnhandledError}\n                    onWalletButtonClick={this.handleWalletButtonClick}\n                    step={step}\n                    viewType={customerViewType}\n                />\n            </CheckoutStep>\n        );\n    }\n\n    private renderShippingStep(step: CheckoutStepStatus): ReactNode {\n        const { cart, consignments = [] } = this.props;\n\n        if (!cart) {\n            return;\n        }\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"shipping.shipping_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={<CustomShippingSummary cart={cart} consignments={consignments} />}\n\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <CustomShippingStep\n                        onContinue={this.navigateToNextIncompleteStep}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderBillingStep(step: CheckoutStepStatus): ReactNode {\n        const { billingAddress } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"billing.billing_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n                summary={billingAddress && <StaticBillingAddress address={billingAddress} />}\n            >\n                <LazyContainer loadingSkeleton={<AddressFormSkeleton />}>\n                    <Billing\n                        navigateNextStep={this.navigateToNextIncompleteStep}\n                        onReady={this.handleReady}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderPaymentStep(step: CheckoutStepStatus): ReactNode {\n        const { consignments, cart, errorLogger } = this.props;\n\n        return (\n            <CheckoutStep\n                {...step}\n                heading={<TranslatedString id=\"payment.payment_heading\" />}\n                key={step.type}\n                onEdit={this.handleEditStep}\n                onExpanded={this.handleExpanded}\n            >\n                <LazyContainer loadingSkeleton={<ChecklistSkeleton />}>\n                    <Payment\n                        checkEmbeddedSupport={this.checkEmbeddedSupport}\n                        errorLogger={errorLogger}\n                        isEmbedded={isEmbedded()}\n                        isUsingMultiShipping={\n                            cart && consignments\n                                ? isUsingMultiShipping(consignments, cart.lineItems)\n                                : false\n                        }\n                        onCartChangedError={this.handleCartChangedError}\n                        onFinalize={this.navigateToOrderConfirmation}\n                        onReady={this.handleReady}\n                        onSubmit={this.navigateToOrderConfirmation}\n                        onSubmitError={this.handleError}\n                        onUnhandledError={this.handleUnhandledError}\n                    />\n                </LazyContainer>\n            </CheckoutStep>\n        );\n    }\n\n    private renderCartSummary(): ReactNode {\n        const { isMultiShippingMode } = this.state;\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <CartSummaryDrawer isMultiShippingMode={isMultiShippingMode} />\n\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <CartSummary isMultiShippingMode={isMultiShippingMode} />\n                                <Extension region={ExtensionRegion.SummaryAfter} />\n                                <div\n                                    style={{\n                                        backgroundColor: '#fffbe6',\n                                        border: '1px solid #ffe58f',\n                                        borderRadius: '4px',\n                                        padding: '16px 20px',\n                                        margin: '20px auto',\n                                        maxWidth: '600px',\n                                        fontFamily: '\"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif',\n                                        color: '#614700',\n                                        boxShadow: '0 4px 12px rgba(0,0,0,0.05)',\n                                        fontSize: '14px',\n                                        lineHeight: '1.6',\n                                    }}\n                                >\n                                    <strong style={{ display: 'block', fontSize: '16px', marginBottom: '8px' }}>\n                                        Important Notice\n                                    </strong>\n                                    To complete your order, you will need to submit the required credentials via email. Detailed instructions will be provided to you after checkout. If you do not send your credentials, your order will not be processed.\n                                    <div style={{ marginTop: '12px' }}>\n                                        <strong>Note:</strong> If your order includes <strong>ammunition</strong>, you must also include a scan or photo of a valid government-issued photo ID.\n                                    </div>\n                                </div>\n\n\n                            </LazyContainer>\n\n\n                        </aside>\n\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private navigateToStep(type: CheckoutStepType, options?: { isDefault?: boolean }): void {\n        const { clearError, error, steps } = this.props;\n        const { activeStepType } = this.state;\n        const step = find(steps, { type });\n\n        if (!step) {\n            return;\n        }\n\n        if (activeStepType === step.type) {\n            return;\n        }\n\n        if (options && options.isDefault) {\n            this.setState({ defaultStepType: step.type });\n        } else {\n            this.setState({ activeStepType: step.type });\n        }\n\n        if (error) {\n            clearError(error);\n        }\n    }\n\n    private navigateToNextIncompleteStep: (options?: { isDefault?: boolean }) => void = (\n        options,\n    ) => {\n        const { steps, analyticsTracker } = this.props;\n        const activeStepIndex = findIndex(steps, { isActive: true });\n        const activeStep = activeStepIndex >= 0 && steps[activeStepIndex];\n\n        if (!activeStep) {\n            return;\n        }\n\n        const previousStep = steps[Math.max(activeStepIndex - 1, 0)];\n\n        if (previousStep) {\n            analyticsTracker.trackStepCompleted(previousStep.type);\n        }\n\n        this.navigateToStep(activeStep.type, options);\n    };\n\n    private navigateToOrderConfirmation: (orderId?: number) => void = (orderId) => {\n        const { steps, analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepCompleted(steps[steps.length - 1].type);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postComplete();\n        }\n\n        SubscribeSessionStorage.removeSubscribeStatus();\n\n        this.setState({ isRedirecting: true }, () => {\n            navigateToOrderConfirmation(orderId);\n        });\n    };\n\n    private checkEmbeddedSupport: (methodIds: string[]) => boolean = (methodIds) => {\n        const { embeddedSupport } = this.props;\n\n        return embeddedSupport.isSupported(...methodIds);\n    };\n\n    private handleCartChangedError: (error: CartChangedError) => void = () => {\n        this.navigateToStep(CheckoutStepType.Shipping);\n    };\n\n    private handleConsignmentsUpdated: (state: CheckoutSelectors) => void = ({ data }) => {\n        const { hasSelectedShippingOptions: prevHasSelectedShippingOptions, activeStepType, defaultStepType } =\n            this.state;\n\n        const { steps } = this.props;\n\n        const newHasSelectedShippingOptions = hasSelectedShippingOptions(\n            data.getConsignments() || [],\n        );\n\n        const isDefaultStepPaymentOrBilling =\n            !activeStepType &&\n            (defaultStepType === CheckoutStepType.Payment ||\n                defaultStepType === CheckoutStepType.Billing);\n\n        const isShippingStepFinished =\n            findIndex(steps, { type: CheckoutStepType.Shipping }) <\n            findIndex(steps, { type: activeStepType }) || isDefaultStepPaymentOrBilling;\n\n        if (\n            prevHasSelectedShippingOptions &&\n            !newHasSelectedShippingOptions &&\n            isShippingStepFinished\n        ) {\n            this.navigateToStep(CheckoutStepType.Shipping);\n            this.setState({ error: new ShippingOptionExpiredError() });\n        }\n\n        this.setState({ hasSelectedShippingOptions: newHasSelectedShippingOptions });\n    };\n\n    private handleCloseErrorModal: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleExpanded: (type: CheckoutStepType) => void = (type) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.trackStepViewed(type);\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        this.handleError(error);\n\n        // For errors that are not caught and handled by child components, we\n        // handle them here by displaying a generic error modal to the shopper.\n        this.setState({ error });\n    };\n\n    private handleError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n\n    private handleEditStep: (type: CheckoutStepType) => void = (type) => {\n        this.navigateToStep(type);\n    };\n\n    private handleReady: () => void = () => {\n        this.navigateToNextIncompleteStep({ isDefault: true });\n    };\n\n    private handleNewsletterSubscription: (subscribed: boolean) => void = (subscribed) => {\n        this.setState({ isSubscribed: subscribed });\n    }\n\n    private handleSignOut: (event: CustomerSignOutEvent) => void = ({ isCartEmpty }) => {\n        const { loginUrl, cartUrl, isPriceHiddenFromGuests, isGuestEnabled } = this.props;\n\n        if (isPriceHiddenFromGuests) {\n            if (window.top) {\n                return (window.top.location.href = cartUrl);\n            }\n        }\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postSignedOut();\n        }\n\n        if (isGuestEnabled) {\n            this.setCustomerViewType(CustomerViewType.Guest);\n        }\n\n        if (isCartEmpty) {\n            this.setState({ isCartEmpty: true });\n\n            if (!isEmbedded()) {\n                if (window.top) {\n                    return window.top.location.assign(loginUrl);\n                }\n            }\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n    };\n\n    \n\n    private setCustomerViewType: (viewType: CustomerViewType) => void = (customerViewType) => {\n        const { createAccountUrl } = this.props;\n\n        if (customerViewType === CustomerViewType.CreateAccount && isEmbedded()) {\n            if (window.top) {\n                window.top.location.replace(createAccountUrl);\n            }\n\n            return;\n        }\n\n        this.navigateToStep(CheckoutStepType.Customer);\n        this.setState({ customerViewType });\n    };\n\n    private handleBeforeExit: () => void = () => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.exitCheckout();\n    }\n\n    private handleWalletButtonClick: (methodName: string) => void = (methodName) => {\n        const { analyticsTracker } = this.props;\n\n        analyticsTracker.walletButtonClick(methodName);\n    }\n}\n\nexport default withExtension(\n    withAnalytics(withLanguage(withCheckout(mapToCheckoutProps)(Checkout))),\n);\n","import { CheckoutSelectors, CustomError } from '@bigcommerce/checkout-sdk';\nimport { createSelector } from 'reselect';\n\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nimport { EMPTY_ARRAY, isExperimentEnabled } from '../common/utility';\n\nimport { WithCheckoutProps } from './Checkout';\nimport getCheckoutStepStatuses from './getCheckoutStepStatuses';\n\nexport default function mapToCheckoutProps({\n    checkoutService,\n    checkoutState,\n}: CheckoutContextProps): WithCheckoutProps {\n    const { data, errors, statuses } = checkoutState;\n    const { promotions = EMPTY_ARRAY } = data.getCheckout() || {};\n    const submitOrderError = errors.getSubmitOrderError() as CustomError;\n    const {\n        checkoutSettings: {\n            guestCheckoutEnabled: isGuestEnabled = false,\n            checkoutUserExperienceSettings = {\n                walletButtonsOnTop: false,\n                floatingLabelEnabled: false,\n            },\n        } = {},\n        links: {\n            loginLink: loginUrl = '',\n            createAccountLink: createAccountUrl = '',\n            cartLink: cartUrl = '',\n        } = {},\n        displaySettings: { hidePriceFromGuests: isPriceHiddenFromGuests = false } = {},\n    } = data.getConfig() || {};\n\n    const subscribeToConsignmentsSelector = createSelector(\n        ({ checkoutService: { subscribe } }: CheckoutContextProps) => subscribe,\n        (subscribe) => (subscriber: (state: CheckoutSelectors) => void) => {\n            return subscribe(subscriber, ({ data: { getConsignments } }) => getConsignments());\n        },\n    );\n\n    const walletButtonsOnTopFlag = Boolean(checkoutUserExperienceSettings.walletButtonsOnTop); \n    const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n        data.getConfig()?.checkoutSettings,\n        'PROJECT-6643.enable_shipping_discounts_in_orders',\n    );\n\n    return {\n        billingAddress: data.getBillingAddress(),\n        cart: data.getCart(),\n        clearError: checkoutService.clearError,\n        consignments: data.getConsignments(),\n        hasCartChanged: submitOrderError && submitOrderError.type === 'cart_changed', // TODO: Need to clear the error once it's displayed\n        isGuestEnabled,\n        isLoadingCheckout: statuses.isLoadingCheckout(),\n        isShippingDiscountDisplayEnabled,\n        isPending: statuses.isPending(),\n        isPriceHiddenFromGuests,\n        isShowingWalletButtonsOnTop: walletButtonsOnTopFlag,\n        loadCheckout: checkoutService.loadCheckout,\n        loadPaymentMethodByIds: checkoutService.loadPaymentMethodByIds,\n        loginUrl,\n        cartUrl,\n        createAccountUrl,\n        promotions,\n        subscribeToConsignments: subscribeToConsignmentsSelector({\n            checkoutService,\n            checkoutState,\n        }),\n        steps: data.getCheckout() ? getCheckoutStepStatuses(checkoutState) : EMPTY_ARRAY,\n    };\n}\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport {\n    createEmbeddedCheckoutStylesheet,\n    createEmbeddedCheckoutSupport,\n} from '../embeddedCheckout';\n\nimport Checkout from './Checkout';\n\nexport interface CheckoutAppProps {\n    checkoutId: string;\n    containerId: string;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nexport default class CheckoutApp extends Component<CheckoutAppProps> {\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private embeddedSupport = createEmbeddedCheckoutSupport(getLanguageService());\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<CheckoutAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render() {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider\n                                checkoutService={this.checkoutService}\n                                errorLogger={createErrorLogger()}\n                            >\n                                <Checkout\n                                    {...this.props}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    embeddedSupport={this.embeddedSupport}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n}\n","import React, { ComponentType, Context, FunctionComponent, memo, useContext, useMemo } from 'react';\nimport { Omit } from 'utility-types';\n\nimport { MatchedProps } from './InjectHoc';\nimport MappableInjectHoc, { MapToProps, MapToPropsFactory } from './MappableInjectHoc';\n\nfunction isMapToPropsFactory<TContextProps, TMappedProps, TOwnProps>(\n    mapToProps:\n        | MapToProps<TContextProps, TMappedProps, TOwnProps>\n        | MapToPropsFactory<TContextProps, TMappedProps, TOwnProps>,\n): mapToProps is MapToPropsFactory<TContextProps, TMappedProps, TOwnProps> {\n    return mapToProps.length === 0;\n}\n\nexport default function createMappableInjectHoc<TContextProps>(\n    ContextComponent: Context<TContextProps>,\n    options?: { displayNamePrefix?: string },\n): MappableInjectHoc<NonNullable<TContextProps>> {\n    return <TMappedProps, TOwnProps>(\n        mapToPropsOrFactory:\n            | MapToProps<NonNullable<TContextProps>, TMappedProps, TOwnProps>\n            | MapToPropsFactory<NonNullable<TContextProps>, TMappedProps, TOwnProps>,\n    ) => {\n        return <TProps extends MatchedProps<TMappedProps, TProps>>(\n            OriginalComponent: ComponentType<TProps>,\n        ) => {\n            const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n                <OriginalComponent {...props} />\n            ));\n\n            const DecoratedComponent: FunctionComponent<Omit<TProps, keyof TMappedProps>> = (\n                props,\n            ) => {\n                const context = useContext(ContextComponent);\n\n                const mapToProps = useMemo(\n                    () =>\n                        isMapToPropsFactory(mapToPropsOrFactory)\n                            ? mapToPropsOrFactory()\n                            : mapToPropsOrFactory,\n                    [],\n                );\n\n                const mappedProps = context\n                    ? mapToProps(context, props as unknown as TOwnProps)\n                    : context;\n\n                if (!mappedProps) {\n                    return null;\n                }\n\n                const mergedProps = { ...mappedProps, ...props } as unknown as TProps;\n\n                return <InnerDecoratedComponent {...mergedProps} />;\n            };\n\n            if (options && options.displayNamePrefix && OriginalComponent) {\n                DecoratedComponent.displayName = `${options.displayNamePrefix}(${\n                    OriginalComponent.displayName || OriginalComponent.name\n                })`;\n            }\n\n            return DecoratedComponent;\n        };\n    };\n}\n","import { createMappableInjectHoc } from '@bigcommerce/checkout/legacy-hoc';\nimport { CheckoutContext, CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\n\nexport type WithCheckoutProps = CheckoutContextProps;\n\nconst withCheckout = createMappableInjectHoc(CheckoutContext, {\n    displayNamePrefix: 'WithCheckout',\n});\n\nexport default withCheckout;\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: string;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n         \n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n\n    // todo: remove these methods when all error types has specific subclasses.\n    // they are only provided for compatibility with errors defined in `app.errors.ts` while we transition\n    // to proper error subclasses.\n    protected setDefaultValues({\n        name,\n        defaultError,\n        defaultTitle,\n    }: {\n        name: string;\n        defaultError: string;\n        defaultTitle: string;\n    }): void {\n        this.name = this.name || name;\n        this.message = this.message || defaultError;\n        this.title = this.title || defaultTitle;\n    }\n}\n","import React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './ErrorCode.scss';\n\nexport interface ErrorCodeProps {\n    code: string;\n    label?: ReactNode;\n}\n\nconst ErrorCode: FunctionComponent<ErrorCodeProps> = ({ code, label }) => {\n    return (\n        <div className=\"errorCode\">\n            <span className=\"errorCode-label\">\n                {label ?? <TranslatedString id=\"common.error_code\" />}\n            </span>{' '}\n            <span className=\"errorCode-value\">{code}</span>\n        </div>\n    );\n};\n\nexport default memo(ErrorCode);\n","import { RequestError } from '@bigcommerce/checkout-sdk';\nimport { noop } from 'lodash';\nimport React, { PureComponent, ReactNode, SyntheticEvent } from 'react';\n\nimport { TranslatedHtml, TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Button, ButtonSize } from '../../ui/button';\nimport { IconError, IconSize } from '../../ui/icon';\nimport { Modal, ModalHeader } from '../../ui/modal';\n\nimport computeErrorCode from './computeErrorCode';\nimport ErrorCode from './ErrorCode';\nimport isCustomError from './isCustomError';\nimport isHtmlError from './isHtmlError';\nimport isRequestError from './isRequestError';\n\nimport { CustomError } from './index';\n\nexport interface ErrorModalProps {\n    error?: Error | RequestError | CustomError;\n    message?: ReactNode;\n    title?: ReactNode;\n    shouldShowErrorCode?: boolean;\n    onClose?(event: Event, props: ErrorModalOnCloseProps): void;\n}\n\nexport interface ErrorModalOnCloseProps {\n    error: Error;\n}\n\nexport default class ErrorModal extends PureComponent<ErrorModalProps> {\n    private aria = {\n        labelledby: 'errorModalMessage',\n    };\n\n    render(): ReactNode {\n        const { error } = this.props;\n\n        return (\n            <Modal\n                additionalModalClassName=\"modal--error\"\n                aria={this.aria}\n                footer={this.renderFooter()}\n                header={this.renderHeader()}\n                isOpen={!!error}\n                onRequestClose={this.handleOnRequestClose}\n            >\n                {this.renderBody()}\n            </Modal>\n        );\n    }\n\n    private renderHeader(): ReactNode {\n        const { error, title = error && isCustomError(error) && error.title } = this.props;\n\n        return (\n            <ModalHeader>\n                <IconError\n                    additionalClassName=\"icon--error modal-header-icon\"\n                    size={IconSize.Small}\n                />\n                <span aria-live=\"assertive\" role=\"alert\">\n                    {title || <TranslatedString id=\"common.error_heading\" />}\n                </span>\n            </ModalHeader>\n        );\n    }\n\n    private renderBody(): ReactNode {\n        const { error, message = error && error.message } = this.props;\n\n        return (\n            <>\n                {error && isHtmlError(error) &&\n                    <TranslatedHtml id={error.data.translationKey} />\n                }\n                {message && (\n                    <p aria-live=\"assertive\" id=\"errorModalMessage\" role=\"alert\">\n                        {message}\n                    </p>\n                )}\n\n                <div className=\"optimizedCheckout-contentSecondary\">{this.renderErrorCode()}</div>\n            </>\n        );\n    }\n\n    private renderFooter(): ReactNode {\n        return (\n            <Button onClick={this.handleOnRequestClose} size={ButtonSize.Small}>\n                <TranslatedString id=\"common.ok_action\" />\n            </Button>\n        );\n    }\n\n    private renderErrorCode(): ReactNode {\n        const { error, shouldShowErrorCode = true } = this.props;\n\n        if (!error || !shouldShowErrorCode) {\n            return;\n        }\n\n        if (isRequestError(error) && error.headers?.['x-request-id']) {\n            return (\n                <ErrorCode\n                    code={error.headers['x-request-id']}\n                    label={<TranslatedString id=\"common.request_id\" />}\n                />\n            );\n        }\n\n        const errorCode = computeErrorCode(error);\n\n        if (!errorCode) {\n            return;\n        }\n\n        return <ErrorCode code={errorCode} />;\n    }\n\n    private handleOnRequestClose: (event: SyntheticEvent) => void = (event) => {\n        const { error, onClose = noop } = this.props;\n\n        if (error) {\n            onClose(event.nativeEvent, { error });\n        }\n    };\n}\n","import { CustomError } from \"@bigcommerce/checkout/payment-integration-api\";\n\nexport default function isHtmlError(error: Error): error is CustomError {\n\n    return 'type' in error &&\n        error.type === 'custom' &&\n        'data' in error &&\n        typeof error.data === 'object' &&\n        error.data !== null &&\n        'shouldBeTranslatedAsHtml' in error.data &&\n        typeof error.data.shouldBeTranslatedAsHtml === 'boolean';\n}\n","import HashStatic from 'object-hash';\n\nexport default function computeErrorCode(value: any): string | undefined {\n    try {\n        return HashStatic(value).toUpperCase();\n    } catch (error) {}\n}\n","import CustomError from './CustomError';\n\n// todo: remove this method in favour of creating proper subclasses for each error type.\n// it's only provided for compatibility with errors defined in `app.errors.ts` while we transition\n// to proper error subclasses.\nexport default function createCustomErrorType({\n    name,\n    defaultError = '',\n    defaultTitle = '',\n    shouldReport = false,\n}: {\n    name: string;\n    defaultError?: string;\n    defaultTitle?: string;\n    shouldReport?: boolean;\n}) {\n    class CustomErrorType extends CustomError {\n        constructor(data = {}, errorMessage = '', errorTitle = '') {\n            super({\n                data,\n                message: errorMessage,\n                title: errorTitle,\n            });\n\n            // todo: this should use new.taget.prototype in the parent class once we can make it work\n            setPrototypeOf(this, CustomErrorType.prototype);\n\n            this.setDefaultValues({\n                name,\n                defaultError,\n                defaultTitle,\n            });\n        }\n    }\n\n    CustomErrorType.shouldReport = shouldReport;\n\n    return CustomErrorType;\n}\n\nexport function setPrototypeOf(object: any, prototype: any) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import {\n  ErrorLevelType,\n  ErrorLogger,\n  ErrorMeta,\n  ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nexport interface ConsoleErrorLoggerOptions {\n    console?: Console;\n    errorTypes?: string[];\n}\n\n// tslint:disable:no-console\nexport default class ConsoleErrorLogger implements ErrorLogger {\n    private console: Console;\n\n    constructor(options?: ConsoleErrorLoggerOptions) {\n        const { console: customConsole = console } = options || {};\n\n        this.console = customConsole;\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        meta?: ErrorMeta,\n    ): void {\n        switch (level) {\n            case ErrorLevelType.Error:\n                return this.console.error(error, tags, meta);\n\n            case ErrorLevelType.Info:\n                return this.console.info(error, tags, meta);\n\n            case ErrorLevelType.Warning:\n                return this.console.warn(error, tags, meta);\n\n            default:\n                return this.console.log(error, tags, meta);\n        }\n    }\n}\n","import { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\n\nexport default class NoopErrorLogger implements ErrorLogger {\n    log() {}\n}\n","import {\n    BrowserOptions,\n    captureException,\n    Event,\n    init,\n    Integrations,\n    SeverityLevel,\n    StackFrame,\n    withScope,\n} from '@sentry/browser';\nimport { RewriteFrames } from '@sentry/integrations';\nimport { EventHint, Exception } from '@sentry/types';\n\nimport {\n    ErrorLevelType,\n    ErrorLogger,\n    ErrorMeta,\n    ErrorTags,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport computeErrorCode from './computeErrorCode';\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\n\nconst FILENAME_PREFIX = 'app://';\n\nexport interface SentryErrorLoggerOptions {\n    consoleLogger?: ConsoleErrorLogger;\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport enum SeverityLevelEnum {\n    DEBUG = 'debug',\n    ERROR = 'error',\n    INFO = 'info',\n    WARNING = 'warning',\n}\n\nexport default class SentryErrorLogger implements ErrorLogger {\n    private consoleLogger: ErrorLogger;\n    private publicPath: string;\n\n    constructor(config: BrowserOptions, options?: SentryErrorLoggerOptions) {\n        const {\n            consoleLogger = new NoopErrorLogger(),\n            publicPath = '',\n            sampleRate = 0.1,\n        } = options || {};\n\n        this.consoleLogger = consoleLogger;\n        this.publicPath = publicPath;\n\n        init({\n            sampleRate,\n            beforeSend: this.handleBeforeSend,\n            denyUrls: [\n                ...(config.denyUrls || []),\n                'polyfill~checkout',\n                'sentry~checkout',\n            ],\n            integrations: [\n                new Integrations.GlobalHandlers({\n                    onerror: false,\n                    onunhandledrejection: true,\n                }),\n                new RewriteFrames({\n                    iteratee: this.handleRewriteFrame,\n                }),\n            ],\n            ...config,\n        });\n    }\n\n    log(\n        error: Error,\n        tags?: ErrorTags,\n        level: ErrorLevelType = ErrorLevelType.Error,\n        payload?: ErrorMeta,\n    ): void {\n        this.consoleLogger.log(error, tags, level);\n\n        withScope((scope) => {\n            const { errorCode = computeErrorCode(error) } = tags || {};\n\n            if (errorCode) {\n                scope.setTags({ errorCode });\n            }\n\n            scope.setLevel(this.mapToSentryLevel(level));\n\n            if (payload) {\n                scope.setExtras(payload);\n            }\n\n            scope.setFingerprint(['{{ default }}']);\n\n            captureException(error);\n        });\n    }\n\n    private mapToSentryLevel(level: ErrorLevelType): SeverityLevel {\n        switch (level) {\n            case ErrorLevelType.Info:\n                return SeverityLevelEnum.INFO;\n\n            case ErrorLevelType.Warning:\n                return SeverityLevelEnum.WARNING;\n\n            case ErrorLevelType.Debug:\n                return SeverityLevelEnum.DEBUG;\n\n            case ErrorLevelType.Error:\n            default:\n                return SeverityLevelEnum.ERROR;\n        }\n    }\n\n    /**\n     * Ignore exceptions that don't have a stacktrace at all, or have a stacktrace that references files external to\n     * this app. For example, if the exception is caused by a piece of third party code, one of the frames in the\n     * stacktrace will reference a file that is not a part of the app. This behaviour is different to the whitelist\n     * config provided by Sentry, as the latter only examines the topmost frame in the stacktrace. The config is not\n     * sufficient for us because some stores have customisation code built on top of our code, resulting in a stacktrace\n     * whose topmost frame is ours but frames below it are not.\n     */\n    private shouldReportExceptions(exceptions: Exception[], originalException: unknown): boolean {\n        // Ignore exceptions that are not an instance of Error because they are most likely not thrown by our own code,\n        // as we have a lint rule that prevents us from doing so. Although these exceptions don't actually have a\n        // stacktrace, meaning that the condition below should theoretically cover the scenario, but we still need this\n        // condition because Sentry client creates a \"synthentic\" stacktrace for them using the information it has.\n        if (!exceptions.length || !(originalException instanceof Error)) {\n            return false;\n        }\n\n        return exceptions.every((exception) => {\n            if (!exception.stacktrace?.frames?.length) {\n                return false;\n            }\n\n            return exception.stacktrace.frames.every((frame) =>\n                frame.filename?.startsWith(FILENAME_PREFIX),\n            );\n        });\n    }\n\n    private handleBeforeSend: (event: Event, hint?: EventHint) => Event | null = (event, hint) => {\n        if (event.exception) {\n            if (\n                !this.shouldReportExceptions(\n                    event.exception.values ?? [],\n                    hint?.originalException ?? null,\n                )\n            ) {\n                return null;\n            }\n\n            return event;\n        }\n\n        return event;\n    };\n\n    private handleRewriteFrame: (frame: StackFrame) => StackFrame = (frame) => {\n        if (this.publicPath && frame.filename) {\n            // We want to remove the base path of the filename, otherwise we\n            // will need to specify it when we upload the sourcemaps so that the\n            // filenames can match up.\n            const filename = frame.filename.replace(new RegExp(`^${this.publicPath}/?`), '');\n\n            // `frame` needs to be modified in-place (based on the example in\n            // their documentation).\n            if (filename !== frame.filename) {\n                frame.filename = `${FILENAME_PREFIX}/${filename}`;\n            }\n        }\n\n        return frame;\n    };\n}\n","import {\n  ErrorLogger,\n  ErrorLoggerOptions,\n  ErrorLoggerServiceConfig,\n} from '@bigcommerce/checkout/error-handling-utils';\n\nimport ConsoleErrorLogger from './ConsoleErrorLogger';\nimport NoopErrorLogger from './NoopErrorLogger';\nimport SentryErrorLogger from './SentryErrorLogger';\n\nexport default function createErrorLogger(\n    serviceConfig?: ErrorLoggerServiceConfig,\n    options?: ErrorLoggerOptions,\n): ErrorLogger {\n    if (serviceConfig && serviceConfig.sentry) {\n        return new SentryErrorLogger(serviceConfig.sentry, {\n            ...options,\n            consoleLogger: new ConsoleErrorLogger(options),\n        });\n    }\n\n    if (process.env.NODE_ENV === 'test') {\n        return new NoopErrorLogger();\n    }\n\n    return new ConsoleErrorLogger(options);\n}\n","import CustomError from './CustomError';\n\nexport default function isCustomError(error: Error): error is CustomError {\n    const customError = error as CustomError;\n\n    return (\n        typeof customError.title !== 'undefined' &&\n        typeof customError.data !== 'undefined' &&\n        typeof customError.type !== 'undefined'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\ninterface ErrorWithType extends RequestError {\n    type: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction hasOwnProperty<X extends {}, Y extends PropertyKey>(\n    obj: X,\n    key: Y,\n): obj is X & Record<Y, unknown> {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport default function isErrorWithType(error: unknown): error is ErrorWithType {\n    return (\n        typeof error === 'object' &&\n        error !== null &&\n        hasOwnProperty(error, 'type') &&\n        typeof error.type === 'string'\n    );\n}\n","import { RequestError } from '@bigcommerce/checkout-sdk';\n\nexport default function isRequestError(error: unknown): error is RequestError {\n    const requestError = error as RequestError;\n\n    return requestError.type === 'request';\n}\n","import { ComponentType } from 'react';\n\nimport { ResolvableComponent } from '.';\n\nexport default function isResolvableComponent<TProps, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n): Component is ResolvableComponent<TProps, TIdentifier> {\n    return 'resolveIds' in Component;\n}\n","import { ComponentType } from 'react';\n\nimport { isResolvableComponent } from '@bigcommerce/checkout/payment-integration-api';\n\ninterface ResolveResult<TProps> {\n    component: ComponentType<TProps>;\n    matches: number;\n    default: boolean;\n}\n\nexport default function resolveComponent<TResolveId extends Record<string, unknown>, TProps>(\n    query: TResolveId,\n    components: Record<string, ComponentType<TProps>>,\n): ComponentType<TProps> | undefined {\n    const results: Array<ResolveResult<TProps>> = [];\n\n    for (const [_, Component] of Object.entries(components)) {\n        if (!isResolvableComponent<TProps, TResolveId>(Component)) {\n            continue;\n        }\n\n        for (const resolverId of Component.resolveIds) {\n            const result = { component: Component, matches: 0, default: false };\n\n            for (const [key, value] of Object.entries(resolverId)) {\n                if (key in query && query[key] !== value) {\n                    result.matches = 0;\n                    break;\n                }\n\n                if (query[key] === value) {\n                    result.matches++;\n                }\n\n                if (key === 'default' && value === true) {\n                    result.default = true;\n                }\n            }\n\n            results.push(result);\n        }\n    }\n\n    const matched = results\n        .sort((a, b) => b.matches - a.matches)\n        .filter((result) => result.matches > 0)[0];\n\n    return matched?.component ?? results.find((result) => result.default)?.component;\n}\n","// NOTE: For now, need to coerce the type as mutable array / object. Otherwise,\n// we'll need to change the props of all components as readonly.\nexport const EMPTY_ARRAY = Object.freeze([]) as never[];\nexport const EMPTY_OBJECT = Object.freeze({}) as any;\n","export default function isBuyNowCart(): boolean {\n    const lastPathName = window.location.pathname.split('/').pop();\n\n    return !(lastPathName === 'checkout' || lastPathName === 'embedded-checkout');\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isExperimentEnabled(\n    checkoutSettings: CheckoutSettings | undefined,\n    experimentName: string,\n): boolean {\n    return Boolean(checkoutSettings?.features[experimentName] ?? true);\n}\n","import { CheckoutSettings } from '@bigcommerce/checkout-sdk';\n\nexport default function isFloatingLabelEnabled(checkoutSettings: CheckoutSettings): boolean {\n    return Boolean(checkoutSettings.checkoutUserExperienceSettings.floatingLabelEnabled);\n}\n","const DEFAULT_OPTIONS = {\n    count: 5,\n    interval: 1000,\n};\n\nexport interface RetryOptions {\n    count?: number;\n    interval?: number;\n}\n\nexport default async function retry<T>(fn: () => Promise<T>, options?: RetryOptions): Promise<T> {\n    const { count, interval } = { ...DEFAULT_OPTIONS, ...options };\n\n    try {\n        return await fn();\n    } catch (error) {\n        if (count === 1) {\n            throw error;\n        }\n\n        await new Promise((resolve) => setTimeout(resolve, interval));\n\n        return retry(fn, { interval, count: count - 1 });\n    }\n}\n","import { CustomerPasswordRequirements, ShopperConfig } from '@bigcommerce/checkout-sdk';\n\nexport interface PasswordRequirements {\n    minLength: number;\n    alpha: RegExp;\n    numeric: RegExp;\n    description?: string;\n}\n\nexport function getPasswordRequirementsFromConfig(config: ShopperConfig): PasswordRequirements {\n    const {\n        passwordRequirements: { minlength, error: description, alpha, numeric },\n    } = config;\n\n    return getPasswordRequirements({\n        minlength,\n        description,\n        alpha,\n        numeric,\n    });\n}\n\nexport default function getPasswordRequirements({\n    minlength,\n    description,\n    alpha,\n    numeric,\n}: CustomerPasswordRequirements): PasswordRequirements {\n    const allSlashes = new RegExp('/', 'g');\n\n    return {\n        minLength: minlength,\n        description,\n        alpha: new RegExp(alpha.replace(allSlashes, '')),\n        numeric: new RegExp(numeric.replace(allSlashes, '')),\n    };\n}\n","import { assign, kebabCase, map, pickBy } from 'lodash';\n\nexport default function toCSSRule(\n    selector: string,\n    ...styles: Array<{ [key: string]: any } | undefined>\n): string {\n    const mergedStyles = assign({}, ...styles);\n    const props = map(\n        pickBy(mergedStyles, (value) => typeof value === 'string'),\n        (value, key) => `${kebabCase(key)}: ${value};`,\n    ).join(' ');\n\n    return `${selector} {${props}}`;\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { toCSSRule } from '../common/dom';\n\nexport default class EmbeddedCheckoutStyleParser {\n    parse(styles: EmbeddedCheckoutStyles): string[] {\n        const rules: string[] = [];\n\n        if (styles.body) {\n            rules.push(toCSSRule('body', styles.body));\n            rules.push(toCSSRule('.optimizedCheckout-overlay', styles.body));\n        }\n\n        if (styles.text) {\n            rules.push(toCSSRule('.optimizedCheckout-contentPrimary', styles.text));\n        }\n\n        if (styles.secondaryText) {\n            rules.push(toCSSRule('.optimizedCheckout-contentSecondary', styles.secondaryText));\n        }\n\n        if (styles.heading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingPrimary', styles.heading));\n        }\n\n        if (styles.secondaryHeading) {\n            rules.push(toCSSRule('.optimizedCheckout-headingSecondary', styles.secondaryHeading));\n        }\n\n        if (styles.link) {\n            rules.push(toCSSRule('a', styles.link));\n            rules.push(toCSSRule('a:focus', styles.link, styles.link.focus));\n            rules.push(toCSSRule('a:hover', styles.link, styles.link.hover));\n        }\n\n        if (styles.label) {\n            rules.push(toCSSRule('.optimizedCheckout-form-label', styles.label));\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-label',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .form-inlineMessage',\n                    styles.label,\n                    styles.label.error,\n                ),\n            );\n        }\n\n        if (styles.button) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonPrimary', styles.button));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:active',\n                    styles.button,\n                    styles.button.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:focus',\n                    styles.button,\n                    styles.button.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary:hover',\n                    styles.button,\n                    styles.button.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:focus',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled]:hover',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-active',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonPrimary[disabled].is-loading',\n                    styles.button,\n                    styles.button.disabled,\n                ),\n            );\n        }\n\n        if (styles.secondaryButton) {\n            rules.push(toCSSRule('.optimizedCheckout-buttonSecondary', styles.secondaryButton));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.active,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:focus',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled]:hover',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-active',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-buttonSecondary[disabled].is-loading',\n                    styles.secondaryButton,\n                    styles.secondaryButton.disabled,\n                ),\n            );\n        }\n\n        if (styles.input) {\n            rules.push(toCSSRule('.optimizedCheckout-form-input', styles.input));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:focus', styles.input, styles.input.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-input:hover', styles.input, styles.input.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-input::placeholder',\n                    styles.input,\n                    styles.input.placeholder,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:focus',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-input:hover',\n                    styles.input,\n                    styles.input.error,\n                ),\n            );\n        }\n\n        if (styles.select) {\n            rules.push(toCSSRule('.optimizedCheckout-form-select', styles.select));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:focus',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-select:hover',\n                    styles.select,\n                    styles.select.error,\n                ),\n            );\n        }\n\n        if (styles.checkbox) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checkbox', styles.checkbox));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.focus,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:focus',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-checkbox:hover',\n                    styles.checkbox,\n                    styles.checkbox.error,\n                ),\n            );\n        }\n\n        if (styles.radio) {\n            rules.push(toCSSRule('.optimizedCheckout-form-radio', styles.radio));\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:focus', styles.radio, styles.radio.focus),\n            );\n            rules.push(\n                toCSSRule('.optimizedCheckout-form-radio:hover', styles.radio, styles.radio.hover),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:focus',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.form-field--error .optimizedCheckout-form-radio:hover',\n                    styles.radio,\n                    styles.radio.error,\n                ),\n            );\n        }\n\n        if (styles.step) {\n            rules.push(toCSSRule('.optimizedCheckout-checkoutStep', styles.step));\n            rules.push(toCSSRule('.optimizedCheckout-step', styles.step.icon));\n        }\n\n        if (styles.checklist) {\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist', styles.checklist));\n            rules.push(toCSSRule('.optimizedCheckout-form-checklist-item', styles.checklist));\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item:hover',\n                    styles.checklist,\n                    styles.checklist.hover,\n                ),\n            );\n            rules.push(\n                toCSSRule(\n                    '.optimizedCheckout-form-checklist-item--selected',\n                    styles.checklist,\n                    styles.checklist.checked,\n                ),\n            );\n        }\n\n        if (styles.discountBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-discountBanner', styles.discountBanner));\n        }\n\n        if (styles.loadingBanner) {\n            rules.push(toCSSRule('.optimizedCheckout-loadingToaster', styles.loadingBanner));\n        }\n\n        if (styles.orderSummary) {\n            rules.push(toCSSRule('.optimizedCheckout-orderSummary', styles.orderSummary));\n            rules.push(\n                toCSSRule('.optimizedCheckout-orderSummary-cartSection', styles.orderSummary),\n            );\n        }\n\n        return rules;\n    }\n}\n","import { EmbeddedCheckoutStyles } from '@bigcommerce/checkout-sdk';\n\nimport { appendStylesheet } from '../common/dom';\n\nimport EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\n\nexport default class EmbeddedCheckoutStylesheet {\n    private _parser: EmbeddedCheckoutStyleParser;\n\n    constructor(embeddedCheckoutStyleParser: EmbeddedCheckoutStyleParser) {\n        this._parser = embeddedCheckoutStyleParser;\n    }\n\n    append(styles: EmbeddedCheckoutStyles): HTMLStyleElement {\n        return appendStylesheet(this._parser.parse(styles));\n    }\n}\n","export default function appendStylesheet(rules: string[]): HTMLStyleElement {\n    const style = document.createElement('style');\n\n    document.head.appendChild(style);\n\n    if (style.sheet instanceof CSSStyleSheet) {\n        const { sheet } = style;\n\n        rules.forEach((rule, index) => {\n            sheet.insertRule(rule, index);\n        });\n    }\n\n    return style;\n}\n","import EmbeddedCheckoutStyleParser from './EmbeddedCheckoutStyleParser';\nimport EmbeddedCheckoutStylesheet from './EmbeddedCheckoutStylesheet';\n\nexport default function createEmbeddedCheckoutStylesheet() {\n    const embeddedCheckoutStyleParser = new EmbeddedCheckoutStyleParser();\n\n    return new EmbeddedCheckoutStylesheet(embeddedCheckoutStyleParser);\n}\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import { FormField } from '@bigcommerce/checkout-sdk';\nimport { memoize } from '@bigcommerce/memoize';\nimport {\n    array,\n    ArraySchema,\n    date,\n    number,\n    NumberSchema,\n    object,\n    ObjectSchema,\n    Schema,\n    string,\n} from 'yup';\n\nimport { DynamicFormFieldType } from '../ui/form';\n\nexport type TranslateValidationErrorFunction = (\n    validationType: 'max' | 'min' | 'required' | 'invalid',\n    field: {\n        name: string;\n        label: string;\n        min?: number;\n        max?: number;\n    },\n) => string | undefined;\n\nexport interface FormFieldsValidationSchemaOptions {\n    formFields: FormField[];\n    translate?: TranslateValidationErrorFunction;\n}\n\nexport interface CustomFormFieldValues {\n    customFields: CustomFormFields;\n}\n\nexport interface CustomFormFields {\n    [id: string]: string | string[] | number;\n}\n\nexport default memoize(function getCustomFormFieldsValidationSchema({\n    formFields,\n    translate = () => undefined,\n}: FormFieldsValidationSchemaOptions): ObjectSchema<CustomFormFieldValues> {\n    return object({\n        customFields: object(\n            formFields\n                .filter(({ custom }) => !!custom)\n                .reduce((schema, { name, label, required, fieldType, type, min, max }) => {\n                    let maxValue: number | undefined;\n                    let minValue: number | undefined;\n\n                    if (type === 'date') {\n                        schema[name] = date()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail date\n                            // validation when it's optional\n                            .nullable(true)\n                            .transform((value, originalValue) =>\n                                originalValue === '' ? null : value,\n                            );\n                    } else if (type === 'integer') {\n                        schema[name] = number()\n                            // Transform NaN values to undefined to avoid empty string (empty input) to fail number\n                            // validation when it's optional\n                            .transform((value) => (isNaN(value) ? undefined : value));\n\n                        maxValue = typeof max === 'number' ? max : undefined;\n                        minValue = typeof min === 'number' ? min : undefined;\n                    } else if (fieldType === DynamicFormFieldType.checkbox) {\n                        schema[name] = array();\n                    } else {\n                        schema[name] = string();\n                    }\n\n                    if (maxValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).max(\n                            maxValue,\n                            translate('max', { label, name, max: maxValue + 1 }),\n                        );\n                    }\n\n                    if (minValue !== undefined) {\n                        schema[name] = (schema[name] as NumberSchema).min(\n                            minValue,\n                            translate('min', { label, name, min: minValue - 1 }),\n                        );\n                    }\n\n                    if (required) {\n                        const requiredErrorMessage = translate('required', { name, label });\n\n                        schema[name] =\n                            fieldType === DynamicFormFieldType.checkbox\n                                ? (schema[name] as ArraySchema<string>).min(1, requiredErrorMessage)\n                                : (schema[name] as ArraySchema<string>).required(\n                                      requiredErrorMessage,\n                                  );\n                    }\n\n                    return schema;\n                }, {} as { [key: string]: Schema<any> }),\n        ).nullable(true),\n    }) as ObjectSchema<CustomFormFieldValues>;\n});\n","import { forIn, isDate, padStart } from 'lodash';\n\nexport default function mapCustomFormFieldsFromFormValues(customFieldsObject: {\n    [id: string]: any;\n}): Array<{ fieldId: string; fieldValue: string }> {\n    const customFields: Array<{ fieldId: string; fieldValue: string }> = [];\n\n    forIn(customFieldsObject, (value, key) => {\n        let fieldValue: string;\n\n        if (isDate(value)) {\n            const padMonth = padStart((value.getMonth() + 1).toString(), 2, '0');\n            const padDay = padStart(value.getDate().toString(), 2, '0');\n\n            fieldValue = `${value.getFullYear()}-${padMonth}-${padDay}`;\n        } else {\n            fieldValue = value;\n        }\n\n        customFields.push({\n            fieldId: key,\n            fieldValue,\n        });\n    });\n\n    return customFields;\n}\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst CheckoutButton: FunctionComponent<CheckoutButtonProps> = ({\n    checkoutService: { deinitializeCustomer, initializeCustomer },\n    checkoutButtonContainerClass,\n    containerId,\n    methodId,\n    onUnhandledError,\n    onWalletButtonClick,\n}) => {\n    useEffect(() => {\n        initializeCustomer({\n            methodId,\n            [methodId]: {\n                container: containerId,\n                onUnhandledError,\n                onClick: () => onWalletButtonClick(methodId),\n            },\n        }).catch(onUnhandledError);\n\n        return () => {\n            deinitializeCustomer({ methodId }).catch(onUnhandledError);\n        };\n    }, [\n        containerId,\n        deinitializeCustomer,\n        initializeCustomer,\n        methodId,\n        onUnhandledError,\n        onWalletButtonClick,\n    ]);\n\n    return <div className={checkoutButtonContainerClass} id={containerId} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    CheckoutButton,\n    [],\n);\n","import React, { FunctionComponent, useEffect } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport { isHTMLElement } from '@bigcommerce/checkout/instrument-utils';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nconst beautifyAmazonButton = (): void => {\n    if (!document.querySelector('.checkout-button-container')) {\n        return;\n    }\n\n    const container = document.querySelector('#amazonpayCheckoutButton > div');\n\n    if (container) {\n        const amazonButton = container.shadowRoot?.querySelector('.amazonpay-button-view1');\n\n        if (isHTMLElement(amazonButton)) {\n            amazonButton.style.height = '36px';\n\n            return;\n        }\n    }\n\n    setTimeout(beautifyAmazonButton, 10);\n};\n\nconst AmazonPayV2Button: FunctionComponent<CheckoutButtonProps> = (props) => {\n    useEffect(() => {\n        beautifyAmazonButton();\n    }, []);\n\n    return (\n        <div className=\"AmazonPayContainer\">\n            <CheckoutButton {...props} />\n        </div>\n    );\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    AmazonPayV2Button,\n    [{ id: 'amazonpay' }],\n);\n","export default function isHTMLElement(element: unknown): element is HTMLElement {\n    return element instanceof HTMLElement;\n}\n","import setPrototypeOf from '../setPrototypeOf';\n\nimport CustomError from './CustomError';\n\nexport default class EmbeddedCheckoutUnsupportedError extends CustomError {\n    constructor(message: string) {\n        super({\n            name: 'EMBEDDED_CHECKOUT_UNSUPPORTED_ERROR',\n            message,\n        });\n\n        setPrototypeOf(this, EmbeddedCheckoutUnsupportedError.prototype);\n    }\n}\n","export default function setPrototypeOf<T extends object>(object: T, prototype: object): T {\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else if (hasProto(object)) {\n        // eslint-disable-next-line no-proto\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction hasProto(object: object): object is object & { __proto__: object } {\n    return '__proto__' in object;\n}\n","import React, { FunctionComponent } from 'react';\n\nimport { CheckoutButton } from '@bigcommerce/checkout/checkout-button-integration';\nimport {\n    CheckoutButtonProps,\n    CheckoutButtonResolveId,\n    EmbeddedCheckoutUnsupportedError,\n    isEmbedded,\n    toResolvableComponent,\n} from '@bigcommerce/checkout/payment-integration-api';\n\nimport './GooglePayButton.scss';\n\nconst GooglePayButton: FunctionComponent<CheckoutButtonProps> = (props) => {\n    const { language, onUnhandledError } = props;\n\n    if (isEmbedded()) {\n        onUnhandledError(\n            new EmbeddedCheckoutUnsupportedError(\n                language.translate('embedded_checkout.unsupported_error', {\n                    methods: 'googlepay',\n                }),\n            ),\n        );\n\n        return null;\n    }\n\n    return <CheckoutButton checkoutButtonContainerClass=\"google-pay-top-button\" {...props} />;\n};\n\nexport default toResolvableComponent<CheckoutButtonProps, CheckoutButtonResolveId>(\n    GooglePayButton,\n    [\n        { id: 'googlepayadyenv2' },\n        { id: 'googlepayadyenv3' },\n        { id: 'googlepayauthorizenet' },\n        { id: 'googlepaybnz' },\n        { id: 'googlepaybraintree' },\n        { id: 'googlepaypaypalcommerce' },\n        { id: 'googlepaycheckoutcom' },\n        { id: 'googlepaycybersourcev2' },\n        { id: 'googlepayorbital' },\n        { id: 'googlepaystripe' },\n        { id: 'googlepaystripeupe' },\n        { id: 'googlepayworldpayaccess' },\n        { id: 'googlepaytdonlinemart' },\n    ],\n);\n","export default function isEmbedded(pathname: string = document.location.pathname): boolean {\n    const basePath = `/${pathname.split('/')[1]}`;\n\n    return basePath === '/embedded-checkout';\n}\n","import {\n    CheckoutPayment,\n    GiftCertificateOrderPayment,\n    OrderPayment,\n} from '@bigcommerce/checkout-sdk';\n\nexport default function isGiftCertificatePayment(\n    payment: OrderPayment | CheckoutPayment,\n): payment is GiftCertificateOrderPayment {\n    return payment.providerId === 'giftcertificate';\n}\n","// `document.currentScript` can only be called at the global level as it only\n// holds a reference to the script when it is initially processed.\nconst path = document.currentScript ? (document.currentScript as HTMLScriptElement).src : undefined;\n\nexport default function getCurrentScriptPath(): string | undefined {\n    return path;\n}\n","import getCurrentScriptPath from './getCurrentScriptPath';\n\nexport default function configurePublicPath(publicPath?: string): string {\n    if (!publicPath) {\n        const scriptPath = getCurrentScriptPath();\n\n        if (!scriptPath) {\n            throw new Error(\n                'Unable to configure the public path of the application because it is not specified and it cannot be inferred using the path of the current script.',\n            );\n        }\n\n        __webpack_public_path__ = `${scriptPath.split('/').slice(0, -1).join('/')}/`;\n\n        return __webpack_public_path__;\n    }\n\n    __webpack_public_path__ = publicPath.substr(-1) === '/' ? publicPath : `${publicPath}/`;\n\n    return __webpack_public_path__;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { CheckoutAppProps } from './CheckoutApp';\n\nexport type RenderCheckoutOptions = CheckoutAppProps;\nexport type RenderCheckout = typeof renderCheckout;\n\nexport default function renderCheckout({\n    containerId,\n    publicPath,\n    ...props\n}: RenderCheckoutOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: CheckoutApp } = require('./CheckoutApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <CheckoutApp containerId={containerId} publicPath={configuredPublicPath} {...props} />,\n        document.getElementById(containerId),\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { configurePublicPath } from '../common/bundler';\n\nimport { OrderConfirmationAppProps } from './OrderConfirmationApp';\n\nexport type RenderOrderConfirmationOptions = OrderConfirmationAppProps;\nexport type RenderOrderConfirmation = typeof renderOrderConfirmation;\n\nexport default function renderOrderConfirmation({\n    containerId,\n    publicPath,\n    ...props\n}: RenderOrderConfirmationOptions): void {\n    const configuredPublicPath = configurePublicPath(publicPath);\n\n    // We want to use `require` here because we want to set up the public path\n    // first before importing the app component and its dependencies.\n    const { default: OrderConfirmationApp } = require('./OrderConfirmationApp');\n\n    // We want to use `require` here because we only want to import the package\n    // in development mode.\n    if (process.env.NODE_ENV === 'development') {\n        const whyDidYouRender = require('@welldone-software/why-did-you-render');\n\n        whyDidYouRender(React, {\n            collapseGroups: true,\n        });\n    }\n\n    ReactDOM.render(\n        <OrderConfirmationApp\n            containerId={containerId}\n            publicPath={configuredPublicPath}\n            {...props}\n        />,\n        document.getElementById(containerId),\n    );\n}\n","import { createRequestSender, RequestSender } from '@bigcommerce/request-sender';\n\nimport { CreatedCustomer, CreatedCustomerResponse } from './CreatedCustomer';\n\nexport interface CustomerCreateRequestBody {\n    confirmPassword: string;\n    newsletter: boolean;\n    orderId: number;\n    password: string;\n}\n\nexport default class AccountService {\n    constructor(private requestSender: RequestSender = createRequestSender()) {}\n\n    create(body: CustomerCreateRequestBody): Promise<CreatedCustomer> {\n        return this.requestSender\n            .put<CreatedCustomerResponse>('/internalapi/v1/checkout/customer', { body })\n            .then((response) => response.body.data.customer);\n    }\n}\n","import { FieldProps } from 'formik';\nimport React, { FunctionComponent, memo, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { FormField, TextInput } from '../ui/form';\n\nexport interface PasswordField {\n    minLength: number;\n}\n\nconst SignUpPasswordField: FunctionComponent<PasswordField> = ({ minLength }) => {\n    const renderPasswordInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const renderPasswordConfirmationInput = useCallback(\n        ({ field }: FieldProps<string>) => <TextInput {...field} id={field.name} type=\"password\" />,\n        [],\n    );\n\n    const passwordLabelContent = useMemo(\n        () => (\n            <>\n                <TranslatedString id=\"customer.password_label\" />{' '}\n                <small>\n                    {`${minLength}-`}\n                    <TranslatedString id=\"customer.password_minimum_character_label\" />\n                </small>\n            </>\n        ),\n        [minLength],\n    );\n\n    const passwordConfirmationLabelContent = useMemo(\n        () => <TranslatedString id=\"customer.password_confirmation_label\" />,\n        [],\n    );\n\n    return (\n        <>\n            <FormField\n                input={renderPasswordInput}\n                labelContent={passwordLabelContent}\n                name=\"password\"\n            />\n\n            <FormField\n                input={renderPasswordConfirmationInput}\n                labelContent={passwordConfirmationLabelContent}\n                name=\"confirmPassword\"\n            />\n        </>\n    );\n};\n\nexport default memo(SignUpPasswordField);\n","import { FormikProps, withFormik } from 'formik';\nimport React, { FunctionComponent, memo } from 'react';\nimport { object, ref, string } from 'yup';\n\nimport { TranslatedString, withLanguage, WithLanguageProps } from '@bigcommerce/checkout/locale';\n\nimport { PasswordRequirements } from '../customer';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { Fieldset, Form, Legend } from '../ui/form';\n\nimport SignUpPasswordField from './SignUpPasswordField';\n\nexport interface SignUpFormProps {\n    isSigningUp?: boolean;\n    customerCanBeCreated: boolean;\n    passwordRequirements: PasswordRequirements;\n    onSignUp(data: SignUpFormValues): void;\n}\n\nexport interface SignUpFormValues {\n    password: string;\n    confirmPassword: string;\n}\n\nconst GuestSignUpForm: FunctionComponent<\n    SignUpFormProps & WithLanguageProps & FormikProps<SignUpFormValues>\n> = ({ isSigningUp, customerCanBeCreated, passwordRequirements: { minLength } }) => (\n    <Fieldset\n        legend={\n            <Legend>\n                <TranslatedString\n                    id={\n                        customerCanBeCreated\n                            ? 'customer.create_account_text'\n                            : 'customer.set_password_text'\n                    }\n                />\n            </Legend>\n        }\n    >\n        {!customerCanBeCreated && (\n            <p>\n                <TranslatedString id=\"customer.account_created_text\" />\n            </p>\n        )}\n\n        <Form className=\"guest-signup form\">\n            <SignUpPasswordField minLength={minLength} />\n\n            <div className=\"form-actions\">\n                <Button\n                    id=\"createAccountButton\"\n                    isLoading={isSigningUp}\n                    type=\"submit\"\n                    variant={ButtonVariant.Primary}\n                >\n                    <TranslatedString\n                        id={\n                            customerCanBeCreated\n                                ? 'customer.create_account_action'\n                                : 'customer.set_password_action'\n                        }\n                    />\n                </Button>\n            </div>\n        </Form>\n    </Fieldset>\n);\n\nexport default withLanguage(\n    withFormik<SignUpFormProps & WithLanguageProps, SignUpFormValues>({\n        mapPropsToValues: () => ({\n            password: '',\n            confirmPassword: '',\n        }),\n        handleSubmit: (values, { props: { onSignUp } }) => {\n            onSignUp(values);\n        },\n        validationSchema: ({\n            language,\n            passwordRequirements: { description, numeric, alpha, minLength },\n        }: SignUpFormProps & WithLanguageProps) =>\n            object({\n                password: string()\n                    .required(description || language.translate('customer.password_required_error'))\n                    .matches(\n                        numeric,\n                        description ||\n                            language.translate('customer.password_number_required_error'),\n                    )\n                    .matches(\n                        alpha,\n                        description ||\n                            language.translate('customer.password_letter_required_error'),\n                    )\n                    .min(\n                        minLength,\n                        description ||\n                            language.translate('customer.password_under_minimum_length_error'),\n                    )\n                    .max(100, language.translate('customer.password_over_maximum_length_error')),\n                confirmPassword: string()\n                    .required(language.translate('customer.password_confirmation_required_error'))\n                    .oneOf(\n                        [ref('password')],\n                        language.translate('customer.password_confirmation_error'),\n                    ),\n            }),\n    })(memo(GuestSignUpForm)),\n);\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst PasswordSavedSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.set_password_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default PasswordSavedSuccessAlert;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { Alert, AlertType } from '../ui/alert';\n\nconst SignedUpSuccessAlert: FunctionComponent = () => (\n    <Alert type={AlertType.Success}>\n        <strong>\n            <TranslatedString id=\"customer.create_account_success\" />\n        </strong>\n    </Alert>\n);\n\nexport default SignedUpSuccessAlert;\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationRequirementsError extends CustomError {\n    constructor(data: Error, requirements: string) {\n        super({\n            name: 'ACCOUNT_CREATION_REQUIREMENTS_ERROR',\n            message: requirements,\n            title: getLanguageService().translate(\n                'customer.create_account_requirements_error_heading',\n            ),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationRequirementsError.prototype);\n    }\n}\n","import { getLanguageService } from '@bigcommerce/checkout/locale';\n\nimport { CustomError, setPrototypeOf } from '../../common/error';\n\nexport default class AccountCreationFailedError extends CustomError {\n    constructor(data: Error) {\n        super({\n            name: 'ACCOUNT_CREATION_FAILED',\n            message: getLanguageService().translate('customer.create_account_error'),\n            data,\n        });\n\n        setPrototypeOf(this, AccountCreationFailedError.prototype);\n    }\n}\n","import { GatewayOrderPayment, Order, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isGiftCertificatePayment } from '../giftCertificate';\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport interface PaymentInstructionsProps {\n    order: Order;\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return !isGiftCertificatePayment(payment) && !isStoreCreditPayment(payment);\n}\n\nfunction getPaymentInstructions(order: Order): string {\n    const gatewayPayment = (order.payments || []).find(isDefaultOrderPayment);\n    const instructions = gatewayPayment && gatewayPayment.detail.instructions;\n\n    return instructions || '';\n}\n\nexport default getPaymentInstructions;\n","import { GiftCertificate, OrderPayments } from '@bigcommerce/checkout-sdk';\n\nimport isGiftCertificatePayment from './isGiftCertificatePayment';\n\nexport default function mapFromPayments(payments: OrderPayments): GiftCertificate[] {\n    return payments.filter(isGiftCertificatePayment).map(({ amount, detail }) => ({\n        code: detail.code,\n        remaining: detail.remaining,\n        used: amount,\n        balance: amount + detail.remaining,\n        purchaseDate: '',\n    }));\n}\n","import { OrderPayment } from '@bigcommerce/checkout-sdk';\n\nimport { isStoreCreditPayment } from '../payment/storeCredit';\n\nexport default function getStoreCreditAmount(payments?: OrderPayment[]): number {\n    return (payments || [])\n        .filter(isStoreCreditPayment)\n        .reduce((total, payment) => total + payment.amount, 0);\n}\n","import { Order } from '@bigcommerce/checkout-sdk';\n\nimport { mapFromPayments } from '../giftCertificate';\n\nimport getOrderShippingCostAfterAutomaticDiscount from './getOrderShippingCostAfterAutomaticDiscount';\nimport getStoreCreditAmount from './getStoreCreditAmount';\nimport { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\n\nexport default function mapToOrderSummarySubtotalsProps({\n    baseAmount,\n    discountAmount,\n    isTaxIncluded,\n    shippingCostBeforeDiscount,\n    payments,\n    handlingCostTotal,\n    giftWrappingCostTotal,\n    coupons,\n    taxes,\n    fees,\n    consignments,\n}: Order,\nisShippingDiscountDisplayEnabled: boolean,\n): OrderSummarySubtotalsProps {\n\n    const shippingAmount = isShippingDiscountDisplayEnabled && consignments.shipping.length > 0\n    ? getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount, consignments.shipping)\n    : shippingCostBeforeDiscount;\n\n    return {\n        subtotalAmount: baseAmount,\n        shippingAmount,\n        shippingAmountBeforeDiscount: isShippingDiscountDisplayEnabled ? shippingCostBeforeDiscount : undefined,\n        giftWrappingAmount: giftWrappingCostTotal,\n        discountAmount,\n        storeCreditAmount: getStoreCreditAmount(payments),\n        handlingAmount: handlingCostTotal,\n        coupons,\n        giftCertificates: payments && mapFromPayments(payments),\n        taxes,\n        isTaxIncluded,\n        fees,\n    };\n}\n","import { OrderShippingConsignment } from \"@bigcommerce/checkout-sdk\";\n\nexport default function getOrderShippingCostAfterAutomaticDiscount(shippingCostBeforeDiscount: number, consignments: OrderShippingConsignment[]) {\n    return consignments.reduce((total, consignment) => {\n        return total - getTotalAutomaticDiscount(consignment);\n    }, shippingCostBeforeDiscount);\n}\n\nfunction getTotalAutomaticDiscount(consignment: OrderShippingConsignment) {\n    return consignment.discounts\n    .filter(discount => !discount.code)\n    .reduce((total, discount) => total + discount.amount, 0);\n}\n","import React, { FunctionComponent } from 'react';\n\nconst OrderConfirmationSection: FunctionComponent = ({ children }) => (\n    <section className=\"orderConfirmation-section\">{children}</section>\n);\n\nexport default OrderConfirmationSection;\n","import React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nexport interface MandateTextComponentProps {\n    mandateText: {\n        [key: string]: string;\n    },\n    methodId: string;\n    providerId: string;\n}\n\nexport const MandateTextComponent: FunctionComponent<MandateTextComponentProps> = ({\n    mandateText,\n    providerId,\n    methodId,\n}) => {\n    if (!Object.keys(mandateText).length) {\n        return null;\n    }\n\n    return (\n        <ul data-test='order-confirmation-mandate-text-list'>\n            {Object.entries(mandateText).map((field, index) => {\n                return (\n                    <li data-test={`order-confirmation-mandate-text-list-item-${index}`} key={index}>\n                        <TranslatedString\n                            id={`order_confirmation.mandate.${providerId}.${methodId}.${field[0]}`}\n                        />:\n                        <b>\n                            {` ${field[1]}`}\n                        </b>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}\n","import { GatewayOrderPayment } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { MandateTextComponent } from './MandateTextComponent';\n\nexport interface PaymentsWithMandatesProps {\n    paymentsWithMandates: GatewayOrderPayment[];\n}\n\nexport const PaymentsWithMandates: FunctionComponent<PaymentsWithMandatesProps> = ({\n    paymentsWithMandates,\n}) => <>\n    {paymentsWithMandates.map((payment) => {\n        if (payment?.mandate?.url) {\n            return (\n                <a\n                    data-test=\"order-confirmation-mandate-link-text\"\n                    href={payment.mandate.url}\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                >\n                    <TranslatedString\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </a>\n            );\n        } else if (payment?.mandate?.id) {\n            return (\n                <p\n                    data-test=\"order-confirmation-mandate-id-text\"\n                    key={`${payment.providerId}-${payment.methodId}-mandate`}\n                >\n                    <TranslatedString\n                        data={{ mandate: payment.mandate.id }}\n                        id={`order_confirmation.mandate.${payment.providerId}.${payment.methodId}`}\n                    />\n                </p>\n            );\n        } else if (payment?.mandate?.mandateText && payment.methodId) {\n            return <MandateTextComponent\n                key='mandateTextList'\n                mandateText={payment.mandate.mandateText}\n                methodId={payment.methodId}\n                providerId={payment.providerId}\n            />\n        }\n    })}\n</>\n","import { GatewayOrderPayment, GiftCertificateOrderPayment, Order, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedHtml } from '@bigcommerce/checkout/locale';\n\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport { PaymentsWithMandates } from './PaymentsWithMandates';\n\nexport interface OrderStatusProps {\n    config: StoreConfig;\n    supportEmail: string;\n    supportPhoneNumber?: string;\n    order: Order;\n}\n\ntype PaymentWithMandate = GatewayOrderPayment &\n    Required<Pick<GatewayOrderPayment, 'mandate' | 'methodId'>>;\n\nconst isPaymentWithMandate = (\n    payment: GatewayOrderPayment | GiftCertificateOrderPayment,\n): payment is PaymentWithMandate => !!payment.methodId && 'mandate' in payment && !!payment.mandate;\n\nconst OrderStatus: FunctionComponent<OrderStatusProps> = ({\n    config,\n    order,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    const paymentsWithMandates = order.payments?.filter(isPaymentWithMandate) || [];\n\n    return (\n        <OrderConfirmationSection>\n            {order.orderId && (\n                <p data-test=\"order-confirmation-order-number-text\">\n                    <TranslatedHtml\n                        data={{ orderNumber: order.orderId }}\n                        id=\"order_confirmation.order_number_text\"\n                    />\n                </p>\n            )}\n\n            <p data-test=\"order-confirmation-order-status-text\">\n                <OrderStatusMessage\n                    config={config}\n                    orderNumber={order.orderId}\n                    orderStatus={order.status}\n                    supportEmail={supportEmail}\n                    supportPhoneNumber={supportPhoneNumber}\n                />\n            </p>\n            <PaymentsWithMandates\n                paymentsWithMandates={paymentsWithMandates}\n            />\n            {order.hasDigitalItems && (\n                <p data-test=\"order-confirmation-digital-items-text\">\n                    <TranslatedHtml\n                        id={\n                            order.isDownloadable\n                                ? 'order_confirmation.order_with_downloadable_digital_items_text'\n                                : 'order_confirmation.order_without_downloadable_digital_items_text'\n                        }\n                    />\n                </p>\n            )}\n        </OrderConfirmationSection>\n    );\n};\n\ninterface OrderStatusMessageProps {\n    config: StoreConfig;\n    orderNumber: number;\n    orderStatus: string;\n    supportEmail?: string;\n    supportPhoneNumber?: string;\n}\n\nconst OrderStatusMessage: FunctionComponent<OrderStatusMessageProps> = ({\n    config,\n    orderNumber,\n    orderStatus,\n    supportEmail,\n    supportPhoneNumber,\n}) => {\n    switch (orderStatus) {\n        case 'MANUAL_VERIFICATION_REQUIRED':\n        case 'AWAITING_PAYMENT':\n            return <TranslatedHtml id=\"order_confirmation.order_pending_review_text\" />;\n\n        case 'PENDING':\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_pending_status_text\"\n                />\n            );\n\n        case 'INCOMPLETE':\n            if (config.checkoutSettings.features['CHECKOUT-6891.update_incomplete_order_wording_on_order_confirmation_page']) {\n                return (\n                    <TranslatedHtml\n                        data={{ orderNumber, supportEmail }}\n                        id=\"order_confirmation.order_pending_status_text\"\n                    />\n                );\n            }\n\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail }}\n                    id=\"order_confirmation.order_incomplete_status_text\"\n                />\n            );\n\n        default:\n            return (\n                <TranslatedHtml\n                    data={{ orderNumber, supportEmail, supportPhoneNumber }}\n                    id={\n                        supportPhoneNumber\n                            ? 'order_confirmation.order_with_support_number_text'\n                            : 'order_confirmation.order_without_support_number_text'\n                    }\n                />\n            );\n    }\n};\n\nexport default memo(OrderStatus);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPrint: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconPrint);\n","import { throttle } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { IconPrint } from '../ui/icon';\n\nexport interface PrintLinkProps {\n    className?: string;\n}\n\nconst PRINT_MODAL_THROTTLE = 500;\n\nconst PrintLink: FunctionComponent<PrintLinkProps> = ({ className }) => {\n    const handleClick = useCallback(\n        throttle(() => {\n            window.print();\n        }, PRINT_MODAL_THROTTLE),\n        [],\n    );\n\n    if (typeof window.print !== 'function') {\n        return null;\n    }\n\n    return (\n        <a\n            className={className || 'cart-header-link'}\n            href=\"#\"\n            id=\"cart-print-link\"\n            onClick={preventDefault(handleClick)}\n        >\n            <IconPrint /> <TranslatedString id=\"cart.print_action\" />\n        </a>\n    );\n};\n\nexport default memo(PrintLink);\n","import React, { FunctionComponent } from 'react';\n\nexport interface HeaderProps {\n    testId?: string;\n}\n\nconst PrimaryHeader: FunctionComponent<HeaderProps> = ({ children, testId }) => (\n    <h1 className=\"optimizedCheckout-headingPrimary\" data-test={testId}>\n        {children}\n    </h1>\n);\n\nexport default PrimaryHeader;\n","import React, { FunctionComponent, memo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport { PrimaryHeader } from '../ui/header';\n\nexport interface HeaderProps {\n    name?: string;\n}\n\nconst ThankYouHeader: FunctionComponent<HeaderProps> = ({ name }) => (\n    <PrimaryHeader testId=\"order-confirmation-heading\">\n        {name && (\n            <TranslatedString data={{ name }} id=\"order_confirmation.thank_you_customer_heading\" />\n        )}\n\n        {!name && <TranslatedString id=\"order_confirmation.thank_you_heading\" />}\n    </PrimaryHeader>\n);\n\nexport default memo(ThankYouHeader);\n","import {\n    CheckoutSelectors,\n    EmbeddedCheckoutMessenger,\n    EmbeddedCheckoutMessengerOptions,\n    Order,\n    ShopperConfig,\n    StoreConfig,\n} from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport DOMPurify from 'dompurify';\nimport React, { Component, lazy, ReactNode } from 'react';\n\nimport { AnalyticsContextProps } from '@bigcommerce/checkout/analytics';\nimport { ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\nimport { CheckoutContextProps } from '@bigcommerce/checkout/payment-integration-api';\nimport { LazyContainer, LoadingSpinner } from '@bigcommerce/checkout/ui';\n\nimport { withAnalytics } from '../analytics';\nimport { withCheckout } from '../checkout';\nimport { ErrorModal } from '../common/error';\nimport { isExperimentEnabled, retry } from '../common/utility';\nimport { getPasswordRequirementsFromConfig } from '../customer';\nimport { EmbeddedCheckoutStylesheet, isEmbedded } from '../embeddedCheckout';\nimport {\n    CreatedCustomer,\n    GuestSignUpForm,\n    PasswordSavedSuccessAlert,\n    SignedUpSuccessAlert,\n    SignUpFormValues,\n} from '../guestSignup';\nimport {\n    AccountCreationFailedError,\n    AccountCreationRequirementsError,\n} from '../guestSignup/errors';\nimport { Button, ButtonVariant } from '../ui/button';\nimport { MobileView } from '../ui/responsive';\n\nimport getPaymentInstructions from './getPaymentInstructions';\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\nimport OrderConfirmationSection from './OrderConfirmationSection';\nimport OrderStatus from './OrderStatus';\nimport PrintLink from './PrintLink';\nimport ThankYouHeader from './ThankYouHeader';\n\nconst OrderSummary = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary\" */\n                './OrderSummary'\n            ),\n    ),\n);\n\nconst OrderSummaryDrawer = lazy(() =>\n    retry(\n        () =>\n            import(\n                /* webpackChunkName: \"order-summary-drawer\" */\n                './OrderSummaryDrawer'\n            ),\n    ),\n);\n\nexport interface OrderConfirmationState {\n    error?: Error;\n    hasSignedUp?: boolean;\n    isSigningUp?: boolean;\n}\n\nexport interface OrderConfirmationProps {\n    containerId: string;\n    embeddedStylesheet: EmbeddedCheckoutStylesheet;\n    errorLogger: ErrorLogger;\n    orderId: number;\n    createAccount(values: SignUpFormValues): Promise<CreatedCustomer>;\n    createEmbeddedMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger;\n}\n\ninterface WithCheckoutOrderConfirmationProps {\n    order?: Order;\n    config?: StoreConfig;\n    loadOrder(orderId: number): Promise<CheckoutSelectors>;\n    isLoadingOrder(): boolean;\n}\n\nclass OrderConfirmation extends Component<\n    OrderConfirmationProps & WithCheckoutOrderConfirmationProps & AnalyticsContextProps,\n    OrderConfirmationState\n> {\n    state: OrderConfirmationState = {};\n\n    private embeddedMessenger?: EmbeddedCheckoutMessenger;\n\n    componentDidMount(): void {\n        const {\n            containerId,\n            createEmbeddedMessenger,\n            embeddedStylesheet,\n            loadOrder,\n            orderId,\n            analyticsTracker\n        } = this.props;\n\n        loadOrder(orderId)\n            .then(({ data }) => {\n                const { links: { siteLink = '' } = {} } = data.getConfig() || {};\n                const messenger = createEmbeddedMessenger({ parentOrigin: siteLink });\n\n                this.embeddedMessenger = messenger;\n\n                messenger.receiveStyles((styles) => embeddedStylesheet.append(styles));\n                messenger.postFrameLoaded({ contentId: containerId });\n\n                analyticsTracker.orderPurchased();\n            })\n            .catch(this.handleUnhandledError);\n    }\n\n    render(): ReactNode {\n        const { order, config, isLoadingOrder } = this.props;\n\n        if (!order || !config || isLoadingOrder()) {\n            return <LoadingSpinner isLoading={true} />;\n        }\n\n        const paymentInstructions = getPaymentInstructions(order);\n        const {\n            storeProfile: { orderEmail, storePhoneNumber },\n            shopperConfig,\n            links: { siteLink },\n        } = config;\n\n        return (\n            <div\n                className={classNames('layout optimizedCheckout-contentPrimary', {\n                    'is-embedded': isEmbedded(),\n                })}\n            >\n                <div className=\"layout-main\">\n                    <div className=\"orderConfirmation\">\n                        <ThankYouHeader name={order.billingAddress.firstName} />\n\n                        <OrderStatus\n                            config={config}\n                            order={order}\n                            supportEmail={orderEmail}\n                            supportPhoneNumber={storePhoneNumber}\n                        />\n\n                        {paymentInstructions && (\n                            <OrderConfirmationSection>\n                                <div\n                                    dangerouslySetInnerHTML={{\n                                        __html: DOMPurify.sanitize(paymentInstructions),\n                                    }}\n                                    data-test=\"payment-instructions\"\n                                />\n                            </OrderConfirmationSection>\n                        )}\n\n                        {this.renderGuestSignUp({\n                            shouldShowPasswordForm: order.customerCanBeCreated,\n                            customerCanBeCreated: !order.customerId,\n                            shopperConfig,\n                        })}\n\n                        <div className=\"continueButtonContainer\">\n                            <form action={siteLink} method=\"get\" target=\"_top\">\n                                <Button type=\"submit\" variant={ButtonVariant.Secondary}>\n                                    <TranslatedString id=\"order_confirmation.continue_shopping\" />\n                                </Button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n\n                {this.renderOrderSummary()}\n                {this.renderErrorModal()}\n            </div>\n        );\n    }\n\n    private renderGuestSignUp({\n        customerCanBeCreated,\n        shouldShowPasswordForm,\n        shopperConfig,\n    }: {\n        customerCanBeCreated: boolean;\n        shouldShowPasswordForm: boolean;\n        shopperConfig: ShopperConfig;\n    }): ReactNode {\n        const { isSigningUp, hasSignedUp } = this.state;\n\n        const { order } = this.props;\n\n        return (\n            <>\n                {shouldShowPasswordForm && !hasSignedUp && (\n                    <GuestSignUpForm\n                        customerCanBeCreated={customerCanBeCreated}\n                        isSigningUp={isSigningUp}\n                        onSignUp={this.handleSignUp}\n                        passwordRequirements={getPasswordRequirementsFromConfig(shopperConfig)}\n                    />\n                )}\n\n                {hasSignedUp &&\n                    (order?.customerId ? <PasswordSavedSuccessAlert /> : <SignedUpSuccessAlert />)}\n            </>\n        );\n    }\n\n    private renderOrderSummary(): ReactNode {\n        const { order, config } = this.props;\n\n        if (!order || !config) {\n            return null;\n        }\n\n        const { currency, shopperCurrency, checkoutSettings } = config;\n\n        const isShippingDiscountDisplayEnabled = isExperimentEnabled(\n            checkoutSettings,\n            'PROJECT-6643.enable_shipping_discounts_in_orders',\n        );\n\n        return (\n            <MobileView>\n                {(matched) => {\n                    if (matched) {\n                        return (\n                            <LazyContainer>\n                                <OrderSummaryDrawer\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    headerLink={\n                                        <PrintLink className=\"modal-header-link cart-modal-link\" />\n                                    }\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        );\n                    }\n\n                    return (\n                        <aside className=\"layout-cart\">\n                            <LazyContainer>\n                                <OrderSummary\n                                    headerLink={<PrintLink />}\n                                    {...mapToOrderSummarySubtotalsProps(order, isShippingDiscountDisplayEnabled)}\n                                    lineItems={order.lineItems}\n                                    shopperCurrency={shopperCurrency}\n                                    storeCurrency={currency}\n                                    total={order.orderAmount}\n                                />\n                            </LazyContainer>\n                        </aside>\n                    );\n                }}\n            </MobileView>\n        );\n    }\n\n    private renderErrorModal(): ReactNode {\n        const { error } = this.state;\n\n        return (\n            <ErrorModal\n                error={error}\n                onClose={this.handleErrorModalClose}\n                shouldShowErrorCode={false}\n            />\n        );\n    }\n\n    private handleErrorModalClose: () => void = () => {\n        this.setState({ error: undefined });\n    };\n\n    private handleSignUp: (values: SignUpFormValues) => void = ({ password, confirmPassword }) => {\n        const { createAccount, config } = this.props;\n\n        const shopperConfig = config && config.shopperConfig;\n        const passwordRequirements =\n            (shopperConfig &&\n                shopperConfig.passwordRequirements &&\n                shopperConfig.passwordRequirements.error) ||\n            '';\n\n        this.setState({\n            isSigningUp: true,\n        });\n\n        createAccount({\n            password,\n            confirmPassword,\n        })\n            .then(() => {\n                this.setState({\n                    hasSignedUp: true,\n                    isSigningUp: false,\n                });\n            })\n            .catch((error) => {\n                this.setState({\n                    error:\n                        error.status < 500\n                            ? new AccountCreationRequirementsError(error, passwordRequirements)\n                            : new AccountCreationFailedError(error),\n                    hasSignedUp: false,\n                    isSigningUp: false,\n                });\n            });\n    };\n\n    private handleUnhandledError: (error: Error) => void = (error) => {\n        const { errorLogger } = this.props;\n\n        this.setState({ error });\n        errorLogger.log(error);\n\n        if (this.embeddedMessenger) {\n            this.embeddedMessenger.postError(error);\n        }\n    };\n}\n\nexport function mapToOrderConfirmationProps(\n    context: CheckoutContextProps,\n): WithCheckoutOrderConfirmationProps | null {\n    const {\n        checkoutState: {\n            data: { getOrder, getConfig },\n            statuses: { isLoadingOrder },\n        },\n        checkoutService,\n    } = context;\n\n    const config = getConfig();\n    const order = getOrder();\n\n    return {\n        config,\n        isLoadingOrder,\n        loadOrder: checkoutService.loadOrder,\n        order,\n    };\n}\n\nexport default withAnalytics(withCheckout(mapToOrderConfirmationProps)(OrderConfirmation));\n","import { createCheckoutService, createEmbeddedCheckoutMessenger } from '@bigcommerce/checkout-sdk';\nimport { BrowserOptions } from '@sentry/browser';\nimport React, { Component, ReactNode } from 'react';\nimport ReactModal from 'react-modal';\n\nimport { AnalyticsProvider } from '@bigcommerce/checkout/analytics';\nimport { ExtensionProvider } from '@bigcommerce/checkout/checkout-extension';\nimport { ErrorBoundary, ErrorLogger } from '@bigcommerce/checkout/error-handling-utils';\nimport { getLanguageService, LocaleProvider } from '@bigcommerce/checkout/locale';\nimport { CheckoutProvider } from '@bigcommerce/checkout/payment-integration-api';\n\nimport '../../scss/App.scss';\n\nimport { createErrorLogger } from '../common/error';\nimport { createEmbeddedCheckoutStylesheet } from '../embeddedCheckout';\nimport { AccountService, CreatedCustomer, SignUpFormValues } from '../guestSignup';\n\nimport OrderConfirmation from './OrderConfirmation';\n\nexport interface OrderConfirmationAppProps {\n    containerId: string;\n    orderId: number;\n    publicPath?: string;\n    sentryConfig?: BrowserOptions;\n    sentrySampleRate?: number;\n}\n\nclass OrderConfirmationApp extends Component<OrderConfirmationAppProps> {\n    private accountService = new AccountService();\n    private checkoutService = createCheckoutService({\n        locale: getLanguageService().getLocale(),\n        shouldWarnMutation: process.env.NODE_ENV === 'development',\n    });\n    private embeddedStylesheet = createEmbeddedCheckoutStylesheet();\n    private errorLogger: ErrorLogger;\n\n    constructor(props: Readonly<OrderConfirmationAppProps>) {\n        super(props);\n\n        this.errorLogger = createErrorLogger(\n            { sentry: props.sentryConfig },\n            {\n                errorTypes: ['UnrecoverableError'],\n                publicPath: props.publicPath,\n                sampleRate: props.sentrySampleRate ? props.sentrySampleRate : 0.1,\n            },\n        );\n    }\n\n    componentDidMount(): void {\n        const { containerId } = this.props;\n\n        ReactModal.setAppElement(`#${containerId}`);\n    }\n\n    render(): ReactNode {\n        return (\n            <ErrorBoundary logger={this.errorLogger}>\n                <LocaleProvider checkoutService={this.checkoutService}>\n                    <CheckoutProvider checkoutService={this.checkoutService}>\n                        <AnalyticsProvider checkoutService={this.checkoutService}>\n                            <ExtensionProvider checkoutService={this.checkoutService} errorLogger={createErrorLogger()}>\n                                <OrderConfirmation\n                                    {...this.props}\n                                    createAccount={this.createAccount}\n                                    createEmbeddedMessenger={createEmbeddedCheckoutMessenger}\n                                    embeddedStylesheet={this.embeddedStylesheet}\n                                    errorLogger={this.errorLogger}\n                                />\n                            </ExtensionProvider>\n                        </AnalyticsProvider>\n                    </CheckoutProvider>\n                </LocaleProvider>\n            </ErrorBoundary>\n        );\n    }\n\n    private createAccount: (values: SignUpFormValues) => Promise<CreatedCustomer> = ({\n        password,\n        confirmPassword,\n    }) => {\n        const { orderId } = this.props;\n\n        return this.accountService.create({\n            orderId,\n            newsletter: false,\n            password,\n            confirmPassword,\n        });\n    };\n}\n\nexport default OrderConfirmationApp;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nexport default PaymentMethodId;\n","import { CheckoutPayment, OrderPayment } from '@bigcommerce/checkout-sdk';\n\nexport default function isStoreCreditPayment(payment: OrderPayment | CheckoutPayment): boolean {\n    return payment.providerId === 'storecredit';\n}\n","import { Consignment } from '@bigcommerce/checkout-sdk';\nimport { every } from 'lodash';\n\nexport default function hasSelectedShippingOptions(consignments: Consignment[]): boolean {\n    if (!consignments.length) {\n        return false;\n    }\n\n    return every(\n        consignments,\n        (consignment) =>\n            (consignment.selectedShippingOption && consignment.selectedShippingOption.id) ||\n            consignment.selectedShippingOption?.type === 'custom',\n    );\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconSuccess: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconSuccess);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconInfo: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconInfo);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, ReactNode } from 'react';\n\nimport { IconError, IconInfo, IconSuccess } from '../icon';\n\nexport interface AlertProps {\n    additionalClassName?: string;\n    icon?: ReactNode;\n    testId?: string;\n    type?: AlertType;\n}\n\nexport enum AlertType {\n    Error = 'error',\n    Info = 'info',\n    Success = 'success',\n    Warning = 'warning',\n}\n\nfunction renderDefaultIcon(type?: AlertType): ReactNode {\n    switch (type) {\n        case AlertType.Error:\n        case AlertType.Warning:\n            return <IconError />;\n\n        case AlertType.Success:\n            return <IconSuccess />;\n\n        case AlertType.Info:\n        default:\n            return <IconInfo />;\n    }\n}\n\nconst Alert: FunctionComponent<AlertProps> = ({\n    additionalClassName,\n    children,\n    icon,\n    testId,\n    type,\n}) => (\n    <div\n        className={classNames(\n            'alertBox',\n            additionalClassName,\n            { 'alertBox--info': type === AlertType.Info || !type },\n            { 'alertBox--error': type === AlertType.Error },\n            { 'alertBox--success': type === AlertType.Success },\n            { 'alertBox--warning': type === AlertType.Warning },\n        )}\n        data-test={testId}\n    >\n        <div className=\"alertBox-column alertBox-icon\">{icon || renderDefaultIcon(type)}</div>\n\n        <div aria-live=\"assertive\" className=\"alertBox-column alertBox-message\" role=\"alert\">\n            {children}\n        </div>\n    </div>\n);\n\nexport default Alert;\n","import classNames from 'classnames';\nimport React, { ButtonHTMLAttributes, FunctionComponent } from 'react';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n    isFullWidth?: boolean;\n    isLoading?: boolean;\n    size?: ButtonSize;\n    testId?: string;\n    variant?: ButtonVariant;\n}\n\nexport enum ButtonVariant {\n    Primary = 'primary',\n    Secondary = 'secondary',\n    Action = 'action',\n}\n\nexport enum ButtonSize {\n    Small = 'small',\n    Tiny = 'tiny',\n    Large = 'large',\n}\n\nfunction getClassName(\n    props: Pick<ButtonProps, 'className' | 'isFullWidth' | 'isLoading' | 'size' | 'variant'>,\n) {\n    const { className, isFullWidth, isLoading, size, variant } = props;\n\n    return classNames(\n        'button',\n        className,\n        { 'button--primary': variant === ButtonVariant.Primary },\n        { 'button--tertiary': variant === ButtonVariant.Secondary },\n        { 'button--action': variant === ButtonVariant.Action },\n        { 'button--small': size === ButtonSize.Small },\n        { 'button--tiny': size === ButtonSize.Tiny },\n        { 'button--large': size === ButtonSize.Large },\n        { 'button--slab': isFullWidth },\n        {\n            'optimizedCheckout-buttonPrimary':\n                variant === ButtonVariant.Primary || variant === ButtonVariant.Action,\n        },\n        { 'optimizedCheckout-buttonSecondary': variant === ButtonVariant.Secondary },\n        { 'is-loading': isLoading },\n    );\n}\n\nconst Button: FunctionComponent<ButtonProps> = ({\n    children,\n    className,\n    disabled,\n    isFullWidth,\n    isLoading,\n    size,\n    testId,\n    type,\n    variant,\n    ...rest\n}) => (\n    <button\n        {...rest}\n        className={getClassName({ className, isFullWidth, isLoading, size, variant })}\n        data-test={testId}\n        disabled={disabled || isLoading}\n        type={type || 'button'}\n    >\n        {children}\n    </button>\n);\n\nexport default Button;\n","import { Field, FieldConfig, FieldProps, getIn } from 'formik';\nimport { isDate, noop } from 'lodash';\nimport React, {\n    Component,\n    createElement,\n    FunctionComponent,\n    memo,\n    useCallback,\n    useMemo,\n} from 'react';\nimport shallowEqual from 'shallowequal';\n\nimport FormFieldContainer from './FormFieldContainer';\n\nexport interface BasicFormFieldProps extends FieldConfig {\n    additionalClassName?: string;\n    className?: string;\n    testId?: string;\n    onChange?(value: any): void;\n}\n\nconst BasicFormField: FunctionComponent<BasicFormFieldProps> = ({\n    additionalClassName,\n    className,\n    component,\n    render,\n    testId,\n    onChange,\n    ...rest\n}) => {\n    const renderInnerField = useCallback(\n        (props: FieldProps) => (\n            <InnerField\n                {...props}\n                additionalClassName={additionalClassName}\n                className={className}\n                component={component}\n                onChange={onChange}\n                render={render}\n                testId={testId}\n            />\n        ),\n        [additionalClassName, className, component, render, testId, onChange],\n    );\n\n    return <Field {...rest} render={renderInnerField} />;\n};\n\ntype InnerFieldProps = Omit<BasicFormFieldProps, keyof FieldConfig> & InnerFieldInputProps;\n\nconst InnerField: FunctionComponent<InnerFieldProps> = memo(\n    ({ additionalClassName, component, field, form, onChange, render, testId }) => {\n        const input = useMemo(\n            () => (\n                <InnerFieldInput\n                    component={component}\n                    field={field}\n                    form={form}\n                    onChange={onChange}\n                    render={render}\n                />\n            ),\n            [field, form, onChange, component, render],\n        );\n\n        return (\n            <FormFieldContainer\n                additionalClassName={additionalClassName}\n                hasError={getIn(form.errors, field.name)}\n                testId={testId}\n            >\n                {input}\n            </FormFieldContainer>\n        );\n    },\n    (\n        { form: prevForm, field: prevField, ...prevProps },\n        { form: nextForm, field: nextField, ...nextProps },\n    ) =>\n        shallowEqual(prevProps, nextProps) &&\n        shallowEqual(prevForm, nextForm) &&\n        shallowEqual(prevField, nextField),\n);\n\ntype InnerFieldInputProps = FieldProps &\n    Pick<FieldConfig, 'component' | 'render'> & {\n        onChange?(value: string): void;\n    };\n\nclass InnerFieldInput extends Component<InnerFieldInputProps> {\n    componentDidUpdate({ field: prevField }: InnerFieldInputProps) {\n        const {\n            field: { value },\n            onChange = noop,\n        } = this.props;\n        const comparableValue = isDate(value) ? value.getTime() : value;\n        const comparablePrevValue = isDate(prevField.value)\n            ? prevField.value.getTime()\n            : prevField.value;\n\n        if (comparableValue !== comparablePrevValue) {\n            onChange(value);\n        }\n    }\n\n    render() {\n        const { component = 'input', field, render } = this.props;\n\n        if (render) {\n            return (render as any)(this.props);\n        }\n\n        if (typeof component === 'string') {\n            return createElement(component as any, field);\n        }\n\n        return createElement(component as any, this.props);\n    }\n}\n\nexport default memo(BasicFormField);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport CheckboxInput from './CheckboxInput';\nimport FormFieldError from './FormFieldError';\n\nexport interface CheckboxFormFieldProps {\n    additionalClassName?: string;\n    disabled?: boolean;\n    name: string;\n    id?: string;\n    labelContent: ReactNode;\n    onChange?(isChecked: boolean): void;\n    testId?: string;\n}\n\nconst CheckboxFormField: FunctionComponent<CheckboxFormFieldProps> = ({\n    additionalClassName,\n    disabled = false,\n    labelContent,\n    onChange,\n    name,\n    id,\n    testId,\n}) => {\n    const renderField = useCallback(\n        ({ field }: FieldProps) => (\n            <>\n                <CheckboxInput\n                    {...field}\n                    checked={!!field.value}\n                    disabled={disabled}\n                    id={id || field.name}\n                    label={labelContent}\n                    testId={testId}\n                />\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n            </>\n        ),\n        [disabled, id, labelContent, name],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(CheckboxFormField);\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface CheckboxInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst CheckboxInput = forwardRef(\n    (\n        { additionalClassName, label, id, testId, ...rest }: CheckboxInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                className={classNames(\n                    'form-checkbox',\n                    'optimizedCheckout-form-checkbox',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                testId={testId}\n                type=\"checkbox\"\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default CheckboxInput;\n","import classNames from 'classnames';\nimport React, { forwardRef, ReactNode, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\nimport Label from './Label';\n\nexport interface RadioInputProps extends InputProps {\n    additionalClassName?: string;\n    label: ReactNode;\n    value: string;\n    checked: boolean;\n}\n\nconst RadioInput = forwardRef(\n    (\n        { additionalClassName, label, value, checked, id, ...rest }: RadioInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <>\n            <Input\n                {...rest}\n                checked={checked}\n                className={classNames(\n                    'form-radio',\n                    'optimizedCheckout-form-radio',\n                    additionalClassName,\n                )}\n                id={id}\n                ref={ref}\n                type=\"radio\"\n                value={value}\n            />\n            <Label htmlFor={id}>{label}</Label>\n        </>\n    ),\n);\n\nexport default RadioInput;\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { isDate, noop } from 'lodash';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\nimport ReactDatePicker from 'react-datepicker';\n\nimport { withDate, WithDateProps } from '@bigcommerce/checkout/locale';\n\nimport { IconChevronDown } from '../icon';\n\nimport CheckboxInput from './CheckboxInput';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport { InputProps } from './Input';\nimport RadioInput from './RadioInput';\nimport TextArea from './TextArea';\nimport TextInput from './TextInput';\n\nexport interface DynamicInputProps extends InputProps {\n    id: string;\n    additionalClassName?: string;\n    value?: string | string[];\n    rows?: number;\n    fieldType?: DynamicFormFieldType;\n    options?: FormFieldItem[];\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst DynamicInput: FunctionComponent<DynamicInputProps & WithDateProps> = ({\n    additionalClassName,\n    date,\n    fieldType,\n    id,\n    name,\n    onChange = noop,\n    options,\n    placeholder,\n    isFloatingLabelEnabled,\n    value,\n    ...rest\n}) => {\n    const { inputFormat } = date;\n    const handleDateChange = useCallback(\n        (dateValue, event) =>\n            onChange({\n                ...event,\n                target: {\n                    name,\n                    value: dateValue,\n                },\n            }),\n        [onChange, name],\n    );\n\n    switch (fieldType) {\n        case DynamicFormFieldType.dropdown:\n            return (\n                <>\n                    <div\n                        className={classNames(\n                            { 'dropdown-chevron': !isFloatingLabelEnabled },\n                            { 'floating-select-chevron': isFloatingLabelEnabled },\n                        )}>\n                        <IconChevronDown />\n                    </div>\n                    <select\n                        {...(rest as any)}\n                        className={classNames(\n                            { 'floating-select': isFloatingLabelEnabled },\n                            'form-select optimizedCheckout-form-select',\n                        )}\n                        data-test={`${id}-select`}\n                        id={id}\n                        name={name}\n                        onChange={onChange}\n                        value={value === null ? '' : value}\n                    >\n                        {placeholder && <option value=\"\">{placeholder}</option>}\n                        {options &&\n                            options.map(({ label, value: optionValue }) => (\n                                <option key={optionValue} value={optionValue}>\n                                    {label}\n                                </option>\n                            ))}\n                    </select>\n                </>\n            );\n\n        case DynamicFormFieldType.radio:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <RadioInput\n                            {...rest}\n                            checked={optionValue === value}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-radio`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.checkbox:\n            if (!options || !options.length) {\n                return null;\n            }\n\n            return (\n                <>\n                    {options.map(({ label, value: optionValue }) => (\n                        <CheckboxInput\n                            {...rest}\n                            checked={Array.isArray(value) ? value.includes(optionValue) : false}\n                            id={`${id}-${optionValue}`}\n                            key={optionValue}\n                            label={label}\n                            name={name}\n                            onChange={onChange}\n                            testId={`${id}-${optionValue}-checkbox`}\n                            value={optionValue}\n                        />\n                    ))}\n                </>\n            );\n\n        case DynamicFormFieldType.date:\n            return (\n                <ReactDatePicker\n                    {...(rest as any)}\n                    autoComplete=\"off\"\n                    // FIXME: we can avoid this by simply using onChangeRaw, but it's not being triggered properly\n                    // https://github.com/Hacker0x01/react-datepicker/issues/1357\n                    // onChangeRaw={ rest.onChange }\n                    calendarClassName=\"optimizedCheckout-contentPrimary\"\n                    className={classNames('form-input optimizedCheckout-form-input', {\n                        'floating-input': isFloatingLabelEnabled,\n                    })}\n                    dateFormat={inputFormat}\n                    maxDate={rest.max ? new Date(`${rest.max}T00:00:00Z`) : undefined}\n                    minDate={rest.min ? new Date(`${rest.min}T00:00:00Z`) : undefined}\n                    name={name}\n                    onChange={handleDateChange}\n                    placeholderText={inputFormat.toUpperCase()}\n                    popperClassName=\"optimizedCheckout-contentPrimary\"\n                    selected={isDate(value) ? value : undefined}\n                />\n            );\n\n        case DynamicFormFieldType.multiline:\n            return (\n                <TextArea\n                    {...(rest as any)}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    testId={`${id}-text`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n\n        default:\n            return (\n                <TextInput\n                    {...rest}\n                    id={id}\n                    isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    name={name}\n                    onChange={onChange}\n                    placeholder={placeholder}\n                    testId={`${id}-${\n                        fieldType === DynamicFormFieldType.password ? 'password' : 'text'\n                    }`}\n                    type={fieldType}\n                    value={value}\n                />\n            );\n    }\n};\n\nexport default memo(withDate(DynamicInput));\n","import React, { FunctionComponent, memo, MouseEvent, useCallback } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './MultiCheckboxControl.scss';\n\nexport interface MultiCheckboxControlProps {\n    testId?: string;\n    onSelectedAll(): void;\n    onSelectedNone(): void;\n}\n\nconst MultiCheckboxControl: FunctionComponent<MultiCheckboxControlProps> = ({\n    testId,\n    onSelectedAll,\n    onSelectedNone,\n}) => {\n    const handleSelectAllClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedAll();\n        },\n        [onSelectedAll],\n    );\n\n    const handleSelectNoneClick = useCallback(\n        (event: MouseEvent) => {\n            event.preventDefault();\n            onSelectedNone();\n        },\n        [onSelectedNone],\n    );\n\n    return (\n        <ul className=\"multiCheckbox--controls\">\n            <li className=\"multiCheckbox--control\">\n                <TranslatedString id=\"address.select\" />\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-all-button`}\n                    href=\"#\"\n                    onClick={handleSelectAllClick}\n                >\n                    <TranslatedString id=\"address.select_all\" />\n                </a>\n            </li>\n\n            <li className=\"multiCheckbox--control\">\n                <a\n                    data-test={`${testId}Checkbox-none-button`}\n                    href=\"#\"\n                    onClick={handleSelectNoneClick}\n                >\n                    <TranslatedString id=\"address.select_none\" />\n                </a>\n            </li>\n        </ul>\n    );\n};\n\nexport default memo(MultiCheckboxControl);\n","import { FormFieldItem } from '@bigcommerce/checkout-sdk';\nimport { FieldArray, FieldArrayRenderProps, getIn } from 'formik';\nimport { difference, kebabCase, noop, pick } from 'lodash';\nimport React, { ChangeEvent, FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormFieldContainer from './FormFieldContainer';\nimport FormFieldError from './FormFieldError';\nimport MultiCheckboxControl from './MultiCheckboxControl';\n\nexport interface CheckboxGroupFormFieldProps {\n    id: string;\n    label: ReactNode;\n    name: string;\n    options: FormFieldItem[];\n    onChange?(values: string[]): void;\n}\n\ntype MultiCheckboxFormFieldProps = CheckboxGroupFormFieldProps &\n    Pick<FieldArrayRenderProps, 'push' | 'remove' | 'pop' | 'form'>;\n\nconst MultiCheckboxFormField: FunctionComponent<MultiCheckboxFormFieldProps> = ({\n    form: { values, errors },\n    id,\n    label,\n    name,\n    onChange = noop,\n    options,\n    push,\n    remove,\n}) => {\n    const handleSelectAll = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        difference(\n            options.map(({ value }) => value),\n            checkedValues,\n        ).forEach((val) => push(val));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, options, push, values]);\n\n    const handleSelectNone = useCallback(() => {\n        const checkedValues: string[] = getIn(values, name) || [];\n\n        checkedValues.forEach(() => remove(0));\n\n        onChange(getIn(values, name));\n    }, [name, onChange, remove, values]);\n\n    const handleInputChange = useCallback(\n        (event: ChangeEvent<HTMLInputElement>) => {\n            const checkedValues: string[] = getIn(values, name) || [];\n            const { value, checked } = event.target;\n\n            if (checked) {\n                push(value);\n            } else {\n                remove(checkedValues.indexOf(value));\n            }\n\n            onChange(getIn(values, name));\n        },\n        [name, onChange, push, remove, values],\n    );\n\n    return (\n        <FormFieldContainer hasError={getIn(errors, name) && getIn(errors, name).length}>\n            {label}\n\n            {options.length > 1 && (\n                <MultiCheckboxControl\n                    onSelectedAll={handleSelectAll}\n                    onSelectedNone={handleSelectNone}\n                    testId={id}\n                />\n            )}\n\n            <DynamicInput\n                fieldType={DynamicFormFieldType.checkbox}\n                id={id}\n                name={name}\n                onChange={handleInputChange}\n                options={options}\n                value={getIn(values, name) || []}\n            />\n\n            <FormFieldError\n                errorId={`${id ?? name}-field-error-message`}\n                name={name}\n                testId={`${kebabCase(name)}-field-error-message`}\n            />\n        </FormFieldContainer>\n    );\n};\n\nconst CheckboxGroupFormField: FunctionComponent<CheckboxGroupFormFieldProps> = ({\n    id,\n    label,\n    name,\n    onChange,\n    options,\n}) => {\n    const renderField = useCallback(\n        (renderProps: FieldArrayRenderProps) => (\n            <MultiCheckboxFormField\n                id={id}\n                label={label}\n                name={name}\n                onChange={onChange}\n                options={options}\n                {...pick(renderProps, ['form', 'pop', 'push', 'remove'])}\n            />\n        ),\n        [id, label, name, onChange, options],\n    );\n\n    return <FieldArray name={name} render={renderField} />;\n};\n\nexport default memo(CheckboxGroupFormField);\n","import { FormField as FormFieldType } from '@bigcommerce/checkout-sdk';\nimport classNames from 'classnames';\nimport { FieldProps } from 'formik';\nimport { includes } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback, useMemo } from 'react';\n\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport CheckboxGroupFormField from './CheckboxGroupFormField';\nimport DynamicFormFieldType from './DynamicFormFieldType';\nimport DynamicInput from './DynamicInput';\nimport FormField from './FormField';\nimport Label from './Label';\n\nexport interface DynamicFormFieldOption {\n    code: string;\n    name: string;\n}\n\nexport interface DynamicFormFieldProps {\n    field: FormFieldType;\n    inputId?: string;\n    extraClass?: string;\n    autocomplete?: string;\n    parentFieldName?: string;\n    placeholder?: string;\n    label?: ReactNode;\n    isFloatingLabelEnabled?: boolean;\n    onChange?(value: string | string[]): void;\n}\n\nconst DynamicFormField: FunctionComponent<DynamicFormFieldProps> = ({\n    field: {\n        fieldType,\n        type,\n        secret,\n        name,\n        label: fieldLabel,\n        required,\n        options,\n        max,\n        min,\n        maxLength,\n    },\n    parentFieldName,\n    onChange,\n    placeholder,\n    inputId,\n    autocomplete,\n    label,\n    extraClass,\n    isFloatingLabelEnabled,\n}) => {\n    const fieldInputId = inputId || name;\n    const fieldName = parentFieldName ? `${parentFieldName}.${name}` : name;\n    const isFloatingLabelSupportedFieldType = Boolean(\n        isFloatingLabelEnabled &&\n            (includes(['text', 'password', 'dropdown', 'date', 'multiline'], fieldType) ||\n                !fieldType),\n    );\n    const labelComponent = useMemo(\n        () => (\n            <Label\n                htmlFor={fieldInputId}\n                id={`${fieldInputId}-label`}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n            >\n                {label || fieldLabel}\n                {!required && (\n                    <>\n                        {' '}\n                        <small className=\"optimizedCheckout-contentSecondary\">\n                            <TranslatedString id=\"common.optional_text\" />\n                        </small>\n                    </>\n                )}\n            </Label>\n        ),\n        [fieldInputId, fieldLabel, required, isFloatingLabelSupportedFieldType, label],\n    );\n\n    const dynamicFormFieldType = useMemo((): DynamicFormFieldType => {\n        if (fieldType === 'text') {\n            if (type === 'integer') {\n                return DynamicFormFieldType.number;\n            }\n\n            if (includes(name, 'phone') || includes(name, 'tel')) {\n                return DynamicFormFieldType.telephone;\n            }\n\n            return secret ? DynamicFormFieldType.password : DynamicFormFieldType.text;\n        }\n\n        return fieldType as DynamicFormFieldType;\n    }, [fieldType, type, secret, name]);\n\n    const renderInput = useCallback(\n        ({ field }: FieldProps<string>) => (\n            <DynamicInput\n                {...field}\n                aria-labelledby={`${fieldInputId}-label ${fieldInputId}-field-error-message`}\n                autoComplete={autocomplete}\n                fieldType={dynamicFormFieldType}\n                id={fieldInputId}\n                isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                max={max}\n                maxLength={maxLength || undefined}\n                min={min}\n                options={options && options.items}\n                placeholder={placeholder || (options && options.helperLabel)}\n                rows={options && (options as any).rows}\n            />\n        ),\n        [\n            fieldInputId,\n            max,\n            maxLength,\n            min,\n            options,\n            placeholder,\n            dynamicFormFieldType,\n            autocomplete,\n        ],\n    );\n\n    return (\n        <div\n            className={classNames(\n                'dynamic-form-field',\n                { 'floating-form-field': isFloatingLabelSupportedFieldType },\n                extraClass,\n            )}\n        >\n            {fieldType === DynamicFormFieldType.checkbox ? (\n                <CheckboxGroupFormField\n                    id={fieldInputId}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                    options={(options && options.items) || []}\n                />\n            ) : (\n                <FormField\n                    id={fieldInputId}\n                    input={renderInput}\n                    isFloatingLabelEnabled={isFloatingLabelSupportedFieldType}\n                    label={labelComponent}\n                    name={fieldName}\n                    onChange={onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default memo(DynamicFormField);\n","enum DynamicFormFieldType {\n    telephone = 'tel',\n    dropdown = 'dropdown',\n    number = 'number',\n    password = 'password',\n    checkbox = 'checkbox',\n    multiline = 'multiline',\n    date = 'date',\n    radio = 'radio',\n    text = 'text',\n}\n\nexport default DynamicFormFieldType;\n","import classNames from 'classnames';\nimport React, { FieldsetHTMLAttributes, forwardRef, ReactNode, Ref } from 'react';\n\nexport interface FieldsetProps extends FieldsetHTMLAttributes<HTMLFieldSetElement> {\n    additionalClassName?: string;\n    testId?: string;\n    legend?: ReactNode;\n}\n\nconst Fieldset = forwardRef(\n    (\n        { additionalClassName, children, className, legend, testId, ...rest }: FieldsetProps,\n        ref: Ref<HTMLFieldSetElement>,\n    ) => (\n        <fieldset\n            {...rest}\n            className={className || classNames('form-fieldset', additionalClassName)}\n            data-test={testId}\n            ref={ref}\n        >\n            {legend}\n\n            <div className=\"form-body\">{children}</div>\n        </fieldset>\n    ),\n);\n\nexport default Fieldset;\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { Form as FormikForm, FormikFormProps } from 'formik';\nimport { values } from 'lodash';\nimport React, { createRef, FunctionComponent, memo, useCallback, useRef } from 'react';\n\nimport { FormContextType, FormProvider } from '@bigcommerce/checkout/ui';\n\nexport interface FormProps extends FormikFormProps {\n    testId?: string;\n}\n\nconst Form: FunctionComponent<FormProps> = ({ className, testId, ...rest }) => {\n    const ref = useRef({ containerRef: createRef<HTMLDivElement>() });\n\n    const focusOnError = () => {\n        const { current } = ref.current.containerRef;\n\n        if (!current) {\n            return;\n        }\n\n        const errorInputSelectors = [\n            '.form-field--error input',\n            '.form-field--error textarea',\n            '.form-field--error select',\n        ];\n\n        const erroredFormField = current.querySelector<HTMLElement>(errorInputSelectors.join(', '));\n\n        if (erroredFormField) {\n            erroredFormField.focus({ preventScroll: true });\n\n            try {\n                erroredFormField.offsetParent?.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'center',\n                });\n            } catch {\n                erroredFormField.offsetParent?.scrollIntoView();\n            }\n        }\n    };\n\n    const handleSubmitCapture = useCallback(\n        memoizeOne((setSubmitted: FormContextType['setSubmitted']) => {\n            return () => {\n                setSubmitted(true);\n\n                // use timeout to allow Formik validation to happen\n                setTimeout(() => focusOnError());\n            };\n        }),\n        [focusOnError],\n    );\n\n    const renderContent = useCallback(\n        memoizeOne(({ setSubmitted }: FormContextType) => {\n            return (\n                <div ref={ref.current.containerRef}>\n                    <FormikForm\n                        {...rest}\n                        className={className}\n                        data-test={testId}\n                        noValidate\n                        onSubmitCapture={handleSubmitCapture(setSubmitted)}\n                    />\n                </div>\n            );\n        }),\n        [className, handleSubmitCapture, testId, ...values(rest)],\n    );\n\n    return <FormProvider>{renderContent}</FormProvider>;\n};\n\nexport default memo(Form);\n","import { FieldProps } from 'formik';\nimport { kebabCase } from 'lodash';\nimport React, { FunctionComponent, memo, ReactNode, useCallback } from 'react';\n\nimport BasicFormField from './BasicFormField';\nimport FormFieldError from './FormFieldError';\nimport Label from './Label';\n\nexport interface FormFieldProps {\n    additionalClassName?: string;\n    name: string;\n    label?: ReactNode | ((fieldName: string) => ReactNode);\n    labelContent?: ReactNode;\n    footer?: ReactNode;\n    id?: string;\n    isFloatingLabelEnabled?: boolean;\n    input(field: FieldProps<string>): ReactNode;\n    onChange?(value: string): void;\n}\n\nconst FormField: FunctionComponent<FormFieldProps> = ({\n    additionalClassName,\n    labelContent,\n    label,\n    onChange,\n    footer,\n    input,\n    name,\n    id,\n    isFloatingLabelEnabled,\n}) => {\n    const renderField = useCallback(\n        (props) => (\n            <>\n                {isFloatingLabelEnabled && input(props)}\n\n                {label && (typeof label === 'function' ? label(name) : label)}\n                {labelContent && !label && (\n                    <Label\n                        htmlFor={name}\n                        id={`${id ?? name}-label`}\n                        isFloatingLabelEnabled={isFloatingLabelEnabled}\n                    >\n                        {labelContent}\n                    </Label>\n                )}\n\n                {!isFloatingLabelEnabled && input(props)}\n\n                <FormFieldError\n                    errorId={`${id ?? name}-field-error-message`}\n                    name={name}\n                    testId={`${kebabCase(name)}-field-error-message`}\n                />\n\n                {footer}\n            </>\n        ),\n        [label, labelContent, id, input, name, footer, isFloatingLabelEnabled],\n    );\n\n    return (\n        <BasicFormField\n            additionalClassName={additionalClassName}\n            name={name}\n            onChange={onChange}\n            render={renderField}\n        />\n    );\n};\n\nexport default memo(FormField);\n","import classNames from 'classnames';\nimport React, { FunctionComponent, memo, ReactNode } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldContainerProps {\n    additionalClassName?: string;\n    children: ReactNode;\n    className?: string;\n    hasError?: boolean;\n    testId?: string;\n}\n\nconst FormFieldContainer: FunctionComponent<FormFieldContainerProps> = ({\n    additionalClassName,\n    children,\n    className,\n    hasError,\n    testId,\n}) => (\n    <FormContext.Consumer>\n        {({ isSubmitted }) => (\n            <div\n                className={\n                    className ||\n                    classNames('form-field', additionalClassName, {\n                        'form-field--error': hasError && isSubmitted,\n                    })\n                }\n                data-test={testId}\n            >\n                {children}\n            </div>\n        )}\n    </FormContext.Consumer>\n);\n\nexport default memo(FormFieldContainer);\n","import { ErrorMessage } from 'formik';\nimport React, { FunctionComponent, memo, useCallback } from 'react';\n\nimport { FormContext } from '@bigcommerce/checkout/ui';\n\nexport interface FormFieldErrorProps {\n    name: string;\n    testId?: string;\n    errorId: string;\n}\n\nconst FormFieldError: FunctionComponent<FormFieldErrorProps> = ({ name, testId, errorId }) => {\n    const renderMessage = useCallback(\n        (message: string) => (\n            <ul className=\"form-field-errors\" data-test={testId}>\n                <li className=\"form-field-error\">\n                    <label\n                        aria-live=\"polite\"\n                        className=\"form-inlineMessage\"\n                        htmlFor={name}\n                        id={errorId}\n                        role=\"alert\"\n                    >\n                        {message}\n                    </label>\n                </li>\n            </ul>\n        ),\n        [errorId, name, testId],\n    );\n\n    return (\n        <FormContext.Consumer>\n            {({ isSubmitted }) =>\n                isSubmitted && <ErrorMessage name={name} render={renderMessage} />\n            }\n        </FormContext.Consumer>\n    );\n};\n\nexport default memo(FormFieldError);\n","import classNames from 'classnames';\nimport { includes } from 'lodash';\nimport React, { forwardRef, InputHTMLAttributes, Ref } from 'react';\n\nexport interface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Input = forwardRef(\n    (\n        { className, testId, placeholder, name, isFloatingLabelEnabled, ...rest }: InputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => {\n        const floatingLabelDisabledFieldNames = ['orderComment', 'redeemableCode'];\n\n        return (\n            <input\n                {...{\n                    ...rest,\n                    className: classNames(className, {\n                        'floating-input':\n                            isFloatingLabelEnabled && !includes(floatingLabelDisabledFieldNames, name),\n                    }),\n                    name,\n                }}\n                data-test={testId}\n                placeholder={isFloatingLabelEnabled ? ' ' : placeholder}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default Input;\n","import classNames from 'classnames';\nimport React, { FunctionComponent, LabelHTMLAttributes } from 'react';\n\nexport interface LabelProps extends LabelHTMLAttributes<HTMLLabelElement> {\n    testId?: string;\n    hidden?: boolean;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst Label: FunctionComponent<LabelProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    isFloatingLabelEnabled,\n    ...rest\n}) => (\n    <label\n        { ...rest }\n        className={ classNames(\n            { 'floating-label': isFloatingLabelEnabled },\n            className || 'form-label',\n            { 'is-srOnly': hidden },\n            'optimizedCheckout-form-label'\n        ) }\n        data-test={ testId }\n    >\n        { children }\n    </label>\n);\n\nexport default Label;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nexport interface LegendProps extends React.HTMLAttributes<HTMLLegendElement> {\n    hidden?: boolean;\n    testId?: string;\n}\n\nconst Legend: FunctionComponent<LegendProps> = ({\n    children,\n    className,\n    hidden,\n    testId,\n    ...rest\n}) => (\n    <legend\n        {...rest}\n        className={classNames(\n            className || 'form-legend',\n            { 'is-srOnly': hidden },\n            { 'optimizedCheckout-headingSecondary': !hidden },\n        )}\n        data-test={testId}\n    >\n        {children}\n    </legend>\n);\n\nexport default Legend;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref, TextareaHTMLAttributes } from 'react';\n\nexport interface TextAreaProps extends TextareaHTMLAttributes<HTMLTextAreaElement> {\n    additionalClassName?: string;\n    testId?: string;\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextArea = forwardRef(\n    (\n        { additionalClassName, testId, className, isFloatingLabelEnabled, ...rest }: TextAreaProps,\n        ref: Ref<HTMLTextAreaElement>,\n    ) => {\n        return (\n            <textarea\n                {...rest}\n                className={\n                    className ||\n                    classNames(\n                        { 'floating-textarea': isFloatingLabelEnabled },\n                        'form-input',\n                        'optimizedCheckout-form-input',\n                        additionalClassName,\n                    )\n                }\n                data-test={testId}\n                ref={ref}\n            />\n        );\n    },\n);\n\nexport default TextArea;\n","import classNames from 'classnames';\nimport React, { forwardRef, Ref } from 'react';\n\nimport Input, { InputProps } from './Input';\n\nexport interface TextInputProps extends InputProps {\n    additionalClassName?: string;\n    appearFocused?: boolean;\n    type?: 'text' | 'password' | 'tel' | 'email' | 'number';\n    isFloatingLabelEnabled?: boolean;\n}\n\nconst TextInput = forwardRef(\n    (\n        {\n            additionalClassName,\n            isFloatingLabelEnabled,\n            appearFocused,\n            type = 'text',\n            ...rest\n        }: TextInputProps,\n        ref: Ref<HTMLInputElement>,\n    ) => (\n        <Input\n            {...rest}\n            className={classNames(\n                'form-input',\n                'optimizedCheckout-form-input',\n                { 'form-input--focus': appearFocused },\n                { 'optimizedCheckout-form-input--focus': appearFocused },\n                additionalClassName,\n            )}\n            isFloatingLabelEnabled={isFloatingLabelEnabled}\n            ref={ref}\n            type={type}\n        />\n    ),\n);\n\nexport default TextInput;\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconBolt: FunctionComponent = () => (\n    <svg\n        aria-labelledby=\"iconCardBoltTitle\"\n        data-test=\"bolt-icon\"\n        height=\"12\"\n        role=\"img\"\n        viewBox=\"0 0 12 12\"\n        width=\"12\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n    >\n        <title id=\"iconCardBoltTitle\">Bolt</title>\n        <path d=\"M0 7.502h7.5v4.5L12 4.502H4.5V0z\" fill=\"#FFFFFF\" id=\"mark\" />\n    </svg>\n);\n\nexport default withIconContainer(IconBolt);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconChevronDown: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconChevronDown);\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconError: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-6h2v6zm0-8h-2V7h2v2z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconError);\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconClose: FunctionComponent = () => (\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n    </svg>\n);\n\nexport default withIconContainer(IconClose);\n","import classNames from 'classnames';\nimport { noop } from 'lodash';\nimport React, { FunctionComponent, KeyboardEvent, MouseEvent, ReactNode, useCallback } from 'react';\nimport ReactModal from 'react-modal';\nimport { Omit } from 'utility-types';\n\nimport { preventDefault } from '@bigcommerce/checkout/dom-utils';\n\nimport { IconClose } from '../icon';\n\nexport type ModalProps = Omit<\n    ReactModal.Props,\n    'bodyOpenClassName' | 'className' | 'closeTimeoutMS' | 'overlayClassName'\n> & {\n    children: ReactNode;\n    closeButtonLabel?: string | ReactNode;\n    footer?: ReactNode;\n    header?: ReactNode;\n    additionalHeaderClassName?: string;\n    additionalBodyClassName?: string;\n    additionalModalClassName?: string;\n    shouldShowCloseButton?: boolean;\n};\n\nconst Modal: FunctionComponent<ModalProps> = ({\n    children,\n    closeButtonLabel = 'Close',\n    footer,\n    header,\n    additionalHeaderClassName,\n    additionalBodyClassName,\n    additionalModalClassName,\n    onRequestClose = noop,\n    shouldShowCloseButton = false,\n    ...rest\n}) => {\n    const handleClose = useCallback(\n        (event: MouseEvent | KeyboardEvent) => {\n            onRequestClose(event);\n        },\n        [onRequestClose],\n    );\n\n    return (\n        <ReactModal\n            {...rest}\n            ariaHideApp={process.env.NODE_ENV !== 'test'}\n            bodyOpenClassName=\"has-activeModal\"\n            className={{\n                base: classNames(\n                    'modal optimizedCheckout-contentPrimary',\n                    additionalModalClassName,\n                ),\n                afterOpen: 'modal--afterOpen',\n                beforeClose: 'modal--beforeClose',\n            }}\n            closeTimeoutMS={200}\n            onRequestClose={onRequestClose}\n            overlayClassName={{\n                base: 'modalOverlay',\n                afterOpen: 'modalOverlay--afterOpen',\n                beforeClose: 'modalOverlay--beforeClose',\n            }}\n            shouldCloseOnEsc={true}\n            shouldCloseOnOverlayClick={false}\n        >\n            <div className={classNames('modal-header', additionalHeaderClassName)}>\n                {header}\n\n                {shouldShowCloseButton && (\n                     \n                    <a\n                        className=\"modal-close\"\n                        data-test=\"modal-close-button\"\n                        href=\"#\"\n                        onClick={preventDefault(handleClose)}\n                    >\n                        {closeButtonLabel && <span className=\"is-srOnly\">{closeButtonLabel}</span>}\n\n                        <IconClose />\n                    </a>\n                )}\n            </div>\n\n            <div\n                className={classNames('modal-body', additionalBodyClassName)}\n                data-test=\"modal-body\"\n            >\n                {children}\n            </div>\n\n            {Boolean(footer) && (\n                <div className=\"modal-footer\" data-test=\"modal-footer\">\n                    {footer}\n                </div>\n            )}\n        </ReactModal>\n    );\n};\n\nexport default Modal;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\ninterface ModalHeaderProps {\n    children: React.ReactNode;\n    additionalClassName?: string;\n}\n\nconst ModalHeader: FunctionComponent<ModalHeaderProps> = ({ children, additionalClassName }) => (\n    <h2\n        className={classNames(\n            'modal-header-title optimizedCheckout-headingSecondary',\n            additionalClassName,\n        )}\n        data-test=\"modal-heading\"\n    >\n        {children}\n    </h2>\n);\n\nexport default ModalHeader;\n","import React, { FunctionComponent, memo } from 'react';\nimport Media, { MediaQueryObject, MultiQueryProps } from 'react-media';\n\nimport { MOBILE_MAX_WIDTH } from './breakpoints';\n\nconst queries = {\n    print: 'print',\n    mobile: `screen and (max-width: ${MOBILE_MAX_WIDTH}px)`,\n};\n\nconst ViewPicker: FunctionComponent<Pick<MultiQueryProps<MediaQueryObject>, 'children'>> = ({\n    children,\n}) => {\n    return <Media queries={queries}>{children}</Media>;\n};\n\nexport default memo(ViewPicker);\n","import React, { FunctionComponent, memo } from 'react';\n\nimport ViewPicker from './ViewPicker';\n\nconst MobileView: FunctionComponent<{ children(matched: boolean): React.ReactNode }> = ({\n    children,\n}) => {\n    return (\n        <ViewPicker>\n            {(matches: { mobile: boolean }) => {\n                return children(matches.mobile);\n            }}\n        </ViewPicker>\n    );\n};\n\nexport default memo(MobileView);\n","// These values have to match with screensizes.scss\nexport const MOBILE_MAX_WIDTH = 968;\nexport const SMALL_SCREEN_MAX_WIDTH = 551;\n","import { Component, ReactNode } from 'react';\n\nexport interface ToggleProps {\n    openByDefault?: boolean;\n    children(props: any): ReactNode;\n}\n\nexport interface ToggleState {\n    isOpen: boolean;\n}\n\nexport default class Toggle extends Component<ToggleProps, ToggleState> {\n    constructor(props: ToggleProps) {\n        super(props);\n\n        this.state = { isOpen: !!props.openByDefault };\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { isOpen } = this.state;\n\n        return children({\n            isOpen,\n            toggle: this.toggle,\n        });\n    }\n\n    private toggle: (event: Event) => void = (event) => {\n        const { isOpen } = this.state;\n\n        event.preventDefault();\n\n        this.setState({ isOpen: !isOpen });\n    };\n}\n","import { kebabCase } from 'lodash';\n\nexport default function getAppliedStyles(\n    element: HTMLElement,\n    properties: string[],\n): { [key: string]: string } {\n    const declaration = window.getComputedStyle(element);\n\n    return properties.reduce(\n        (result, propertyName) => ({\n            ...result,\n            [propertyName]: declaration.getPropertyValue(kebabCase(propertyName)),\n        }),\n        {},\n    );\n}\n","export default function parseAnchor(text: string): string[] {\n    const div = document.createElement('div');\n\n    div.innerHTML = text;\n\n    const anchor = div.querySelector('a');\n\n    if (!anchor) {\n        return [];\n    }\n\n    const anchorSiblings = div.innerHTML.split(anchor.outerHTML);\n\n    return [anchorSiblings[0], anchor.text, anchorSiblings[1]];\n}\n","import { SyntheticEvent } from 'react';\n\nexport default function preventDefault<\n    TFunc extends (event: TEvent, ...args: any[]) => any,\n    TEvent extends SyntheticEvent,\n>(fn?: TFunc): (event: TEvent) => void {\n    return (event) => {\n        event.preventDefault();\n\n        if (fn) {\n            fn(event);\n        }\n    };\n}\n","import { Component, ReactNode } from 'react';\n\nimport ErrorLogger from './ErrorLogger';\n\nexport interface ErrorBoundaryProps {\n    children: ReactNode;\n    fallback?: ReactNode;\n    logger?: ErrorLogger;\n    filter?(error: Error): boolean;\n}\n\ninterface ErrorBoundaryState {\n    error?: Error;\n}\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n        return { error };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    state: ErrorBoundaryState = {};\n\n    componentDidCatch(error: Error): void {\n        const { filter = () => true, logger } = this.props;\n\n        if (!filter(error)) {\n            throw error;\n        }\n\n        if (logger) {\n            logger.log(error);\n        }\n    }\n\n    render(): ReactNode {\n        const { children, fallback, filter = () => true } = this.props;\n\n        const { error } = this.state;\n\n        if (error && filter(error)) {\n            return fallback || null;\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import { BrowserOptions } from '@sentry/browser';\n\nexport default interface ErrorLogger {\n    /**\n     * Logs an error in, tagging it with an error code.\n     *\n     * @param error The error object to be logged\n     * @param tags The tags attached to the log entry\n     * @param level The level of the log\n     * @param meta Any extra meta data\n     */\n    log(error: Error, tags?: ErrorTags, level?: ErrorLevelType, meta?: ErrorMeta): void;\n}\n\nexport interface ErrorLoggerOptions {\n    errorTypes?: string[];\n    publicPath?: string;\n    sampleRate?: number;\n}\n\nexport interface ErrorLoggerServiceConfig {\n    sentry?: BrowserOptions;\n}\n\nexport interface ErrorTags {\n    /**\n     * A code that identifies uniquely each error type\n     */\n    errorCode: string;\n}\n\nexport interface ErrorMeta {\n    [key: string]: unknown;\n}\n\nexport enum ErrorLevelType {\n    Info = 'info',\n    Warning = 'warning',\n    Error = 'error',\n    Debug = 'debug',\n}\n","import { isEmpty, pickBy } from 'lodash';\nimport React, { ComponentType, Context, FunctionComponent, memo, useContext } from 'react';\n\nimport InjectHoc from './InjectHoc';\n\nexport interface InjectHocOptions<TInjectedProps> {\n    displayNamePrefix?: string;\n    pickProps?(value: TInjectedProps[keyof TInjectedProps], key: keyof TInjectedProps): boolean;\n}\n\nexport default function createInjectHoc<\n    TInjectedProps extends object | undefined,\n    TPickedProps extends Partial<TInjectedProps> = TInjectedProps,\n>(\n    ContextComponent: Context<TInjectedProps>,\n    options?: InjectHocOptions<TInjectedProps>,\n): InjectHoc<NonNullable<TPickedProps>> {\n    return <TProps extends TPickedProps>(OriginalComponent: ComponentType<TProps>) => {\n        const { displayNamePrefix = '', pickProps = () => true } = options || {};\n\n        const InnerDecoratedComponent: FunctionComponent<TProps> = memo((props) => (\n            <OriginalComponent {...props} />\n        ));\n\n        const DecoratedComponent = (props: Omit<TProps, keyof NonNullable<TPickedProps>>) => {\n            const context = useContext(ContextComponent);\n            const injectedProps = pickBy(context, (value, key) =>\n                pickProps(value, key as keyof TInjectedProps),\n            );\n\n            if (isEmpty(injectedProps)) {\n                return null;\n            }\n\n            const mergedProps = { ...injectedProps, ...props } as unknown as TProps;\n\n            return <InnerDecoratedComponent {...mergedProps} />;\n        };\n\n        if (displayNamePrefix) {\n            DecoratedComponent.displayName = `${displayNamePrefix}(${\n                OriginalComponent.displayName || OriginalComponent.name\n            })`;\n        }\n\n        return DecoratedComponent;\n    };\n}\n","import { CurrencyService, LanguageService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface LocaleContextType {\n    language: LanguageService;\n    date?: {\n        inputFormat: string;\n    };\n    currency?: CurrencyService;\n}\n\nconst LocaleContext = createContext<LocaleContextType | undefined>(undefined);\n\nexport default LocaleContext;\n\nexport function useLocale() {\n    const context = useContext(LocaleContext);\n\n    if (!context) {\n        throw new Error('useLocale must be used within a LocaleContextProvider');\n    }\n\n    return context;\n}\n","import { CheckoutService, createCurrencyService, StoreConfig } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport getLanguageService from './getLanguageService';\nimport LocaleContext from './LocaleContext';\n\nexport interface LocaleProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface LocaleProviderState {\n    config?: StoreConfig;\n}\n\nclass LocaleProvider extends Component<LocaleProviderProps> {\n    state: Readonly<LocaleProviderState> = {};\n\n    private languageService = getLanguageService();\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne((config?: StoreConfig) => {\n        return {\n            currency: config ? createCurrencyService(config) : undefined,\n            date: config\n                ? {\n                      inputFormat: config.inputDateFormat,\n                  }\n                : undefined,\n            language: this.languageService,\n        };\n    });\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe(\n            ({ data }) => {\n                this.setState({ config: data.getConfig() });\n            },\n            ({ data }) => data.getConfig(),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { children } = this.props;\n        const { config } = this.state;\n\n        return (\n            <LocaleContext.Provider value={this.getContextValue(config)}>\n                {children}\n            </LocaleContext.Provider>\n        );\n    }\n}\n\nexport default LocaleProvider;\n","import DOMPurify from 'dompurify';\nimport React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedHtmlProps {\n    id: string;\n    data?: any;\n}\n\nexport const TranslatedHtml: FunctionComponent<TranslatedHtmlProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return (\n        <span\n            dangerouslySetInnerHTML={{\n                __html: DOMPurify.sanitize(language.translate(id, data), { ADD_ATTR: ['target'] }),\n            }}\n        />\n    );\n};\n\nexport default TranslatedHtml;\n","import React, { FunctionComponent } from 'react';\n\nimport { useLocale } from './LocaleContext';\n\nexport interface TranslatedStringProps {\n    id: string;\n    data?: any;\n}\n\nconst TranslatedString: FunctionComponent<TranslatedStringProps> = ({ data, id }) => {\n    const { language } = useLocale();\n\n    return <>{language.translate(id, data)}</>;\n};\n\nexport default TranslatedString;\n","import FALLBACK_TRANSLATIONS from './en.json';\n\nexport const FALLBACK_LOCALE = 'en';\n\nexport { FALLBACK_TRANSLATIONS };\n","import { createLanguageService, LanguageConfig, LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { FALLBACK_LOCALE, FALLBACK_TRANSLATIONS } from './translations';\n\nlet languageService: LanguageService | undefined;\n\nexport default function getLanguageService(): LanguageService {\n    languageService =\n        languageService ??\n        createLanguageService({\n            fallbackLocale: FALLBACK_LOCALE,\n            fallbackTranslations: FALLBACK_TRANSLATIONS,\n        });\n\n    return languageService;\n}\n\nexport type InitializeLanguageService = typeof initializeLanguageService;\n\nexport function initializeLanguageService(config: LanguageConfig): LanguageService {\n    languageService = createLanguageService({\n        ...config,\n        defaultLocale: config.locale,\n        defaultTranslations: config.defaultTranslations,\n        fallbackLocale: FALLBACK_LOCALE,\n        fallbackTranslations: FALLBACK_TRANSLATIONS,\n    });\n\n    return languageService;\n}\n","import { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithDateProps {\n    date: {\n        inputFormat: string;\n    };\n}\n\nconst withDate: InjectHoc<WithDateProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'withDate',\n    pickProps: (value, key) => key === 'date' && !!value,\n});\n\nexport default withDate;\n","import { LanguageService } from '@bigcommerce/checkout-sdk';\n\nimport { createInjectHoc, InjectHoc } from '@bigcommerce/checkout/legacy-hoc';\n\nimport LocaleContext from './LocaleContext';\n\nexport interface WithLanguageProps {\n    language: LanguageService;\n}\n\nconst withLanguage: InjectHoc<WithLanguageProps> = createInjectHoc(LocaleContext, {\n    displayNamePrefix: 'WithLanguage',\n    pickProps: (value, key) => key === 'language' && !!value,\n});\n\nexport default withLanguage;\n","enum PaymentMethodId {\n    Adyen = 'adyen',\n    AdyenV2 = 'adyenv2',\n    AdyenV2GooglePay = 'googlepayadyenv2',\n    AdyenV3GooglePay = 'googlepayadyenv3',\n    AdyenV3 = 'adyenv3',\n    Affirm = 'affirm',\n    Afterpay = 'afterpay',\n    AmazonPay = 'amazonpay',\n    ApplePay = 'applepay',\n    Barclaycard = 'barclaycard',\n    BlueSnapV2 = 'bluesnapv2',\n    BlueSnapDirect = 'bluesnapdirect',\n    Boleto = 'boleto',\n    Bolt = 'bolt',\n    Braintree = 'braintree',\n    BraintreeAch = 'braintreeach',\n    BraintreeVenmo = 'braintreevenmo',\n    AuthorizeNetGooglePay = 'googlepayauthorizenet',\n    BNZGooglePay = 'googlepaybnz',\n    BraintreeAcceleratedCheckout = 'braintreeacceleratedcheckout',\n    BraintreeGooglePay = 'googlepaybraintree',\n    PayPalCommerceAcceleratedCheckout = 'paypalcommerceacceleratedcheckout',\n    PayPalCommerceGooglePay = 'googlepaypaypalcommerce',\n    BraintreeVisaCheckout = 'braintreevisacheckout',\n    BraintreeLocalPaymentMethod = 'braintreelocalmethods',\n    BraintreePaypalCredit = 'braintreepaypalcredit',\n    CBAMPGS = 'cba_mpgs',\n    CCAvenueMars = 'ccavenuemars',\n    Checkoutcom = 'checkoutcom',\n    CheckoutcomGooglePay = 'googlepaycheckoutcom',\n    Clearpay = 'clearpay',\n    Converge = 'converge',\n    CybersourceV2GooglePay = 'googlepaycybersourcev2',\n    DigitalRiver = 'digitalriver',\n    Fawry = 'fawry',\n    Humm = 'humm',\n    Ideal = 'ideal',\n    Klarna = 'klarna',\n    Laybuy = 'laybuy',\n    Masterpass = 'masterpass',\n    Mollie = 'mollie',\n    Moneris = 'moneris',\n    OrbitalGooglePay = 'googlepayorbital',\n    Oxxo = 'oxxo',\n    PaypalExpress = 'paypalexpress',\n    PaypalPaymentsPro = 'paypal',\n    PaypalCommerce = 'paypalcommerce',\n    PaypalCommerceCredit = 'paypalcommercecredit',\n    PaypalCommerceCreditCards = 'paypalcommercecreditcards',\n    PaypalCommerceAlternativeMethod = 'paypalcommercealternativemethods',\n    PaypalCommerceVenmo = 'paypalcommercevenmo',\n    Qpay = 'qpay',\n    Quadpay = 'quadpay',\n    Ratepay = 'ratepay',\n    SagePay = 'sagepay',\n    Sepa = 'sepa',\n    Sezzle = 'sezzle',\n    SquareV2 = 'squarev2',\n    StripeGooglePay = 'googlepaystripe',\n    StripeUPEGooglePay = 'googlepaystripeupe',\n    StripeV3 = 'stripev3',\n    StripeUPE = 'stripeupe',\n    WorldpayAccess = 'worldpayaccess',\n    WorldpayAccessGooglePay = 'googlepayworldpayaccess',\n    Zip = 'zip',\n    TdOnlineMartGooglePay = 'googlepaytdonlinemart',\n}\n\nexport default PaymentMethodId;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { createContext, useContext } from 'react';\n\nexport interface CheckoutContextProps {\n    checkoutService: CheckoutService;\n    checkoutState: CheckoutSelectors;\n}\n\nconst CheckoutContext = createContext<CheckoutContextProps | undefined>(undefined);\n\nexport function useCheckout() {\n    const context = useContext(CheckoutContext);\n\n    if (!context) {\n        throw new Error('useCheckout must be used within a CheckoutContextProvider');\n    }\n\n    return context;\n}\n\nexport default CheckoutContext;\n","import { CheckoutSelectors, CheckoutService } from '@bigcommerce/checkout-sdk';\nimport { memoizeOne } from '@bigcommerce/memoize';\nimport React, { Component, ReactNode } from 'react';\n\nimport CheckoutContext from './CheckoutContext';\n\nexport interface CheckoutProviderProps {\n    checkoutService: CheckoutService;\n}\n\nexport interface CheckoutProviderState {\n    checkoutState: CheckoutSelectors;\n}\n\nexport default class CheckoutProvider extends Component<\n    CheckoutProviderProps,\n    CheckoutProviderState\n> {\n    state: Readonly<CheckoutProviderState>;\n\n    private unsubscribe?: () => void;\n\n    private getContextValue = memoizeOne(\n        (checkoutService: CheckoutService, checkoutState: CheckoutSelectors) => {\n            return {\n                checkoutService,\n                checkoutState,\n            };\n        },\n    );\n\n    constructor(props: Readonly<CheckoutProviderProps>) {\n        super(props);\n\n        this.state = {\n            checkoutState: props.checkoutService.getState(),\n        };\n    }\n\n    componentDidMount(): void {\n        const { checkoutService } = this.props;\n\n        this.unsubscribe = checkoutService.subscribe((checkoutState) =>\n            this.setState({ checkoutState }),\n        );\n    }\n\n    componentWillUnmount(): void {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n            this.unsubscribe = undefined;\n        }\n    }\n\n    render(): ReactNode {\n        const { checkoutService, children } = this.props;\n        const { checkoutState } = this.state;\n\n        return (\n            <CheckoutContext.Provider value={this.getContextValue(checkoutService, checkoutState)}>\n                {children}\n            </CheckoutContext.Provider>\n        );\n    }\n}\n","export default class CustomError extends Error {\n    static shouldReport: boolean;\n\n    data: any;\n    title: any;\n    type: string;\n\n    constructor({\n        data = {},\n        message = '',\n        title = '',\n        name = '',\n    }: {\n        data?: any;\n        message?: string;\n        title?: string;\n        name?: string;\n    }) {\n        super();\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, CustomError);\n        } else {\n            this.stack = new Error().stack;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.data = data;\n        this.message = message;\n        this.name = name;\n        this.title = title;\n        this.type = 'custom';\n    }\n}\n","import React, { ComponentType } from 'react';\n\nimport ResolvableComponent from './ResolvableComponent';\n\nexport default function toResolvableComponent<TProps extends Record<string, any>, TIdentifier>(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Component: ComponentType<TProps>,\n    resolveIds: TIdentifier[],\n): ResolvableComponent<TProps, TIdentifier> {\n    return Object.assign((props: TProps) => <Component {...props} />, { resolveIds });\n}\n","import React, { FunctionComponent } from 'react';\n\nimport withIconContainer from './withIconContainer';\n\nconst IconPayPalFastlane: FunctionComponent = () => (\n    <svg viewBox=\"0 0 101 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path\n            d=\"M.009 9.791 1.653.298C1.681.1 1.805 0 1.997 0H7.74c.22 0 .332.141.29.354l-.236 1.334c-.028.185-.152.298-.344.298H3.627l-.359 2.058h3.479c.22 0 .332.142.29.354l-.221 1.306C6.788 5.9 6.664 6 6.472 6H2.936l-.662 3.847c-.028.198-.152.298-.344.298H.298c-.22 0-.332-.142-.289-.354m6.78-1.49c0-1.844 1.905-2.468 3.906-2.71.234-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.035.269-1.23.796-.068.185-.18.27-.358.27H7.975c-.18 0-.304-.085-.304-.241 0-.044.014-.086.028-.128.441-1.334 1.67-2.186 3.507-2.186s2.843.71 2.843 2.428c0 .326-.04.739-.11 1.122l-.373 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.11.341-.318.341h-1.283c-.192 0-.304-.1-.304-.282 0-.17.04-.37.069-.554-.524.539-1.2.978-2.402.978-1.42 0-2.332-.725-2.332-1.986zm5.036-1.205.054-.256-.372.041c-.746.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.504-.78 1.725-1.773zm2.446 1.36c-.04-.17-.07-.297-.07-.438 0-.242.124-.313.318-.313h1.588c.192 0 .29.1.332.298.152.554.607.795 1.284.795.773 0 1.186-.326 1.186-.751 0-.369-.415-.54-1.104-.752l-.813-.256c-1.173-.369-2.14-.795-2.14-2.115 0-1.603 1.475-2.483 3.423-2.483 1.519 0 2.762.412 3.12 1.986.015.07.029.141.029.226 0 .142-.124.198-.318.198h-1.504c-.18 0-.276-.085-.36-.27-.165-.37-.538-.596-1.13-.596-.691 0-1.036.27-1.036.653s.332.554 1.284.852l.539.17c1.243.398 2.278.866 2.278 2.059 0 1.732-1.519 2.639-3.59 2.639-1.602 0-2.996-.468-3.313-1.902h-.005zm7.786.455c0-.269.04-.483.083-.725l.676-3.888h-.745c-.22 0-.332-.141-.29-.354l.166-.951c.029-.185.152-.298.344-.298h.8l.29-1.717c.028-.198.152-.298.344-.298h1.519c.22 0 .332.142.29.354l-.29 1.661h.966c.22 0 .332.142.29.356l-.166.951c-.029.186-.152.298-.345.298h-1.02l-.442 2.54c-.083.483-.152.851-.152 1.149 0 .468.152.624.47.624.124 0 .235-.015.318-.015.22 0 .29.17.249.383l-.152.922c-.055.356-.263.412-.76.412-1.297 0-2.443-.071-2.443-1.405m3.995.88 1.63-9.493C27.71.1 27.834 0 28.026 0h1.519c.22 0 .332.141.29.354l-1.643 9.493c-.028.198-.152.298-.344.298h-1.505c-.221 0-.332-.141-.29-.354zm3.147-1.49c0-1.844 1.905-2.468 3.906-2.71.235-.029.415-.041 1.298-.112a3.25 3.25 0 0 0 .04-.498c0-.653-.344-1.022-1.063-1.022-.622 0-1.034.269-1.229.796-.069.185-.18.27-.359.27h-1.407c-.18 0-.304-.085-.304-.241 0-.044.015-.086.028-.128.442-1.334 1.67-2.186 3.508-2.186 1.837 0 2.843.71 2.843 2.428 0 .326-.04.739-.112 1.122l-.372 2.07c-.083.484-.207 1.22-.207 1.718 0 .256-.111.341-.318.341h-1.284c-.192 0-.303-.1-.303-.282 0-.17.04-.37.068-.554-.524.539-1.2.978-2.401.978-1.422 0-2.333-.725-2.333-1.986V8.3m4.914-1.205.055-.256-.373.041c-.745.085-2.375.2-2.375 1.205 0 .525.372.78.966.78 1.103 0 1.505-.78 1.725-1.773zm2.475 2.695 1.16-6.798c.028-.2.152-.298.344-.298h1.421c.22 0 .318.142.275.356l-.11.666c.357-.524 1.13-1.193 2.4-1.193 1.382 0 2.182.88 2.182 2.256 0 .269-.029.54-.083.866l-.731 4.2c-.028.198-.152.298-.344.298h-1.519c-.22 0-.332-.141-.29-.353l.566-3.25c.083-.482.11-.851.11-1.121 0-.766-.274-1.179-.95-1.179-.898 0-1.436.725-1.671 2.086l-.608 3.52c-.028.197-.152.297-.344.297h-1.519c-.22 0-.332-.141-.29-.353m8.063-2.824c0-2.384 1.588-4.456 4.35-4.456 2.14 0 3.45 1.22 3.45 3.42 0 .256-.014.483-.04.71-.028.2-.152.297-.344.297h-5.233c.028 1.051.496 1.689 1.56 1.689.538 0 .91-.198 1.214-.51a.47.47 0 0 1 .387-.186h1.67c.193 0 .305.057.305.2 0 .042-.015.1-.069.198-.705 1.25-1.836 2.071-3.671 2.071-2.098 0-3.576-1.178-3.576-3.434zm5.591-1.405c0-.908-.484-1.476-1.421-1.476-1.009 0-1.616.71-1.78 1.476h3.203zm34.293-.611-1.504 2.6-.764-2.579a.195.195 0 0 0-.185-.141h-1.355a.15.15 0 0 0-.14.195l1.367 4.343-1.236 2.046c-.06.099.009.227.123.227h1.462a.24.24 0 0 0 .206-.12l3.817-6.465a.148.148 0 0 0-.126-.225h-1.46a.23.23 0 0 0-.204.119zM62.935 12c-.135 0-.206-.063-.206-.168 0-.032.01-.074.03-.116l.66-1.613-1.947-5.21c-.03-.084-.052-.126-.052-.189 0-.105.083-.136.216-.136h.7c.135 0 .227.073.268.2l.937 2.816c.176.527.299.886.433 1.329h.02c.176-.517.268-.823.454-1.36l.957-2.785q.078-.202.278-.2h.629c.134 0 .227.041.227.147a.5.5 0 0 1-.052.169l-2.699 6.927c-.051.127-.134.19-.268.19h-.587zm-4.082-1.772c-.927 0-1.524-.422-1.833-.906v.537c0 .158-.083.243-.237.243h-.505c-.154 0-.237-.085-.237-.243V2.803c0-.158.083-.243.237-.243h.577c.154 0 .237.085.237.243v1.381c0 .38 0 .697-.01 1.086.308-.454.906-.875 1.761-.875 1.535 0 2.523 1.244 2.523 2.921s-1.03 2.911-2.513 2.911m-.205-.876c1.009 0 1.596-.801 1.596-2.025s-.597-2.035-1.606-2.035-1.606.855-1.606 2.035.597 2.025 1.617 2.025zm12.82-1.666c1.397 0 2.58-1.043 2.796-2.454.218-1.424-.87-2.666-2.408-2.67h-2.482a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.194zm1.1-2.52c-.082.527-.479.915-1.24.915h-.972l.294-1.916h.955c.788 0 1.044.475.962 1zm7.386-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.656 1.918 0 0-.638 1.929.803 2.988 0 0 1.336 1.019 2.842-.063l-.026.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.182.182 0 0 0-.178-.214zm-1.831 2.72c-.108.705-.675 1.225-1.4 1.225a1.3 1.3 0 0 1-.393-.058c-.537-.178-.844-.705-.757-1.28.108-.706.676-1.226 1.403-1.226q.216 0 .392.06c.54.178.843.707.755 1.28zm11.3.136c1.396 0 2.58-1.043 2.795-2.454.218-1.424-.87-2.666-2.408-2.67h-2.48a.2.2 0 0 0-.192.17l-1.107 7.19a.18.18 0 0 0 .178.212h1.315a.2.2 0 0 0 .191-.169l.326-2.111a.2.2 0 0 1 .19-.17h1.19v.002zm1.101-2.52c-.082.527-.478.915-1.239.915h-.972l.294-1.916h.955c.786 0 1.043.475.962 1zm7.387-.336h-1.246a.2.2 0 0 0-.191.169l-.042.266s-.968-1.082-2.68-.352c-.982.42-1.455 1.287-1.655 1.918 0 0-.639 1.929.803 2.988 0 0 1.337 1.019 2.842-.063l-.027.17a.18.18 0 0 0 .178.211h1.246a.2.2 0 0 0 .191-.169l.76-4.924a.183.183 0 0 0-.18-.214m-1.831 2.72c-.109.705-.674 1.225-1.4 1.225q-.216 0-.392-.058c-.537-.178-.845-.705-.757-1.28.108-.706.677-1.226 1.402-1.226q.216 0 .392.06c.537.178.843.707.756 1.28zm3.233-4.82L98.206 9.92a.18.18 0 0 0 .178.212h1.314a.2.2 0 0 0 .192-.169l1.107-7.19a.18.18 0 0 0-.178-.213h-1.315a.2.2 0 0 0-.191.17\"\n            fill=\"#333333\"\n        />\n    </svg>\n);\n\nexport default withIconContainer(IconPayPalFastlane);\n","import React from 'react';\n\nimport { IconPayPalFastlane } from '@bigcommerce/checkout/ui';\n\nimport './PoweredByPayPalFastlaneLabel.scss';\n\nconst PoweredByPayPalFastlaneLabel = () => (\n    <div className=\"powered-by-paypal-fastlane\" data-test=\"paypal-fastlane-icon\">\n        <IconPayPalFastlane />\n    </div>\n);\n\nexport default PoweredByPayPalFastlaneLabel;\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isBraintreeFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.Braintree || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.BraintreeAcceleratedCheckout\n    );\n};\n\nexport default isBraintreeFastlaneMethod;\n","import {\n    CardInstrument,\n    CustomerAddress,\n    PaymentProviderCustomer,\n} from '@bigcommerce/checkout-sdk';\n\ninterface PayPalFastlaneCustomer {\n    authenticationState?: string;\n    addresses?: CustomerAddress[];\n    instruments?: CardInstrument[];\n}\n\nexport default function isPayPalFastlaneCustomer(\n    customer?: PaymentProviderCustomer,\n): customer is PayPalFastlaneCustomer {\n    if (!customer) {\n        return false;\n    }\n\n    return (\n        'authenticationState' in customer || 'addresses' in customer || 'instruments' in customer\n    );\n}\n","import { PaymentMethodId } from '@bigcommerce/checkout/payment-integration-api';\n\nconst isPayPalCommerceFastlaneMethod = (methodId?: string): boolean => {\n    return (\n        methodId === PaymentMethodId.PaypalCommerceCreditCards || // TODO: remove after A/B testing\n        methodId === PaymentMethodId.PayPalCommerceAcceleratedCheckout\n    );\n};\n\nexport default isPayPalCommerceFastlaneMethod;\n","import isBraintreeFastlaneMethod from './is-braintree-fastlane-method';\nimport isPayPalCommerceFastlaneMethod from './is-paypal-commerce-fastlane-method';\n\nconst isPaypalFastlaneMethod = (methodId?: string): boolean => {\n    return isBraintreeFastlaneMethod(methodId) || isPayPalCommerceFastlaneMethod(methodId);\n};\n\nexport default isPaypalFastlaneMethod;\n","import { useCheckout } from '@bigcommerce/checkout/payment-integration-api';\n\nimport isPayPalFastlaneCustomer from './is-paypal-fastlane-customer';\nimport isPayPalFastlaneMethod from './is-paypal-fastlane-method';\n\nconst usePayPalFastlaneAddress = () => {\n    const { checkoutState } = useCheckout();\n    const { getConfig, getPaymentProviderCustomer } = checkoutState.data;\n    const paymentWithCustomCheckout =\n        getConfig()?.checkoutSettings.providerWithCustomCheckout || '';\n\n    const isPayPalFastlaneEnabled = isPayPalFastlaneMethod(paymentWithCustomCheckout);\n\n    const paymentProviderCustomer = getPaymentProviderCustomer();\n    const paypalFastlaneCustomer = isPayPalFastlaneCustomer(paymentProviderCustomer)\n        ? paymentProviderCustomer\n        : {};\n\n    const customerAuthenticationState =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        paymentProviderCustomer?.authenticationState;\n\n    const paypalFastlaneAddresses = paypalFastlaneCustomer.addresses || [];\n\n    const shouldShowPayPalFastlaneLabel =\n        paypalFastlaneAddresses.length > 0 && isPayPalFastlaneEnabled;\n\n    const shouldShowPayPalFastlaneShippingForm =\n        paypalFastlaneAddresses.length > 0 &&\n        customerAuthenticationState &&\n        customerAuthenticationState !== 'CANCELED' &&\n        customerAuthenticationState !== 'unrecognized';\n\n    return {\n        isPayPalFastlaneEnabled,\n        paypalFastlaneAddresses,\n        shouldShowPayPalFastlaneLabel,\n        shouldShowPayPalFastlaneShippingForm,\n    };\n};\n\nexport default usePayPalFastlaneAddress;\n","import React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\nconst AddressFormSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading,\n    renderWhileLoading,\n}) => {\n    const skeleton = (\n        <div className=\"checkout-form\">\n            <div className=\"form-legend-container\">\n                <div className=\"address-form-heading-skeleton form-legend optimizedCheckout-headingSecondary\" />\n            </div>\n            <div className=\"address-form-skeleton\">\n                <div className=\"name-fields-skeleton\">\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                    <div className=\"skeleton-container\">\n                        <div className=\"input-skeleton\" />\n                    </div>\n                </div>\n                <div className=\"skeleton-container\">\n                    <div className=\"input-skeleton\" />\n                </div>\n            </div>\n        </div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, renderWhileLoading, skeleton }} />;\n};\n\nexport default AddressFormSkeleton;\n","import classNames from 'classnames';\nimport React, { FunctionComponent } from 'react';\n\nimport { LoadingSkeleton, LoadingSkeletonProps } from './LoadingSkeleton';\n\ninterface ChecklistSkeletonProps {\n    additionalClassName?: string;\n    rows?: number;\n}\n\nconst ChecklistSkeleton: FunctionComponent<LoadingSkeletonProps & ChecklistSkeletonProps> = ({\n    additionalClassName,\n    children,\n    isLoading = true,\n    rows = 3,\n}) => {\n    const content = [];\n\n    for (let i = 0; i < rows; i += 1) {\n        content.push(\n            <div className=\"skeleton-container\" key={`checklist-skeleton-item${i}`}>\n                <div className=\"checklist-skeleton-circle\" />\n                <div className=\"checklist-skeleton-rectangle\" />\n            </div>,\n        );\n    }\n\n    const skeleton = (\n        <div className={classNames(additionalClassName, 'checklist-skeleton')}>{content}</div>\n    );\n\n    return <LoadingSkeleton {...{ children, isLoading, skeleton }} />;\n};\n\nexport default ChecklistSkeleton;\n","import React, { FunctionComponent, ReactNode } from 'react';\n\nexport interface LoadingSkeletonProps {\n    isLoading?: boolean;\n    renderWhileLoading?: boolean;\n    skeleton?: ReactNode;\n}\n\nexport const LoadingSkeleton: FunctionComponent<LoadingSkeletonProps> = ({\n    children,\n    isLoading = true,\n    renderWhileLoading = false,\n    skeleton,\n}) => {\n    const shouldShowChildren = renderWhileLoading || !isLoading;\n\n    return (\n        <>\n            {isLoading && skeleton}\n            {Boolean(children) && shouldShowChildren && (\n                <div\n                    className=\"loading-skeleton\"\n                    style={\n                        isLoading ? { position: 'absolute', left: '0%', top: '-300%' } : undefined\n                    }\n                >\n                    {children}\n                </div>\n            )}\n        </>\n    );\n};\n","import { isFunction, noop } from 'lodash';\nimport React, { createContext, FunctionComponent, memo, ReactNode, useMemo, useState } from 'react';\n\nexport interface FormContextType {\n    isSubmitted: boolean;\n    setSubmitted(isSubmitted: boolean): void;\n}\n\nexport const FormContext = createContext<FormContextType>({\n    isSubmitted: false,\n    setSubmitted: noop,\n});\n\ntype FormContextFunction = (props: FormContextType) => ReactNode;\n\nexport interface FormProviderProps {\n    initialIsSubmitted?: boolean;\n    children: ReactNode | FormContextFunction;\n}\n\nexport const FormProvider: FunctionComponent<FormProviderProps> = memo(\n    ({ children, initialIsSubmitted = false }) => {\n        const [isSubmitted, setSubmitted] = useState(initialIsSubmitted);\n        const contextValue = useMemo(() => ({ isSubmitted, setSubmitted }), [isSubmitted]);\n\n        return (\n            <FormContext.Provider value={contextValue}>\n                {isFunction(children) ? children({ isSubmitted, setSubmitted }) : children}\n            </FormContext.Provider>\n        );\n    },\n);\n\nexport default FormContext;\n","import classNames from 'classnames';\nimport React, { ComponentType, memo } from 'react';\n\nexport enum IconSize {\n    Regular = 'regular',\n    Small = 'small',\n    Medium = 'medium',\n    Large = 'large',\n}\n\nexport interface IconProps {\n    additionalClassName?: string;\n    size?: IconSize;\n    testId?: string;\n}\n\nexport default function withIconContainer<TProps extends Record<string, any>>(\n    OriginalComponent: ComponentType<TProps>,\n): ComponentType<TProps & IconProps> {\n    return memo(({ additionalClassName, size, testId, ...rest }) => (\n        <div\n            className={classNames(\n                'icon',\n                additionalClassName,\n                size === IconSize.Small ? 'icon--small' : null,\n                size === IconSize.Large ? 'icon--large' : null,\n                size === IconSize.Medium ? 'icon--medium' : null,\n            )}\n            data-test={testId}\n        >\n            <OriginalComponent {...(rest as TProps)} />\n        </div>\n    ));\n}\n","import React, { FunctionComponent, ReactNode, Suspense } from 'react';\n\nimport { ErrorBoundary } from '@bigcommerce/checkout/error-handling-utils';\nimport { TranslatedString } from '@bigcommerce/checkout/locale';\n\nimport './LazyContainer.scss';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LazyContainerProps {\n    children: ReactNode;\n    loadingSkeleton?: ReactNode;\n}\n\nconst filterError = (error: Error) => error.name === 'ChunkLoadError';\n\nconst LazyContainer: FunctionComponent<LazyContainerProps> = ({ loadingSkeleton, children }) => (\n    <ErrorBoundary\n        fallback={\n            <div className=\"lazyContainer-error\">\n                <TranslatedString id=\"common.unstable_network_error\" />\n            </div>\n        }\n        filter={filterError}\n    >\n        <Suspense fallback={loadingSkeleton || <LoadingSpinner isLoading />}>{children}</Suspense>\n    </ErrorBoundary>\n);\n\nexport default LazyContainer;\n","import React, { FunctionComponent } from 'react';\n\nimport LoadingSpinner from './LoadingSpinner';\n\nexport interface LoadingOverlayProps {\n    isLoading: boolean;\n    hideContentWhenLoading?: boolean;\n    unmountContentWhenLoading?: boolean;\n}\n\nconst LoadingOverlay: FunctionComponent<LoadingOverlayProps> = ({\n    children,\n    hideContentWhenLoading,\n    unmountContentWhenLoading,\n    isLoading,\n}) => {\n    if (hideContentWhenLoading || unmountContentWhenLoading) {\n        return (\n            <>\n                <LoadingSpinner isLoading={isLoading} />\n                {unmountContentWhenLoading && isLoading ? null : (\n                    <div\n                        style={{\n                            display: hideContentWhenLoading && isLoading ? 'none' : undefined,\n                        }}\n                    >\n                        {children}\n                    </div>\n                )}\n            </>\n        );\n    }\n\n    return (\n        <div className=\"loadingOverlay-container\">\n            {children}\n            {isLoading && (\n                <div\n                    className=\"loadingOverlay optimizedCheckout-overlay\"\n                    data-test=\"loading-overlay\"\n                />\n            )}\n        </div>\n    );\n};\n\nexport default LoadingOverlay;\n","import React, { FunctionComponent, memo } from 'react';\n\nexport interface LoadingSpinnerProps {\n    isLoading: boolean;\n}\n\nconst LoadingSpinner: FunctionComponent<LoadingSpinnerProps> = ({ isLoading }) => {\n    if (!isLoading) {\n        return null;\n    }\n\n    return (\n        <div\n            aria-busy=\"true\"\n            className=\"loadingSpinner loadingOverlay-container\"\n            role=\"status\"\n            style={{ height: 100 }}\n        >\n            <div className=\"loadingOverlay optimizedCheckout-overlay\" />\n        </div>\n    );\n};\n\nexport default memo(LoadingSpinner);\n"],"names":["createContext","undefined","createAnalyticsService","createFn","createArguments","analyticsTracker","checkoutService","children","getStepTracker","useMemo","createStepTracker","getBodlService","createBodlService","subscribe","getBraintreeAnalyticTracker","createBraintreeAnalyticTracker","getPayPalCommerceAnalyticTracker","createPayPalCommerceAnalyticTracker","checkoutBegin","trackCheckoutStarted","trackStepCompleted","currentStep","stepCompleted","trackStepViewed","step","orderPurchased","trackOrderComplete","customerEmailEntry","email","customerSuggestionInit","payload","customerSuggestionExecute","customerPaymentMethodExecuted","showShippingMethods","selectedPaymentMethod","methodName","methodId","clickPayButton","paymentRejected","paymentComplete","exitCheckout","walletButtonClick","AnalyticsContext","A","Provider","value","ExtensionRegionContainer","extensionRegionToContainerMap","ShippingShippingAddressFormBefore","ShippingShippingAddressFormAfter","ShippingSelectedShippingMethod","SummaryAfter","SummaryLastItemAfter","Extension","region","getExtensions","getConfig","getCheckout","extensions","config","checkout","extensionService","extensionContext","useContext","ExtensionContext","Error","useExtensions","isRegionEnabled","containerId","useEffect","renderExtension","removeListeners","id","extensionReducer","state","action","type","ExtensionActionType","SHOW_LOADING_INDICATOR","isShowingLoadingIndicator","RE_RENDER_SHIPPING_FORM","shippingFormRenderTimestamp","createReloadCheckoutHandler","commandType","ExtensionCommandType","ReloadCheckout","handler","loadCheckout","getState","data","params","include","createSetIframeStyleHandler","extension","SetIframeStyle","style","extensionContainer","document","querySelector","iframe","Object","assign","createShowLoadingIndicatorHandler","dispatch","ShowLoadingIndicator","show","createReRenderShippingFormHandler","ReRenderShippingForm","Date","now","createGetConsignmentHandler","queryType","ExtensionQueryType","GetConsignments","useCache","consignments","postMessageToExtension","errorLogger","handlers","loadExtensions","this","preloadExtensions","cartId","getCart","parentOrigin","links","siteLink","forEach","url","URL","searchParams","set","link","createElement","rel","as","href","toString","head","appendChild","container","getExtensionByRegion","registerHandlers","log","errorCode","extensionId","clearExtensionCache","removers","remover","Boolean","handlerProps","values","createCommandHandlerFactory","handlerFactory","isCommandHandler","push","handleExtensionCommand","createQueryHandlerFactory","isQueryHandler","handleExtensionQuery","ExtensionProvider","useReducer","extensionState","extensionValues","ExtensionService","AddressType","address","countries","country","find","code","countryCode","states","isEmpty","subdivisions","stateOrProvinceCode","localizedCountry","name","localizedProvince","stateOrProvince","withCheckout","context","getBillingCountries","getShippingCountries","Billing","memo","addressWithoutLocalization","className","firstName","lastName","phone","company","address1","address2","city","postalCode","WHITELIST_REGEXP","memoize","formFields","translate","filter","reduce","schema","required","label","maxLength","trim","max","matches","concat","getCustomFormFieldsValidationSchema","getTranslateAddressError","language","requiredFieldErrorTranslationIds","min","getFormFieldsValidationSchema","isValidAddress","isValidSync","mapAddressToFormValues","fields","addressFormValues","fieldName","custom","fieldType","defaultValue","customFields","field","fieldValue","getValue","shouldSaveAddress","date","checkbox","getDefaultValue","split","year","month","day","Number","displayNamePrefix","normalizeAddress","omit","addresses","length","some","paypalFastlaneAddress","bcAddress","isEqual","isEqualToPayPalFastlaneAddress","checkoutState","getBillingAddressFields","payments","paypalFastlaneAddresses","usePayPalFastlaneAddress","showPayPalFastlaneLabel","payment","providerId","TranslatedString","StaticAddress","PoweredByPayPalFastlaneLabel","isSupported","message","EmbeddedCheckoutUnsupportedError","prototype","CustomError","unsupportedMethods","langService","ids","indexOf","methods","join","UNSUPPORTED_METHODS","withExtension","createInjectHoc","role","isWaiting","componentDidMount","waitInterval","props","waitToken","setTimeout","setState","componentWillUnmount","clearInterval","render","loginUrl","LoadingOverlay","hideContentWhenLoading","isLoading","TranslatedHtml","PureComponent","CustomerViewType","buttonsCount","skeleton","Array","fill","map","_v","i","key","LoadingSkeleton","renderWhileLoading","SUPPORTED_METHODS","getSupportedMethodIds","methodIds","checkoutSettings","isBrowserSupported","window","isApplePayWindow","shouldFilterApplePay","isExperimentEnabled","initialize","isShowingWalletButtonsOnTop","onError","onClick","noop","heightOption","buttonHeight","deinitialize","navigateToOrderConfirmation","orderId","isBuyNowCart","location","pathname","replace","Promise","rest","localeContext","LocaleContext","initializeOptions","useCallback","options","applepay","shippingLabel","subtotalLabel","onPaymentAuthorize","onComplete","paypalCommerceIds","getCustomer","isPaymentDataRequired","isInitializedCustomer","getInitializeCustomerError","providers","remoteCheckoutProviders","availableMethodIds","customer","isGuest","checkEmbeddedSupport","isPaymentStepActive","onUnhandledError","onWalletButtonClick","error","position","left","top","includes","isPayPalCommerce","resolveId","ResolvedCheckoutButton","resolveComponent","deinitializeCustomer","initializeCustomer","analyticsContext","isExecutingPaymentMethodCheckout","executePaymentMethodCheckout","useState","showSuggestion","setShowSuggestion","bolt","onInit","hasBoltAccount","fn","event","stopPropagation","provider","providerFlow","Button","IconBolt","additionalClassName","providerWithCustomCheckout","PaymentMethodId","Bolt","SUPPORTED_SIGNOUT_METHODS","isSupportedSignoutMethod","canSignOut","every","getBillingAddress","isSigningOut","billingAddress","logoutLink","isRedirectExperimentEnabled","isSignedIn","shouldRedirectToStorefrontForAuth","signOut","signOutCustomer","stripeLinkMinAmount","cart","cartAmount","isStripeLinkMinAmount","beautifyAmazonButton","amazonButton","shadowRoot","height","isInitializing","hideText","supportedMethodIds","EMAIL_REGEXP","getEmailValidationSchema","getTranslateCreateCustomerError","passwordRequirements","description","numeric","alpha","minLength","password","getAcceptsMarketingEmailsDefault","defaultShouldSubscribe","requiresMarketingConsent","withLanguage","withFormik","handleSubmit","onSubmit","mapPropsToValues","acceptsMarketingEmails","validationSchema","requirements","getCreateCustomerValidationSchema","getPasswordRequirements","fixNewsletterCheckboxExperimentEnabled","createAccountError","isCreatingAccount","onCancel","isFloatingLabelEnabled","createAccountErrorMessage","isRequestError","status","splitMessage","updatedItems","items","item","transformFormFieldsData","Form","testId","Fieldset","Alert","DynamicFormField","autocomplete","extraClass","parentFieldName","disabled","variant","Primary","preventDefault","translatedString","parsedString","parseAnchor","onChange","renderInput","TextInput","autoComplete","labelContent","FormField","input","onSendLoginEmail","isOpen","isSendingEmail","emailHasBeenRequested","onRequestClose","sentEmailError","sentEmail","submitForm","formEmail","modalHeaderStringId","okButton","footer","LoadingSpinner","sent_email","form","expiry","minutes","Math","round","Modal","additionalBodyClassName","additionalModalClassName","header","ModalHeader","shouldShowCloseButton","isFastlaneHostWindow","hasOwnProperty","getPaymentMethod","paymentMethod","shouldRenderFastlaneWatermark","initializationData","isFastlanePrivacySettingEnabled","braintreeFastlane","paypalFastlane","FastlaneWatermarkComponent","includeAdditionalInfo","then","result","PrivacyPolicyCheckboxFieldLink","CheckboxFormField","PrivacyPolicyFieldset","PrivacyPolicyAutoConsent","getPrivacyPolicyValidationSchema","isRequired","schemaFields","privacyPolicy","oneOf","Input","checked","Label","htmlFor","setSubscribeStatus","shouldSubscribe","sessionStorage","setItem","getSubscribeStatus","getItem","removeSubscribeStatus","removeItem","getShouldSubscribeValue","SubscribeSessionStorage","onContinueAsGuest","privacyPolicyUrl","isExpressPrivacyPolicy","baseSchema","canSubscribe","checkoutButtons","continueAsGuestButtonLabelId","onChangeEmail","onShowLogin","shouldShowEmailWatermark","renderField","fieldProps","checkoutLink","loginLink","legend","Legend","hidden","BasicFormField","tabIndex","withIconContainer","viewBox","xmlns","d","Toggle","openByDefault","toggle","onSignIn","canCancel","forgotPasswordUrl","isSignInEmailEnabled","isSigningIn","onCreateAccount","signInError","shouldShowCreateAccountLink","viewType","Login","changeEmailLink","body","mapErrorMessage","SuggestedLogin","Info","CancellableEnforcedLogin","EnforcedLogin","target","mapCreateAccountFromFormValues","mapCustomFormFieldsFromFormValues","setStatus","valSuccess","continueAsAGuestButton","setContinueAsAGuestButton","emailValue","setEmailValue","authentication","setAuthentication","isStripeLoading","setIsStripeLoading","isNewAuth","setIsNewAuth","handleOnClickSubmitButton","setEmailCallback","authenticated","isComplete","handleLoading","mounted","stripeupe","onEmailChange","getStyles","getStripeStyles","gatewayId","getStylesFromElement","properties","parentContainer","getElementById","getAppliedStyles","formInput","formLabel","formError","labelText","color","fieldText","fieldPlaceholderText","fieldErrorText","fieldBackground","fieldInnerShadow","fieldBorder","buttonText","display","placeholder","isEmailLoginFormOpen","isReady","hasRequestedLoginEmail","closeEmailLoginFormForm","handleEmailLoginClicked","draftEmail","handleSendLoginEmail","sendLoginEmail","handleContinueAsGuest","formValues","continueAsGuest","hasBillingId","onChangeViewType","onContinueAsGuestError","onSubscribeToNewsletter","updateSubscriptionWhenUnchecked","acceptsMarketingNewsletter","acceptsAbandonedCartEmails","paymentProviderCustomer","getPaymentProviderCustomer","shouldEncourageSignIn","stripeLinkAuthenticationState","executePaymentMethodCheckoutOrContinue","isErrorWithType","handleSignIn","credentials","signIn","onSignInError","handleCreateAccount","createAccount","onAccountCreated","showCreateAccount","CreateAccount","handleCancelCreateAccount","clearError","handleCancelSignIn","Guest","handleChangeEmail","handleShowLogin","StripeUPE","continueWithCheckoutCallback","checkoutPaymentMethodExecuted","onReady","shouldRenderGuestForm","shouldRenderCreateAccountForm","shouldRenderLoginForm","renderEmailLoginLinkForm","renderLoginForm","renderGuestForm","renderCreateAccountForm","checkoutButtonIds","isContinuingAsGuest","isSubscribed","isWalletButtonsOnTop","shouldRenderStripeForm","isLoadingGuestForm","isSendingSignInEmail","signInEmailError","signInEmail","customerAccountFields","isEmbedded","isGuestEnabled","isAccountCreationEnabled","Component","withAnalytics","getCustomerAccountFields","getSignInEmail","getSignInError","getSignInEmailError","getCreateCustomerAccountError","isInitializingCustomer","isCreatingCustomerAccount","features","PaypalCommerce","PaypalCommerceCreditCards","PayPalCommerceAcceleratedCheckout","Braintree","BraintreeAcceleratedCheckout","getProviderWithCustomCheckout","shopperConfig","showNewsletterSignup","createCustomerAccount","sendSignInEmail","defaultNewsletterSignup","forgotPasswordLink","guestCheckoutEnabled","signInCustomer","Customer","width","icon","dangerouslySetInnerHTML","__html","sanitize","banners","promotion","banner","index","text","hasUnassignedLineItems","lineItems","total","consignment","lineItemIds","physicalItems","addedByPromotion","isUsingMultiShipping","getLanguageService","title","ShippingOptionExpiredError","heading","isActive","isEditable","onEdit","summary","fontFamily","size","Tiny","Secondary","isClosed","containerRef","createRef","contentRef","handleTransitionEnd","node","done","addEventListener","onAnimationEnd","focusStep","componentDidUpdate","prevProps","timeoutRef","clearTimeout","suggestion","ref","renderContent","isBusy","MobileView","matched","CSSTransition","addEndListener","classNames","enter","exit","in","mountOnEnter","onExited","timeout","unmountOnExit","delay","matchMedia","getTransitionDelay","getChildInput","getScrollPosition","onExpanded","focus","isNaN","scrollTo","current","getParentContainer","topOffset","innerHeight","getBoundingClientRect","scrollY","pageYOffset","parentElement","classList","contains","timeoutDelay","parseFloat","getComputedStyle","transitionDuration","CheckoutStepType","getCustomerStepStatus","createSelector","hasEmail","isUsingWallet","isUsingStripeLinkAndCheckoutPageIsReloaded","shouldUseStripeLinkByMinimumAmount","getStripeLinkAndCheckoutPageIsReloaded","getBillingStepStatus","billingAddressFields","hasAddress","billingAddressCustomFields","hasCustomFields","isAmazonPayBillingStepComplete","startsWith","getCustomShippingStepStatus","getShippingAddress","getConsignments","_shippingAddress","hasUnselectedShippingOption","selectedShippingOption","Shipping","getPaymentStepStatus","getOrder","order","Payment","getOrderSubmitStatus","isSubmittingOrder","customerStep","shippingStep","billingStep","paymentStep","orderStatus","steps","compact","defaultActiveStep","isPrevStepComplete","slice","prevStep","hasFirearms","pickupAtSS","handleSetPickupAtSS","setPickupAtSS","setCustomFFL","setSelectedFFL","e","customFFLData","handleCustomFFLInputChange","customFFL","setCustomFFLData","prev","isChecked","marginRight","ffl","handleSelectFFL","shootStraightIds","ffls","selectedFFL","setIsOpen","selectorRef","useRef","handleOptionClick","shootStraightLocations","handleClickOutside","removeEventListener","fflLocations","handleInputChange","formState","homeAddress","setHomeAddress","savedAddress","handleContinue","validationError","createConsignments","selectConsignmentShippingOption","updateCheckout","onContinue","lineItemAllocations","setValidationError","setFFLLocations","defaultAddress","categoryNames","showManualAddressInputs","fflItems","homeItems","category","quantity","itemId","fflitems","getFFLItemIDs","selectShippingOptionsForConsignments","isFFL","optionId","showFFLSelector","emptyFields","requiredFields","customFFLFields","fflFields","homeFields","getEmptyRequiredFields","itemsToFFL","buildConsignments","response","currentConsignments","lazy","retry","CartSummary","CartSummaryDrawer","isBillingSameAsShipping","isCartEmpty","isRedirecting","isMultiShippingMode","hasSelectedShippingOptions","buttonConfigs","navigateToNextIncompleteStep","activeStepIndex","findIndex","activeStep","previousStep","navigateToStep","embeddedMessenger","postComplete","embeddedSupport","handleCartChangedError","handleConsignmentsUpdated","prevHasSelectedShippingOptions","activeStepType","defaultStepType","newHasSelectedShippingOptions","isDefaultStepPaymentOrBilling","isShippingStepFinished","handleCloseErrorModal","handleExpanded","handleUnhandledError","handleError","postError","handleEditStep","handleReady","isDefault","handleNewsletterSubscription","subscribed","handleSignOut","cartUrl","isPriceHiddenFromGuests","postSignedOut","setCustomerViewType","customerViewType","createAccountUrl","handleBeforeExit","handleWalletButtonClick","unsubscribeFromConsignments","checkoutId","createEmbeddedMessenger","embeddedStylesheet","loadPaymentMethodByIds","subscribeToConsignments","all","supportedProviders","configs","getPaymentMethods","errorFlashMessages","getFlashMessages","messenger","receiveStyles","styles","append","postFrameLoaded","contentId","postLoaded","hasMultiShippingEnabled","checkoutBillingSameAsShippingEnabled","defaultNewsletterSignupOption","errorModal","isCustomError","ErrorModal","onClose","isPending","promotions","renderStep","renderCartSummary","renderCustomerStep","renderShippingStep","renderBillingStep","renderPaymentStep","onSignOut","onSignOutError","LazyContainer","loadingSkeleton","AddressFormSkeleton","CustomShippingStep","StaticBillingAddress","navigateNextStep","ChecklistSkeleton","onCartChangedError","onFinalize","onSubmitError","backgroundColor","border","borderRadius","padding","margin","maxWidth","boxShadow","fontSize","lineHeight","marginBottom","marginTop","errors","statuses","submitOrderError","getSubmitOrderError","checkoutUserExperienceSettings","walletButtonsOnTop","floatingLabelEnabled","createAccountLink","cartLink","displaySettings","hidePriceFromGuests","subscribeToConsignmentsSelector","subscriber","walletButtonsOnTopFlag","isShippingDiscountDisplayEnabled","hasCartChanged","isLoadingCheckout","Checkout","createCheckoutService","locale","getLocale","shouldWarnMutation","createEmbeddedCheckoutStylesheet","createErrorLogger","sentry","sentryConfig","errorTypes","publicPath","sampleRate","sentrySampleRate","ErrorBoundary","logger","LocaleProvider","CheckoutProvider","AnalyticsProvider","createEmbeddedCheckoutMessenger","ContextComponent","CheckoutContext","mapToPropsOrFactory","OriginalComponent","InnerDecoratedComponent","DecoratedComponent","mapToProps","isMapToPropsFactory","mappedProps","mergedProps","displayName","captureStackTrace","stack","setDefaultValues","defaultError","defaultTitle","aria","labelledby","handleOnRequestClose","nativeEvent","renderFooter","renderHeader","renderBody","IconError","Small","shouldBeTranslatedAsHtml","isHtmlError","translationKey","renderErrorCode","shouldShowErrorCode","headers","computeErrorCode","toUpperCase","setPrototypeOf","object","__proto__","customConsole","console","tags","level","meta","info","Warning","warn","SeverityLevelEnum","FILENAME_PREFIX","handleBeforeSend","hint","exception","shouldReportExceptions","originalException","handleRewriteFrame","frame","filename","RegExp","consoleLogger","beforeSend","denyUrls","integrations","GlobalHandlers","onerror","onunhandledrejection","iteratee","scope","setTags","setLevel","mapToSentryLevel","setExtras","setFingerprint","INFO","WARNING","Debug","DEBUG","ERROR","exceptions","stacktrace","frames","serviceConfig","customError","obj","call","isResolvableComponent","query","components","results","entries","resolveIds","resolverId","component","default","sort","a","b","EMPTY_ARRAY","freeze","lastPathName","pop","experimentName","DEFAULT_OPTIONS","count","interval","resolve","getPasswordRequirementsFromConfig","minlength","allSlashes","toCSSRule","selector","mergedStyles","pickBy","kebabCase","parse","rules","secondaryText","secondaryHeading","hover","button","active","secondaryButton","select","radio","checklist","discountBanner","loadingBanner","orderSummary","embeddedCheckoutStyleParser","_parser","sheet","CSSStyleSheet","rule","insertRule","appendStylesheet","maxValue","minValue","nullable","transform","originalValue","requiredErrorMessage","customFieldsObject","forIn","isDate","padMonth","padStart","getMonth","padDay","getDate","getFullYear","fieldId","toResolvableComponent","checkoutButtonContainerClass","catch","HTMLElement","hasProto","isGiftCertificatePayment","path","currentScript","src","configurePublicPath","scriptPath","substr","renderCheckout","configuredPublicPath","CheckoutApp","renderOrderConfirmation","OrderConfirmationApp","requestSender","create","put","renderPasswordInput","renderPasswordConfirmationInput","passwordLabelContent","passwordConfirmationLabelContent","confirmPassword","onSignUp","isSigningUp","customerCanBeCreated","Success","AccountCreationRequirementsError","AccountCreationFailedError","isDefaultOrderPayment","isStoreCreditPayment","gatewayPayment","detail","instructions","mapFromPayments","amount","remaining","used","balance","purchaseDate","getStoreCreditAmount","mapToOrderSummarySubtotalsProps","baseAmount","discountAmount","isTaxIncluded","shippingCostBeforeDiscount","handlingCostTotal","giftWrappingCostTotal","coupons","taxes","fees","shippingAmount","shipping","discounts","discount","getTotalAutomaticDiscount","getOrderShippingCostAfterAutomaticDiscount","subtotalAmount","shippingAmountBeforeDiscount","giftWrappingAmount","storeCreditAmount","handlingAmount","giftCertificates","MandateTextComponent","mandateText","keys","PaymentsWithMandates","paymentsWithMandates","mandate","isPaymentWithMandate","OrderStatusMessage","orderNumber","supportEmail","supportPhoneNumber","hasDigitalItems","isDownloadable","handleClick","throttle","print","OrderSummary","OrderSummaryDrawer","handleErrorModalClose","handleSignUp","hasSignedUp","loadOrder","isLoadingOrder","paymentInstructions","orderEmail","storePhoneNumber","renderGuestSignUp","shouldShowPasswordForm","customerId","method","renderOrderSummary","renderErrorModal","currency","shopperCurrency","headerLink","storeCurrency","orderAmount","OrderConfirmation","accountService","newsletter","AlertType","renderDefaultIcon","ButtonVariant","ButtonSize","getClassName","isFullWidth","Action","Large","InnerField","InnerFieldInput","hasError","getIn","prevForm","prevField","nextForm","nextField","nextProps","getTime","renderInnerField","Field","errorId","forwardRef","withDate","inputFormat","handleDateChange","dateValue","DynamicFormFieldType","dropdown","IconChevronDown","optionValue","CheckboxInput","isArray","calendarClassName","dateFormat","maxDate","minDate","placeholderText","popperClassName","selected","multiline","TextArea","onSelectedAll","onSelectedNone","handleSelectAllClick","handleSelectNoneClick","MultiCheckboxFormField","remove","handleSelectAll","checkedValues","difference","val","handleSelectNone","FormFieldContainer","FormFieldError","renderProps","pick","FieldArray","secret","fieldLabel","inputId","fieldInputId","isFloatingLabelSupportedFieldType","labelComponent","dynamicFormFieldType","number","telephone","helperLabel","rows","focusOnError","erroredFormField","preventScroll","offsetParent","scrollIntoView","behavior","block","inline","handleSubmitCapture","memoizeOne","setSubmitted","noValidate","onSubmitCapture","Consumer","isSubmitted","renderMessage","ErrorMessage","appearFocused","IconSize","Medium","closeButtonLabel","additionalHeaderClassName","handleClose","ariaHideApp","bodyOpenClassName","base","afterOpen","beforeClose","closeTimeoutMS","overlayClassName","shouldCloseOnEsc","shouldCloseOnOverlayClick","queries","mobile","MOBILE_MAX_WIDTH","SMALL_SCREEN_MAX_WIDTH","element","declaration","propertyName","getPropertyValue","div","innerHTML","anchor","anchorSiblings","outerHTML","getDerivedStateFromError","componentDidCatch","fallback","ErrorLevelType","pickProps","injectedProps","useLocale","languageService","getContextValue","createCurrencyService","inputDateFormat","unsubscribe","ADD_ATTR","FALLBACK_LOCALE","createLanguageService","fallbackLocale","fallbackTranslations","initializeLanguageService","defaultLocale","defaultTranslations","useCheckout","isPayPalFastlaneCustomer","paymentWithCustomCheckout","isPayPalFastlaneEnabled","paypalFastlaneCustomer","customerAuthenticationState","authenticationState","shouldShowPayPalFastlaneLabel","shouldShowPayPalFastlaneShippingForm","content","shouldShowChildren","FormContext","FormProvider","initialIsSubmitted","contextValue","isFunction","filterError","Suspense","unmountContentWhenLoading"],"sourceRoot":""}